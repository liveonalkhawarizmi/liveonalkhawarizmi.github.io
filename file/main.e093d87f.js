const lr=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function n(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerpolicy&&(r.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?r.credentials="include":i.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(i){if(i.ep)return;i.ep=!0;const r=n(i);fetch(i.href,r)}};lr();function c6(e,t){const n=Object.create(null),s=e.split(",");for(let i=0;i<s.length;i++)n[s[i]]=!0;return t?i=>!!n[i.toLowerCase()]:i=>!!n[i]}const ar="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",cr=c6(ar);function N8(e){return!!e||e===""}function u6(e){if(G(e)){const t={};for(let n=0;n<e.length;n++){const s=e[n],i=z1(s)?fr(s):u6(s);if(i)for(const r in i)t[r]=i[r]}return t}else{if(z1(e))return e;if(O1(e))return e}}const ur=/;(?![^(]*\))/g,hr=/:(.+)/;function fr(e){const t={};return e.split(ur).forEach(n=>{if(n){const s=n.split(hr);s.length>1&&(t[s[0].trim()]=s[1].trim())}}),t}function h6(e){let t="";if(z1(e))t=e;else if(G(e))for(let n=0;n<e.length;n++){const s=h6(e[n]);s&&(t+=s+" ")}else if(O1(e))for(const n in e)e[n]&&(t+=n+" ");return t.trim()}const Up=e=>z1(e)?e:e==null?"":G(e)||O1(e)&&(e.toString===R8||!W(e.toString))?JSON.stringify(e,D8,2):String(e),D8=(e,t)=>t&&t.__v_isRef?D8(e,t.value):q3(t)?{[`Map(${t.size})`]:[...t.entries()].reduce((n,[s,i])=>(n[`${s} =>`]=i,n),{})}:k8(t)?{[`Set(${t.size})`]:[...t.values()]}:O1(t)&&!G(t)&&!O8(t)?String(t):t,E1={},K3=[],T2=()=>{},dr=()=>!1,pr=/^on[^a-z]/,o4=e=>pr.test(e),f6=e=>e.startsWith("onUpdate:"),G1=Object.assign,d6=(e,t)=>{const n=e.indexOf(t);n>-1&&e.splice(n,1)},mr=Object.prototype.hasOwnProperty,n1=(e,t)=>mr.call(e,t),G=Array.isArray,q3=e=>l4(e)==="[object Map]",k8=e=>l4(e)==="[object Set]",W=e=>typeof e=="function",z1=e=>typeof e=="string",p6=e=>typeof e=="symbol",O1=e=>e!==null&&typeof e=="object",m6=e=>O1(e)&&W(e.then)&&W(e.catch),R8=Object.prototype.toString,l4=e=>R8.call(e),gr=e=>l4(e).slice(8,-1),O8=e=>l4(e)==="[object Object]",g6=e=>z1(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,De=c6(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),a4=e=>{const t=Object.create(null);return n=>t[n]||(t[n]=e(n))},vr=/-(\w)/g,O2=a4(e=>e.replace(vr,(t,n)=>n?n.toUpperCase():"")),yr=/\B([A-Z])/g,ct=a4(e=>e.replace(yr,"-$1").toLowerCase()),c4=a4(e=>e.charAt(0).toUpperCase()+e.slice(1)),j4=a4(e=>e?`on${c4(e)}`:""),Bt=(e,t)=>!Object.is(e,t),H4=(e,t)=>{for(let n=0;n<e.length;n++)e[n](t)},Le=(e,t,n)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:n})},M8=e=>{const t=parseFloat(e);return isNaN(t)?e:t};let Pn;const wr=()=>Pn||(Pn=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});let N2;class Er{constructor(t=!1){this.active=!0,this.effects=[],this.cleanups=[],!t&&N2&&(this.parent=N2,this.index=(N2.scopes||(N2.scopes=[])).push(this)-1)}run(t){if(this.active){const n=N2;try{return N2=this,t()}finally{N2=n}}}on(){N2=this}off(){N2=this.parent}stop(t){if(this.active){let n,s;for(n=0,s=this.effects.length;n<s;n++)this.effects[n].stop();for(n=0,s=this.cleanups.length;n<s;n++)this.cleanups[n]();if(this.scopes)for(n=0,s=this.scopes.length;n<s;n++)this.scopes[n].stop(!0);if(this.parent&&!t){const i=this.parent.scopes.pop();i&&i!==this&&(this.parent.scopes[this.index]=i,i.index=this.index)}this.active=!1}}}function br(e,t=N2){t&&t.active&&t.effects.push(e)}const v6=e=>{const t=new Set(e);return t.w=0,t.n=0,t},P8=e=>(e.w&t3)>0,z8=e=>(e.n&t3)>0,_r=({deps:e})=>{if(e.length)for(let t=0;t<e.length;t++)e[t].w|=t3},Tr=e=>{const{deps:t}=e;if(t.length){let n=0;for(let s=0;s<t.length;s++){const i=t[s];P8(i)&&!z8(i)?i.delete(e):t[n++]=i,i.w&=~t3,i.n&=~t3}t.length=n}},p5=new WeakMap;let xt=0,t3=1;const m5=30;let b2;const y3=Symbol(""),g5=Symbol("");class y6{constructor(t,n=null,s){this.fn=t,this.scheduler=n,this.active=!0,this.deps=[],this.parent=void 0,br(this,s)}run(){if(!this.active)return this.fn();let t=b2,n=Q2;for(;t;){if(t===this)return;t=t.parent}try{return this.parent=b2,b2=this,Q2=!0,t3=1<<++xt,xt<=m5?_r(this):zn(this),this.fn()}finally{xt<=m5&&Tr(this),t3=1<<--xt,b2=this.parent,Q2=n,this.parent=void 0,this.deferStop&&this.stop()}}stop(){b2===this?this.deferStop=!0:this.active&&(zn(this),this.onStop&&this.onStop(),this.active=!1)}}function zn(e){const{deps:t}=e;if(t.length){for(let n=0;n<t.length;n++)t[n].delete(e);t.length=0}}let Q2=!0;const L8=[];function ut(){L8.push(Q2),Q2=!1}function ht(){const e=L8.pop();Q2=e===void 0?!0:e}function c2(e,t,n){if(Q2&&b2){let s=p5.get(e);s||p5.set(e,s=new Map);let i=s.get(n);i||s.set(n,i=v6()),F8(i)}}function F8(e,t){let n=!1;xt<=m5?z8(e)||(e.n|=t3,n=!P8(e)):n=!e.has(b2),n&&(e.add(b2),b2.deps.push(e))}function $2(e,t,n,s,i,r){const o=p5.get(e);if(!o)return;let l=[];if(t==="clear")l=[...o.values()];else if(n==="length"&&G(e))o.forEach((a,c)=>{(c==="length"||c>=s)&&l.push(a)});else switch(n!==void 0&&l.push(o.get(n)),t){case"add":G(e)?g6(n)&&l.push(o.get("length")):(l.push(o.get(y3)),q3(e)&&l.push(o.get(g5)));break;case"delete":G(e)||(l.push(o.get(y3)),q3(e)&&l.push(o.get(g5)));break;case"set":q3(e)&&l.push(o.get(y3));break}if(l.length===1)l[0]&&v5(l[0]);else{const a=[];for(const c of l)c&&a.push(...c);v5(v6(a))}}function v5(e,t){const n=G(e)?e:[...e];for(const s of n)s.computed&&Ln(s);for(const s of n)s.computed||Ln(s)}function Ln(e,t){(e!==b2||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}const xr=c6("__proto__,__v_isRef,__isVue"),B8=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(p6)),Cr=w6(),Ir=w6(!1,!0),Sr=w6(!0),Fn=Ar();function Ar(){const e={};return["includes","indexOf","lastIndexOf"].forEach(t=>{e[t]=function(...n){const s=a1(this);for(let r=0,o=this.length;r<o;r++)c2(s,"get",r+"");const i=s[t](...n);return i===-1||i===!1?s[t](...n.map(a1)):i}}),["push","pop","shift","unshift","splice"].forEach(t=>{e[t]=function(...n){ut();const s=a1(this)[t].apply(this,n);return ht(),s}}),e}function w6(e=!1,t=!1){return function(s,i,r){if(i==="__v_isReactive")return!e;if(i==="__v_isReadonly")return e;if(i==="__v_isShallow")return t;if(i==="__v_raw"&&r===(e?t?Hr:H8:t?j8:U8).get(s))return s;const o=G(s);if(!e&&o&&n1(Fn,i))return Reflect.get(Fn,i,r);const l=Reflect.get(s,i,r);return(p6(i)?B8.has(i):xr(i))||(e||c2(s,"get",i),t)?l:K1(l)?o&&g6(i)?l:l.value:O1(l)?e?K8(l):ft(l):l}}const Nr=V8(),Dr=V8(!0);function V8(e=!1){return function(n,s,i,r){let o=n[s];if(Vt(o)&&K1(o)&&!K1(i))return!1;if(!e&&!Vt(i)&&(y5(i)||(i=a1(i),o=a1(o)),!G(n)&&K1(o)&&!K1(i)))return o.value=i,!0;const l=G(n)&&g6(s)?Number(s)<n.length:n1(n,s),a=Reflect.set(n,s,i,r);return n===a1(r)&&(l?Bt(i,o)&&$2(n,"set",s,i):$2(n,"add",s,i)),a}}function kr(e,t){const n=n1(e,t);e[t];const s=Reflect.deleteProperty(e,t);return s&&n&&$2(e,"delete",t,void 0),s}function Rr(e,t){const n=Reflect.has(e,t);return(!p6(t)||!B8.has(t))&&c2(e,"has",t),n}function Or(e){return c2(e,"iterate",G(e)?"length":y3),Reflect.ownKeys(e)}const $8={get:Cr,set:Nr,deleteProperty:kr,has:Rr,ownKeys:Or},Mr={get:Sr,set(e,t){return!0},deleteProperty(e,t){return!0}},Pr=G1({},$8,{get:Ir,set:Dr}),E6=e=>e,u4=e=>Reflect.getPrototypeOf(e);function ye(e,t,n=!1,s=!1){e=e.__v_raw;const i=a1(e),r=a1(t);n||(t!==r&&c2(i,"get",t),c2(i,"get",r));const{has:o}=u4(i),l=s?E6:n?T6:$t;if(o.call(i,t))return l(e.get(t));if(o.call(i,r))return l(e.get(r));e!==i&&e.get(t)}function we(e,t=!1){const n=this.__v_raw,s=a1(n),i=a1(e);return t||(e!==i&&c2(s,"has",e),c2(s,"has",i)),e===i?n.has(e):n.has(e)||n.has(i)}function Ee(e,t=!1){return e=e.__v_raw,!t&&c2(a1(e),"iterate",y3),Reflect.get(e,"size",e)}function Bn(e){e=a1(e);const t=a1(this);return u4(t).has.call(t,e)||(t.add(e),$2(t,"add",e,e)),this}function Vn(e,t){t=a1(t);const n=a1(this),{has:s,get:i}=u4(n);let r=s.call(n,e);r||(e=a1(e),r=s.call(n,e));const o=i.call(n,e);return n.set(e,t),r?Bt(t,o)&&$2(n,"set",e,t):$2(n,"add",e,t),this}function $n(e){const t=a1(this),{has:n,get:s}=u4(t);let i=n.call(t,e);i||(e=a1(e),i=n.call(t,e)),s&&s.call(t,e);const r=t.delete(e);return i&&$2(t,"delete",e,void 0),r}function Un(){const e=a1(this),t=e.size!==0,n=e.clear();return t&&$2(e,"clear",void 0,void 0),n}function be(e,t){return function(s,i){const r=this,o=r.__v_raw,l=a1(o),a=t?E6:e?T6:$t;return!e&&c2(l,"iterate",y3),o.forEach((c,u)=>s.call(i,a(c),a(u),r))}}function _e(e,t,n){return function(...s){const i=this.__v_raw,r=a1(i),o=q3(r),l=e==="entries"||e===Symbol.iterator&&o,a=e==="keys"&&o,c=i[e](...s),u=n?E6:t?T6:$t;return!t&&c2(r,"iterate",a?g5:y3),{next(){const{value:h,done:f}=c.next();return f?{value:h,done:f}:{value:l?[u(h[0]),u(h[1])]:u(h),done:f}},[Symbol.iterator](){return this}}}}function H2(e){return function(...t){return e==="delete"?!1:this}}function zr(){const e={get(r){return ye(this,r)},get size(){return Ee(this)},has:we,add:Bn,set:Vn,delete:$n,clear:Un,forEach:be(!1,!1)},t={get(r){return ye(this,r,!1,!0)},get size(){return Ee(this)},has:we,add:Bn,set:Vn,delete:$n,clear:Un,forEach:be(!1,!0)},n={get(r){return ye(this,r,!0)},get size(){return Ee(this,!0)},has(r){return we.call(this,r,!0)},add:H2("add"),set:H2("set"),delete:H2("delete"),clear:H2("clear"),forEach:be(!0,!1)},s={get(r){return ye(this,r,!0,!0)},get size(){return Ee(this,!0)},has(r){return we.call(this,r,!0)},add:H2("add"),set:H2("set"),delete:H2("delete"),clear:H2("clear"),forEach:be(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(r=>{e[r]=_e(r,!1,!1),n[r]=_e(r,!0,!1),t[r]=_e(r,!1,!0),s[r]=_e(r,!0,!0)}),[e,n,t,s]}const[Lr,Fr,Br,Vr]=zr();function b6(e,t){const n=t?e?Vr:Br:e?Fr:Lr;return(s,i,r)=>i==="__v_isReactive"?!e:i==="__v_isReadonly"?e:i==="__v_raw"?s:Reflect.get(n1(n,i)&&i in s?n:s,i,r)}const $r={get:b6(!1,!1)},Ur={get:b6(!1,!0)},jr={get:b6(!0,!1)},U8=new WeakMap,j8=new WeakMap,H8=new WeakMap,Hr=new WeakMap;function Kr(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function qr(e){return e.__v_skip||!Object.isExtensible(e)?0:Kr(gr(e))}function ft(e){return Vt(e)?e:_6(e,!1,$8,$r,U8)}function Gr(e){return _6(e,!1,Pr,Ur,j8)}function K8(e){return _6(e,!0,Mr,jr,H8)}function _6(e,t,n,s,i){if(!O1(e)||e.__v_raw&&!(t&&e.__v_isReactive))return e;const r=i.get(e);if(r)return r;const o=qr(e);if(o===0)return e;const l=new Proxy(e,o===2?s:n);return i.set(e,l),l}function G3(e){return Vt(e)?G3(e.__v_raw):!!(e&&e.__v_isReactive)}function Vt(e){return!!(e&&e.__v_isReadonly)}function y5(e){return!!(e&&e.__v_isShallow)}function q8(e){return G3(e)||Vt(e)}function a1(e){const t=e&&e.__v_raw;return t?a1(t):e}function G8(e){return Le(e,"__v_skip",!0),e}const $t=e=>O1(e)?ft(e):e,T6=e=>O1(e)?K8(e):e;function W8(e){Q2&&b2&&(e=a1(e),F8(e.dep||(e.dep=v6())))}function Q8(e,t){e=a1(e),e.dep&&v5(e.dep)}function K1(e){return!!(e&&e.__v_isRef===!0)}function Wr(e){return X8(e,!1)}function Qr(e){return X8(e,!0)}function X8(e,t){return K1(e)?e:new Xr(e,t)}class Xr{constructor(t,n){this.__v_isShallow=n,this.dep=void 0,this.__v_isRef=!0,this._rawValue=n?t:a1(t),this._value=n?t:$t(t)}get value(){return W8(this),this._value}set value(t){t=this.__v_isShallow?t:a1(t),Bt(t,this._rawValue)&&(this._rawValue=t,this._value=this.__v_isShallow?t:$t(t),Q8(this))}}function g2(e){return K1(e)?e.value:e}const Yr={get:(e,t,n)=>g2(Reflect.get(e,t,n)),set:(e,t,n,s)=>{const i=e[t];return K1(i)&&!K1(n)?(i.value=n,!0):Reflect.set(e,t,n,s)}};function Y8(e){return G3(e)?e:new Proxy(e,Yr)}class Jr{constructor(t,n,s,i){this._setter=n,this.dep=void 0,this.__v_isRef=!0,this._dirty=!0,this.effect=new y6(t,()=>{this._dirty||(this._dirty=!0,Q8(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!i,this.__v_isReadonly=s}get value(){const t=a1(this);return W8(t),(t._dirty||!t._cacheable)&&(t._dirty=!1,t._value=t.effect.run()),t._value}set value(t){this._setter(t)}}function Zr(e,t,n=!1){let s,i;const r=W(e);return r?(s=e,i=T2):(s=e.get,i=e.set),new Jr(s,i,r||!i,n)}function X2(e,t,n,s){let i;try{i=s?e(...s):e()}catch(r){ie(r,t,n)}return i}function v2(e,t,n,s){if(W(e)){const r=X2(e,t,n,s);return r&&m6(r)&&r.catch(o=>{ie(o,t,n)}),r}const i=[];for(let r=0;r<e.length;r++)i.push(v2(e[r],t,n,s));return i}function ie(e,t,n,s=!0){const i=t?t.vnode:null;if(t){let r=t.parent;const o=t.proxy,l=n;for(;r;){const c=r.ec;if(c){for(let u=0;u<c.length;u++)if(c[u](e,o,l)===!1)return}r=r.parent}const a=t.appContext.config.errorHandler;if(a){X2(a,null,10,[e,o,l]);return}}to(e,n,i,s)}function to(e,t,n,s=!0){console.error(e)}let Fe=!1,w5=!1;const l2=[];let F2=0;const At=[];let Ct=null,B3=0;const Nt=[];let q2=null,V3=0;const J8=Promise.resolve();let x6=null,E5=null;function Z8(e){const t=x6||J8;return e?t.then(this?e.bind(this):e):t}function eo(e){let t=F2+1,n=l2.length;for(;t<n;){const s=t+n>>>1;Ut(l2[s])<e?t=s+1:n=s}return t}function ts(e){(!l2.length||!l2.includes(e,Fe&&e.allowRecurse?F2+1:F2))&&e!==E5&&(e.id==null?l2.push(e):l2.splice(eo(e.id),0,e),es())}function es(){!Fe&&!w5&&(w5=!0,x6=J8.then(rs))}function no(e){const t=l2.indexOf(e);t>F2&&l2.splice(t,1)}function ns(e,t,n,s){G(e)?n.push(...e):(!t||!t.includes(e,e.allowRecurse?s+1:s))&&n.push(e),es()}function so(e){ns(e,Ct,At,B3)}function ss(e){ns(e,q2,Nt,V3)}function h4(e,t=null){if(At.length){for(E5=t,Ct=[...new Set(At)],At.length=0,B3=0;B3<Ct.length;B3++)Ct[B3]();Ct=null,B3=0,E5=null,h4(e,t)}}function is(e){if(h4(),Nt.length){const t=[...new Set(Nt)];if(Nt.length=0,q2){q2.push(...t);return}for(q2=t,q2.sort((n,s)=>Ut(n)-Ut(s)),V3=0;V3<q2.length;V3++)q2[V3]();q2=null,V3=0}}const Ut=e=>e.id==null?1/0:e.id;function rs(e){w5=!1,Fe=!0,h4(e),l2.sort((n,s)=>Ut(n)-Ut(s));const t=T2;try{for(F2=0;F2<l2.length;F2++){const n=l2[F2];n&&n.active!==!1&&X2(n,null,14)}}finally{F2=0,l2.length=0,is(),Fe=!1,x6=null,(l2.length||At.length||Nt.length)&&rs(e)}}function io(e,t,...n){if(e.isUnmounted)return;const s=e.vnode.props||E1;let i=n;const r=t.startsWith("update:"),o=r&&t.slice(7);if(o&&o in s){const u=`${o==="modelValue"?"model":o}Modifiers`,{number:h,trim:f}=s[u]||E1;f&&(i=n.map(m=>m.trim())),h&&(i=n.map(M8))}let l,a=s[l=j4(t)]||s[l=j4(O2(t))];!a&&r&&(a=s[l=j4(ct(t))]),a&&v2(a,e,6,i);const c=s[l+"Once"];if(c){if(!e.emitted)e.emitted={};else if(e.emitted[l])return;e.emitted[l]=!0,v2(c,e,6,i)}}function os(e,t,n=!1){const s=t.emitsCache,i=s.get(e);if(i!==void 0)return i;const r=e.emits;let o={},l=!1;if(!W(e)){const a=c=>{const u=os(c,t,!0);u&&(l=!0,G1(o,u))};!n&&t.mixins.length&&t.mixins.forEach(a),e.extends&&a(e.extends),e.mixins&&e.mixins.forEach(a)}return!r&&!l?(s.set(e,null),null):(G(r)?r.forEach(a=>o[a]=null):G1(o,r),s.set(e,o),o)}function f4(e,t){return!e||!o4(t)?!1:(t=t.slice(2).replace(/Once$/,""),n1(e,t[0].toLowerCase()+t.slice(1))||n1(e,ct(t))||n1(e,t))}let _2=null,d4=null;function Be(e){const t=_2;return _2=e,d4=e&&e.type.__scopeId||null,t}function ls(e){d4=e}function as(){d4=null}function C6(e,t=_2,n){if(!t||e._n)return e;const s=(...i)=>{s._d&&t7(-1);const r=Be(t),o=e(...i);return Be(r),s._d&&t7(1),o};return s._n=!0,s._c=!0,s._d=!0,s}function K4(e){const{type:t,vnode:n,proxy:s,withProxy:i,props:r,propsOptions:[o],slots:l,attrs:a,emit:c,render:u,renderCache:h,data:f,setupState:m,ctx:v,inheritAttrs:A}=e;let x,S;const _=Be(e);try{if(n.shapeFlag&4){const U=i||s;x=E2(u.call(U,U,h,r,m,f,v)),S=a}else{const U=t;x=E2(U.length>1?U(r,{attrs:a,slots:l,emit:c}):U(r,null)),S=t.props?a:oo(a)}}catch(U){Dt.length=0,ie(U,e,1),x=_1(a2)}let O=x;if(S&&A!==!1){const U=Object.keys(S),{shapeFlag:Q}=O;U.length&&Q&7&&(o&&U.some(f6)&&(S=lo(S,o)),O=e3(O,S))}return n.dirs&&(O=e3(O),O.dirs=O.dirs?O.dirs.concat(n.dirs):n.dirs),n.transition&&(O.transition=n.transition),x=O,Be(_),x}function ro(e){let t;for(let n=0;n<e.length;n++){const s=e[n];if(Ue(s)){if(s.type!==a2||s.children==="v-if"){if(t)return;t=s}}else return}return t}const oo=e=>{let t;for(const n in e)(n==="class"||n==="style"||o4(n))&&((t||(t={}))[n]=e[n]);return t},lo=(e,t)=>{const n={};for(const s in e)(!f6(s)||!(s.slice(9)in t))&&(n[s]=e[s]);return n};function ao(e,t,n){const{props:s,children:i,component:r}=e,{props:o,children:l,patchFlag:a}=t,c=r.emitsOptions;if(t.dirs||t.transition)return!0;if(n&&a>=0){if(a&1024)return!0;if(a&16)return s?jn(s,o,c):!!o;if(a&8){const u=t.dynamicProps;for(let h=0;h<u.length;h++){const f=u[h];if(o[f]!==s[f]&&!f4(c,f))return!0}}}else return(i||l)&&(!l||!l.$stable)?!0:s===o?!1:s?o?jn(s,o,c):!0:!!o;return!1}function jn(e,t,n){const s=Object.keys(t);if(s.length!==Object.keys(e).length)return!0;for(let i=0;i<s.length;i++){const r=s[i];if(t[r]!==e[r]&&!f4(n,r))return!0}return!1}function I6({vnode:e,parent:t},n){for(;t&&t.subTree===e;)(e=t.vnode).el=n,t=t.parent}const co=e=>e.__isSuspense,uo={name:"Suspense",__isSuspense:!0,process(e,t,n,s,i,r,o,l,a,c){e==null?fo(t,n,s,i,r,o,l,a,c):po(e,t,n,s,i,o,l,a,c)},hydrate:mo,create:S6,normalize:go},ho=uo;function jt(e,t){const n=e.props&&e.props[t];W(n)&&n()}function fo(e,t,n,s,i,r,o,l,a){const{p:c,o:{createElement:u}}=a,h=u("div"),f=e.suspense=S6(e,i,s,t,h,n,r,o,l,a);c(null,f.pendingBranch=e.ssContent,h,null,s,f,r,o),f.deps>0?(jt(e,"onPending"),jt(e,"onFallback"),c(null,e.ssFallback,t,n,s,null,r,o),W3(f,e.ssFallback)):f.resolve()}function po(e,t,n,s,i,r,o,l,{p:a,um:c,o:{createElement:u}}){const h=t.suspense=e.suspense;h.vnode=t,t.el=e.el;const f=t.ssContent,m=t.ssFallback,{activeBranch:v,pendingBranch:A,isInFallback:x,isHydrating:S}=h;if(A)h.pendingBranch=f,D2(f,A)?(a(A,f,h.hiddenContainer,null,i,h,r,o,l),h.deps<=0?h.resolve():x&&(a(v,m,n,s,i,null,r,o,l),W3(h,m))):(h.pendingId++,S?(h.isHydrating=!1,h.activeBranch=A):c(A,i,h),h.deps=0,h.effects.length=0,h.hiddenContainer=u("div"),x?(a(null,f,h.hiddenContainer,null,i,h,r,o,l),h.deps<=0?h.resolve():(a(v,m,n,s,i,null,r,o,l),W3(h,m))):v&&D2(f,v)?(a(v,f,n,s,i,h,r,o,l),h.resolve(!0)):(a(null,f,h.hiddenContainer,null,i,h,r,o,l),h.deps<=0&&h.resolve()));else if(v&&D2(f,v))a(v,f,n,s,i,h,r,o,l),W3(h,f);else if(jt(t,"onPending"),h.pendingBranch=f,h.pendingId++,a(null,f,h.hiddenContainer,null,i,h,r,o,l),h.deps<=0)h.resolve();else{const{timeout:_,pendingId:O}=h;_>0?setTimeout(()=>{h.pendingId===O&&h.fallback(m)},_):_===0&&h.fallback(m)}}function S6(e,t,n,s,i,r,o,l,a,c,u=!1){const{p:h,m:f,um:m,n:v,o:{parentNode:A,remove:x}}=c,S=M8(e.props&&e.props.timeout),_={vnode:e,parent:t,parentComponent:n,isSVG:o,container:s,hiddenContainer:i,anchor:r,deps:0,pendingId:0,timeout:typeof S=="number"?S:-1,activeBranch:null,pendingBranch:null,isInFallback:!0,isHydrating:u,isUnmounted:!1,effects:[],resolve(O=!1){const{vnode:U,activeBranch:Q,pendingBranch:s1,pendingId:T1,effects:K,parentComponent:r1,container:u1}=_;if(_.isHydrating)_.isHydrating=!1;else if(!O){const J1=Q&&s1.transition&&s1.transition.mode==="out-in";J1&&(Q.transition.afterLeave=()=>{T1===_.pendingId&&f(s1,u1,h2,0)});let{anchor:h2}=_;Q&&(h2=v(Q),m(Q,r1,_,!0)),J1||f(s1,u1,h2,0)}W3(_,s1),_.pendingBranch=null,_.isInFallback=!1;let v1=_.parent,I1=!1;for(;v1;){if(v1.pendingBranch){v1.effects.push(...K),I1=!0;break}v1=v1.parent}I1||ss(K),_.effects=[],jt(U,"onResolve")},fallback(O){if(!_.pendingBranch)return;const{vnode:U,activeBranch:Q,parentComponent:s1,container:T1,isSVG:K}=_;jt(U,"onFallback");const r1=v(Q),u1=()=>{!_.isInFallback||(h(null,O,T1,r1,s1,null,K,l,a),W3(_,O))},v1=O.transition&&O.transition.mode==="out-in";v1&&(Q.transition.afterLeave=u1),_.isInFallback=!0,m(Q,s1,null,!0),v1||u1()},move(O,U,Q){_.activeBranch&&f(_.activeBranch,O,U,Q),_.container=O},next(){return _.activeBranch&&v(_.activeBranch)},registerDep(O,U){const Q=!!_.pendingBranch;Q&&_.deps++;const s1=O.vnode.el;O.asyncDep.catch(T1=>{ie(T1,O,0)}).then(T1=>{if(O.isUnmounted||_.isUnmounted||_.pendingId!==O.suspenseId)return;O.asyncResolved=!0;const{vnode:K}=O;A5(O,T1,!1),s1&&(K.el=s1);const r1=!s1&&O.subTree.el;U(O,K,A(s1||O.subTree.el),s1?null:v(O.subTree),_,o,a),r1&&x(r1),I6(O,K.el),Q&&--_.deps===0&&_.resolve()})},unmount(O,U){_.isUnmounted=!0,_.activeBranch&&m(_.activeBranch,n,O,U),_.pendingBranch&&m(_.pendingBranch,n,O,U)}};return _}function mo(e,t,n,s,i,r,o,l,a){const c=t.suspense=S6(t,s,n,e.parentNode,document.createElement("div"),null,i,r,o,l,!0),u=a(e,c.pendingBranch=t.ssContent,n,c,r,o);return c.deps===0&&c.resolve(),u}function go(e){const{shapeFlag:t,children:n}=e,s=t&32;e.ssContent=Hn(s?n.default:n),e.ssFallback=s?Hn(n.fallback):_1(a2)}function Hn(e){let t;if(W(e)){const n=Z3&&e._c;n&&(e._d=!1,P2()),e=e(),n&&(e._d=!0,t=m2,Ns())}return G(e)&&(e=ro(e)),e=E2(e),t&&!e.dynamicChildren&&(e.dynamicChildren=t.filter(n=>n!==e)),e}function vo(e,t){t&&t.pendingBranch?G(e)?t.effects.push(...e):t.effects.push(e):ss(e)}function W3(e,t){e.activeBranch=t;const{vnode:n,parentComponent:s}=e,i=n.el=t.el;s&&s.subTree===n&&(s.vnode.el=i,I6(s,i))}function ke(e,t){if(P1){let n=P1.provides;const s=P1.parent&&P1.parent.provides;s===n&&(n=P1.provides=Object.create(s)),n[e]=t}}function V2(e,t,n=!1){const s=P1||_2;if(s){const i=s.parent==null?s.vnode.appContext&&s.vnode.appContext.provides:s.parent.provides;if(i&&e in i)return i[e];if(arguments.length>1)return n&&W(t)?t.call(s.proxy):t}}const Kn={};function Q3(e,t,n){return cs(e,t,n)}function cs(e,t,{immediate:n,deep:s,flush:i,onTrack:r,onTrigger:o}=E1){const l=P1;let a,c=!1,u=!1;if(K1(e)?(a=()=>e.value,c=y5(e)):G3(e)?(a=()=>e,s=!0):G(e)?(u=!0,c=e.some(S=>G3(S)||y5(S)),a=()=>e.map(S=>{if(K1(S))return S.value;if(G3(S))return U3(S);if(W(S))return X2(S,l,2)})):W(e)?t?a=()=>X2(e,l,2):a=()=>{if(!(l&&l.isUnmounted))return h&&h(),v2(e,l,3,[f])}:a=T2,t&&s){const S=a;a=()=>U3(S())}let h,f=S=>{h=x.onStop=()=>{X2(S,l,4)}};if(Ht)return f=T2,t?n&&v2(t,l,3,[a(),u?[]:void 0,f]):a(),T2;let m=u?[]:Kn;const v=()=>{if(!!x.active)if(t){const S=x.run();(s||c||(u?S.some((_,O)=>Bt(_,m[O])):Bt(S,m)))&&(h&&h(),v2(t,l,3,[S,m===Kn?void 0:m,f]),m=S)}else x.run()};v.allowRecurse=!!t;let A;i==="sync"?A=v:i==="post"?A=()=>Z1(v,l&&l.suspense):A=()=>so(v);const x=new y6(a,A);return t?n?v():m=x.run():i==="post"?Z1(x.run.bind(x),l&&l.suspense):x.run(),()=>{x.stop(),l&&l.scope&&d6(l.scope.effects,x)}}function yo(e,t,n){const s=this.proxy,i=z1(e)?e.includes(".")?us(s,e):()=>s[e]:e.bind(s,s);let r;W(t)?r=t:(r=t.handler,n=t);const o=P1;n3(this);const l=cs(i,r.bind(s),n);return o?n3(o):Y2(),l}function us(e,t){const n=t.split(".");return()=>{let s=e;for(let i=0;i<n.length&&s;i++)s=s[n[i]];return s}}function U3(e,t){if(!O1(e)||e.__v_skip||(t=t||new Set,t.has(e)))return e;if(t.add(e),K1(e))U3(e.value,t);else if(G(e))for(let n=0;n<e.length;n++)U3(e[n],t);else if(k8(e)||q3(e))e.forEach(n=>{U3(n,t)});else if(O8(e))for(const n in e)U3(e[n],t);return e}function wo(){const e={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return ms(()=>{e.isMounted=!0}),gs(()=>{e.isUnmounting=!0}),e}const d2=[Function,Array],Eo={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:d2,onEnter:d2,onAfterEnter:d2,onEnterCancelled:d2,onBeforeLeave:d2,onLeave:d2,onAfterLeave:d2,onLeaveCancelled:d2,onBeforeAppear:d2,onAppear:d2,onAfterAppear:d2,onAppearCancelled:d2},setup(e,{slots:t}){const n=Os(),s=wo();let i;return()=>{const r=t.default&&fs(t.default(),!0);if(!r||!r.length)return;let o=r[0];if(r.length>1){for(const A of r)if(A.type!==a2){o=A;break}}const l=a1(e),{mode:a}=l;if(s.isLeaving)return q4(o);const c=qn(o);if(!c)return q4(o);const u=b5(c,l,s,n);_5(c,u);const h=n.subTree,f=h&&qn(h);let m=!1;const{getTransitionKey:v}=c.type;if(v){const A=v();i===void 0?i=A:A!==i&&(i=A,m=!0)}if(f&&f.type!==a2&&(!D2(c,f)||m)){const A=b5(f,l,s,n);if(_5(f,A),a==="out-in")return s.isLeaving=!0,A.afterLeave=()=>{s.isLeaving=!1,n.update()},q4(o);a==="in-out"&&c.type!==a2&&(A.delayLeave=(x,S,_)=>{const O=hs(s,f);O[String(f.key)]=f,x._leaveCb=()=>{S(),x._leaveCb=void 0,delete u.delayedLeave},u.delayedLeave=_})}return o}}},bo=Eo;function hs(e,t){const{leavingVNodes:n}=e;let s=n.get(t.type);return s||(s=Object.create(null),n.set(t.type,s)),s}function b5(e,t,n,s){const{appear:i,mode:r,persisted:o=!1,onBeforeEnter:l,onEnter:a,onAfterEnter:c,onEnterCancelled:u,onBeforeLeave:h,onLeave:f,onAfterLeave:m,onLeaveCancelled:v,onBeforeAppear:A,onAppear:x,onAfterAppear:S,onAppearCancelled:_}=t,O=String(e.key),U=hs(n,e),Q=(K,r1)=>{K&&v2(K,s,9,r1)},s1=(K,r1)=>{const u1=r1[1];Q(K,r1),G(K)?K.every(v1=>v1.length<=1)&&u1():K.length<=1&&u1()},T1={mode:r,persisted:o,beforeEnter(K){let r1=l;if(!n.isMounted)if(i)r1=A||l;else return;K._leaveCb&&K._leaveCb(!0);const u1=U[O];u1&&D2(e,u1)&&u1.el._leaveCb&&u1.el._leaveCb(),Q(r1,[K])},enter(K){let r1=a,u1=c,v1=u;if(!n.isMounted)if(i)r1=x||a,u1=S||c,v1=_||u;else return;let I1=!1;const J1=K._enterCb=h2=>{I1||(I1=!0,h2?Q(v1,[K]):Q(u1,[K]),T1.delayedLeave&&T1.delayedLeave(),K._enterCb=void 0)};r1?s1(r1,[K,J1]):J1()},leave(K,r1){const u1=String(e.key);if(K._enterCb&&K._enterCb(!0),n.isUnmounting)return r1();Q(h,[K]);let v1=!1;const I1=K._leaveCb=J1=>{v1||(v1=!0,r1(),J1?Q(v,[K]):Q(m,[K]),K._leaveCb=void 0,U[u1]===e&&delete U[u1])};U[u1]=e,f?s1(f,[K,I1]):I1()},clone(K){return b5(K,t,n,s)}};return T1}function q4(e){if(p4(e))return e=e3(e),e.children=null,e}function qn(e){return p4(e)?e.children?e.children[0]:void 0:e}function _5(e,t){e.shapeFlag&6&&e.component?_5(e.component.subTree,t):e.shapeFlag&128?(e.ssContent.transition=t.clone(e.ssContent),e.ssFallback.transition=t.clone(e.ssFallback)):e.transition=t}function fs(e,t=!1,n){let s=[],i=0;for(let r=0;r<e.length;r++){let o=e[r];const l=n==null?o.key:String(n)+String(o.key!=null?o.key:r);o.type===w2?(o.patchFlag&128&&i++,s=s.concat(fs(o.children,t,l))):(t||o.type!==a2)&&s.push(l!=null?e3(o,{key:l}):o)}if(i>1)for(let r=0;r<s.length;r++)s[r].patchFlag=-2;return s}function ds(e){return W(e)?{setup:e,name:e.name}:e}const Re=e=>!!e.type.__asyncLoader,p4=e=>e.type.__isKeepAlive;function _o(e,t){ps(e,"a",t)}function To(e,t){ps(e,"da",t)}function ps(e,t,n=P1){const s=e.__wdc||(e.__wdc=()=>{let i=n;for(;i;){if(i.isDeactivated)return;i=i.parent}return e()});if(m4(t,s,n),n){let i=n.parent;for(;i&&i.parent;)p4(i.parent.vnode)&&xo(s,t,n,i),i=i.parent}}function xo(e,t,n,s){const i=m4(t,e,s,!0);vs(()=>{d6(s[t],i)},n)}function m4(e,t,n=P1,s=!1){if(n){const i=n[e]||(n[e]=[]),r=t.__weh||(t.__weh=(...o)=>{if(n.isUnmounted)return;ut(),n3(n);const l=v2(t,n,e,o);return Y2(),ht(),l});return s?i.unshift(r):i.push(r),r}}const j2=e=>(t,n=P1)=>(!Ht||e==="sp")&&m4(e,t,n),Co=j2("bm"),ms=j2("m"),Io=j2("bu"),So=j2("u"),gs=j2("bum"),vs=j2("um"),Ao=j2("sp"),No=j2("rtg"),Do=j2("rtc");function ko(e,t=P1){m4("ec",e,t)}function u3(e,t,n,s){const i=e.dirs,r=t&&t.dirs;for(let o=0;o<i.length;o++){const l=i[o];r&&(l.oldValue=r[o].value);let a=l.dir[s];a&&(ut(),v2(a,n,8,[e.el,l,e,t]),ht())}}const ys="components";function ws(e,t){return Oo(ys,e,!0,t)||e}const Ro=Symbol();function Oo(e,t,n=!0,s=!1){const i=_2||P1;if(i){const r=i.type;if(e===ys){const l=ll(r,!1);if(l&&(l===t||l===O2(t)||l===c4(O2(t))))return r}const o=Gn(i[e]||r[e],t)||Gn(i.appContext[e],t);return!o&&s?r:o}}function Gn(e,t){return e&&(e[t]||e[O2(t)]||e[c4(O2(t))])}function jp(e,t,n,s){let i;const r=n&&n[s];if(G(e)||z1(e)){i=new Array(e.length);for(let o=0,l=e.length;o<l;o++)i[o]=t(e[o],o,void 0,r&&r[o])}else if(typeof e=="number"){i=new Array(e);for(let o=0;o<e;o++)i[o]=t(o+1,o,void 0,r&&r[o])}else if(O1(e))if(e[Symbol.iterator])i=Array.from(e,(o,l)=>t(o,l,void 0,r&&r[l]));else{const o=Object.keys(e);i=new Array(o.length);for(let l=0,a=o.length;l<a;l++){const c=o[l];i[l]=t(e[c],c,l,r&&r[l])}}else i=[];return n&&(n[s]=i),i}const T5=e=>e?Ms(e)?R6(e)||e.proxy:T5(e.parent):null,Ve=G1(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>T5(e.parent),$root:e=>T5(e.root),$emit:e=>e.emit,$options:e=>bs(e),$forceUpdate:e=>e.f||(e.f=()=>ts(e.update)),$nextTick:e=>e.n||(e.n=Z8.bind(e.proxy)),$watch:e=>yo.bind(e)}),Mo={get({_:e},t){const{ctx:n,setupState:s,data:i,props:r,accessCache:o,type:l,appContext:a}=e;let c;if(t[0]!=="$"){const m=o[t];if(m!==void 0)switch(m){case 1:return s[t];case 2:return i[t];case 4:return n[t];case 3:return r[t]}else{if(s!==E1&&n1(s,t))return o[t]=1,s[t];if(i!==E1&&n1(i,t))return o[t]=2,i[t];if((c=e.propsOptions[0])&&n1(c,t))return o[t]=3,r[t];if(n!==E1&&n1(n,t))return o[t]=4,n[t];x5&&(o[t]=0)}}const u=Ve[t];let h,f;if(u)return t==="$attrs"&&c2(e,"get",t),u(e);if((h=l.__cssModules)&&(h=h[t]))return h;if(n!==E1&&n1(n,t))return o[t]=4,n[t];if(f=a.config.globalProperties,n1(f,t))return f[t]},set({_:e},t,n){const{data:s,setupState:i,ctx:r}=e;return i!==E1&&n1(i,t)?(i[t]=n,!0):s!==E1&&n1(s,t)?(s[t]=n,!0):n1(e.props,t)||t[0]==="$"&&t.slice(1)in e?!1:(r[t]=n,!0)},has({_:{data:e,setupState:t,accessCache:n,ctx:s,appContext:i,propsOptions:r}},o){let l;return!!n[o]||e!==E1&&n1(e,o)||t!==E1&&n1(t,o)||(l=r[0])&&n1(l,o)||n1(s,o)||n1(Ve,o)||n1(i.config.globalProperties,o)},defineProperty(e,t,n){return n.get!=null?e._.accessCache[t]=0:n1(n,"value")&&this.set(e,t,n.value,null),Reflect.defineProperty(e,t,n)}};let x5=!0;function Po(e){const t=bs(e),n=e.proxy,s=e.ctx;x5=!1,t.beforeCreate&&Wn(t.beforeCreate,e,"bc");const{data:i,computed:r,methods:o,watch:l,provide:a,inject:c,created:u,beforeMount:h,mounted:f,beforeUpdate:m,updated:v,activated:A,deactivated:x,beforeDestroy:S,beforeUnmount:_,destroyed:O,unmounted:U,render:Q,renderTracked:s1,renderTriggered:T1,errorCaptured:K,serverPrefetch:r1,expose:u1,inheritAttrs:v1,components:I1,directives:J1,filters:h2}=t;if(c&&zo(c,s,null,e.appContext.config.unwrapInjectedRef),o)for(const y1 in o){const f1=o[y1];W(f1)&&(s[y1]=f1.bind(n))}if(i){const y1=i.call(n,n);O1(y1)&&(e.data=ft(y1))}if(x5=!0,r)for(const y1 in r){const f1=r[y1],r2=W(f1)?f1.bind(n,n):W(f1.get)?f1.get.bind(n,n):T2,O3=!W(f1)&&W(f1.set)?f1.set.bind(n):T2,z2=p2({get:r2,set:O3});Object.defineProperty(s,y1,{enumerable:!0,configurable:!0,get:()=>z2.value,set:I2=>z2.value=I2})}if(l)for(const y1 in l)Es(l[y1],s,n,y1);if(a){const y1=W(a)?a.call(n):a;Reflect.ownKeys(y1).forEach(f1=>{ke(f1,y1[f1])})}u&&Wn(u,e,"c");function k1(y1,f1){G(f1)?f1.forEach(r2=>y1(r2.bind(n))):f1&&y1(f1.bind(n))}if(k1(Co,h),k1(ms,f),k1(Io,m),k1(So,v),k1(_o,A),k1(To,x),k1(ko,K),k1(Do,s1),k1(No,T1),k1(gs,_),k1(vs,U),k1(Ao,r1),G(u1))if(u1.length){const y1=e.exposed||(e.exposed={});u1.forEach(f1=>{Object.defineProperty(y1,f1,{get:()=>n[f1],set:r2=>n[f1]=r2})})}else e.exposed||(e.exposed={});Q&&e.render===T2&&(e.render=Q),v1!=null&&(e.inheritAttrs=v1),I1&&(e.components=I1),J1&&(e.directives=J1)}function zo(e,t,n=T2,s=!1){G(e)&&(e=C5(e));for(const i in e){const r=e[i];let o;O1(r)?"default"in r?o=V2(r.from||i,r.default,!0):o=V2(r.from||i):o=V2(r),K1(o)&&s?Object.defineProperty(t,i,{enumerable:!0,configurable:!0,get:()=>o.value,set:l=>o.value=l}):t[i]=o}}function Wn(e,t,n){v2(G(e)?e.map(s=>s.bind(t.proxy)):e.bind(t.proxy),t,n)}function Es(e,t,n,s){const i=s.includes(".")?us(n,s):()=>n[s];if(z1(e)){const r=t[e];W(r)&&Q3(i,r)}else if(W(e))Q3(i,e.bind(n));else if(O1(e))if(G(e))e.forEach(r=>Es(r,t,n,s));else{const r=W(e.handler)?e.handler.bind(n):t[e.handler];W(r)&&Q3(i,r,e)}}function bs(e){const t=e.type,{mixins:n,extends:s}=t,{mixins:i,optionsCache:r,config:{optionMergeStrategies:o}}=e.appContext,l=r.get(t);let a;return l?a=l:!i.length&&!n&&!s?a=t:(a={},i.length&&i.forEach(c=>$e(a,c,o,!0)),$e(a,t,o)),r.set(t,a),a}function $e(e,t,n,s=!1){const{mixins:i,extends:r}=t;r&&$e(e,r,n,!0),i&&i.forEach(o=>$e(e,o,n,!0));for(const o in t)if(!(s&&o==="expose")){const l=Lo[o]||n&&n[o];e[o]=l?l(e[o],t[o]):t[o]}return e}const Lo={data:Qn,props:f3,emits:f3,methods:f3,computed:f3,beforeCreate:W1,created:W1,beforeMount:W1,mounted:W1,beforeUpdate:W1,updated:W1,beforeDestroy:W1,beforeUnmount:W1,destroyed:W1,unmounted:W1,activated:W1,deactivated:W1,errorCaptured:W1,serverPrefetch:W1,components:f3,directives:f3,watch:Bo,provide:Qn,inject:Fo};function Qn(e,t){return t?e?function(){return G1(W(e)?e.call(this,this):e,W(t)?t.call(this,this):t)}:t:e}function Fo(e,t){return f3(C5(e),C5(t))}function C5(e){if(G(e)){const t={};for(let n=0;n<e.length;n++)t[e[n]]=e[n];return t}return e}function W1(e,t){return e?[...new Set([].concat(e,t))]:t}function f3(e,t){return e?G1(G1(Object.create(null),e),t):t}function Bo(e,t){if(!e)return t;if(!t)return e;const n=G1(Object.create(null),e);for(const s in t)n[s]=W1(e[s],t[s]);return n}function Vo(e,t,n,s=!1){const i={},r={};Le(r,g4,1),e.propsDefaults=Object.create(null),_s(e,t,i,r);for(const o in e.propsOptions[0])o in i||(i[o]=void 0);n?e.props=s?i:Gr(i):e.type.props?e.props=i:e.props=r,e.attrs=r}function $o(e,t,n,s){const{props:i,attrs:r,vnode:{patchFlag:o}}=e,l=a1(i),[a]=e.propsOptions;let c=!1;if((s||o>0)&&!(o&16)){if(o&8){const u=e.vnode.dynamicProps;for(let h=0;h<u.length;h++){let f=u[h];if(f4(e.emitsOptions,f))continue;const m=t[f];if(a)if(n1(r,f))m!==r[f]&&(r[f]=m,c=!0);else{const v=O2(f);i[v]=I5(a,l,v,m,e,!1)}else m!==r[f]&&(r[f]=m,c=!0)}}}else{_s(e,t,i,r)&&(c=!0);let u;for(const h in l)(!t||!n1(t,h)&&((u=ct(h))===h||!n1(t,u)))&&(a?n&&(n[h]!==void 0||n[u]!==void 0)&&(i[h]=I5(a,l,h,void 0,e,!0)):delete i[h]);if(r!==l)for(const h in r)(!t||!n1(t,h)&&!0)&&(delete r[h],c=!0)}c&&$2(e,"set","$attrs")}function _s(e,t,n,s){const[i,r]=e.propsOptions;let o=!1,l;if(t)for(let a in t){if(De(a))continue;const c=t[a];let u;i&&n1(i,u=O2(a))?!r||!r.includes(u)?n[u]=c:(l||(l={}))[u]=c:f4(e.emitsOptions,a)||(!(a in s)||c!==s[a])&&(s[a]=c,o=!0)}if(r){const a=a1(n),c=l||E1;for(let u=0;u<r.length;u++){const h=r[u];n[h]=I5(i,a,h,c[h],e,!n1(c,h))}}return o}function I5(e,t,n,s,i,r){const o=e[n];if(o!=null){const l=n1(o,"default");if(l&&s===void 0){const a=o.default;if(o.type!==Function&&W(a)){const{propsDefaults:c}=i;n in c?s=c[n]:(n3(i),s=c[n]=a.call(null,t),Y2())}else s=a}o[0]&&(r&&!l?s=!1:o[1]&&(s===""||s===ct(n))&&(s=!0))}return s}function Ts(e,t,n=!1){const s=t.propsCache,i=s.get(e);if(i)return i;const r=e.props,o={},l=[];let a=!1;if(!W(e)){const u=h=>{a=!0;const[f,m]=Ts(h,t,!0);G1(o,f),m&&l.push(...m)};!n&&t.mixins.length&&t.mixins.forEach(u),e.extends&&u(e.extends),e.mixins&&e.mixins.forEach(u)}if(!r&&!a)return s.set(e,K3),K3;if(G(r))for(let u=0;u<r.length;u++){const h=O2(r[u]);Xn(h)&&(o[h]=E1)}else if(r)for(const u in r){const h=O2(u);if(Xn(h)){const f=r[u],m=o[h]=G(f)||W(f)?{type:f}:f;if(m){const v=Zn(Boolean,m.type),A=Zn(String,m.type);m[0]=v>-1,m[1]=A<0||v<A,(v>-1||n1(m,"default"))&&l.push(h)}}}const c=[o,l];return s.set(e,c),c}function Xn(e){return e[0]!=="$"}function Yn(e){const t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:e===null?"null":""}function Jn(e,t){return Yn(e)===Yn(t)}function Zn(e,t){return G(t)?t.findIndex(n=>Jn(n,e)):W(t)&&Jn(t,e)?0:-1}const xs=e=>e[0]==="_"||e==="$stable",A6=e=>G(e)?e.map(E2):[E2(e)],Uo=(e,t,n)=>{if(t._n)return t;const s=C6((...i)=>A6(t(...i)),n);return s._c=!1,s},Cs=(e,t,n)=>{const s=e._ctx;for(const i in e){if(xs(i))continue;const r=e[i];if(W(r))t[i]=Uo(i,r,s);else if(r!=null){const o=A6(r);t[i]=()=>o}}},Is=(e,t)=>{const n=A6(t);e.slots.default=()=>n},jo=(e,t)=>{if(e.vnode.shapeFlag&32){const n=t._;n?(e.slots=a1(t),Le(t,"_",n)):Cs(t,e.slots={})}else e.slots={},t&&Is(e,t);Le(e.slots,g4,1)},Ho=(e,t,n)=>{const{vnode:s,slots:i}=e;let r=!0,o=E1;if(s.shapeFlag&32){const l=t._;l?n&&l===1?r=!1:(G1(i,t),!n&&l===1&&delete i._):(r=!t.$stable,Cs(t,i)),o=t}else t&&(Is(e,t),o={default:1});if(r)for(const l in i)!xs(l)&&!(l in o)&&delete i[l]};function Ss(){return{app:null,config:{isNativeTag:dr,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Ko=0;function qo(e,t){return function(s,i=null){W(s)||(s=Object.assign({},s)),i!=null&&!O1(i)&&(i=null);const r=Ss(),o=new Set;let l=!1;const a=r.app={_uid:Ko++,_component:s,_props:i,_container:null,_context:r,_instance:null,version:cl,get config(){return r.config},set config(c){},use(c,...u){return o.has(c)||(c&&W(c.install)?(o.add(c),c.install(a,...u)):W(c)&&(o.add(c),c(a,...u))),a},mixin(c){return r.mixins.includes(c)||r.mixins.push(c),a},component(c,u){return u?(r.components[c]=u,a):r.components[c]},directive(c,u){return u?(r.directives[c]=u,a):r.directives[c]},mount(c,u,h){if(!l){const f=_1(s,i);return f.appContext=r,u&&t?t(f,c):e(f,c,h),l=!0,a._container=c,c.__vue_app__=a,R6(f.component)||f.component.proxy}},unmount(){l&&(e(null,a._container),delete a._container.__vue_app__)},provide(c,u){return r.provides[c]=u,a}};return a}}function S5(e,t,n,s,i=!1){if(G(e)){e.forEach((f,m)=>S5(f,t&&(G(t)?t[m]:t),n,s,i));return}if(Re(s)&&!i)return;const r=s.shapeFlag&4?R6(s.component)||s.component.proxy:s.el,o=i?null:r,{i:l,r:a}=e,c=t&&t.r,u=l.refs===E1?l.refs={}:l.refs,h=l.setupState;if(c!=null&&c!==a&&(z1(c)?(u[c]=null,n1(h,c)&&(h[c]=null)):K1(c)&&(c.value=null)),W(a))X2(a,l,12,[o,u]);else{const f=z1(a),m=K1(a);if(f||m){const v=()=>{if(e.f){const A=f?u[a]:a.value;i?G(A)&&d6(A,r):G(A)?A.includes(r)||A.push(r):f?(u[a]=[r],n1(h,a)&&(h[a]=u[a])):(a.value=[r],e.k&&(u[e.k]=a.value))}else f?(u[a]=o,n1(h,a)&&(h[a]=o)):m&&(a.value=o,e.k&&(u[e.k]=o))};o?(v.id=-1,Z1(v,n)):v()}}}const Z1=vo;function Go(e){return Wo(e)}function Wo(e,t){const n=wr();n.__VUE__=!0;const{insert:s,remove:i,patchProp:r,createElement:o,createText:l,createComment:a,setText:c,setElementText:u,parentNode:h,nextSibling:f,setScopeId:m=T2,cloneNode:v,insertStaticContent:A}=e,x=(d,p,g,E=null,w=null,I=null,R=!1,C=null,N=!!p.dynamicChildren)=>{if(d===p)return;d&&!D2(d,p)&&(E=L(d),f2(d,w,I,!0),d=null),p.patchFlag===-2&&(N=!1,p.dynamicChildren=null);const{type:b,ref:B,shapeFlag:P}=p;switch(b){case N6:S(d,p,g,E);break;case a2:_(d,p,g,E);break;case Oe:d==null&&O(p,g,E,R);break;case w2:J1(d,p,g,E,w,I,R,C,N);break;default:P&1?s1(d,p,g,E,w,I,R,C,N):P&6?h2(d,p,g,E,w,I,R,C,N):(P&64||P&128)&&b.process(d,p,g,E,w,I,R,C,N,w1)}B!=null&&w&&S5(B,d&&d.ref,I,p||d,!p)},S=(d,p,g,E)=>{if(d==null)s(p.el=l(p.children),g,E);else{const w=p.el=d.el;p.children!==d.children&&c(w,p.children)}},_=(d,p,g,E)=>{d==null?s(p.el=a(p.children||""),g,E):p.el=d.el},O=(d,p,g,E)=>{[d.el,d.anchor]=A(d.children,p,g,E,d.el,d.anchor)},U=({el:d,anchor:p},g,E)=>{let w;for(;d&&d!==p;)w=f(d),s(d,g,E),d=w;s(p,g,E)},Q=({el:d,anchor:p})=>{let g;for(;d&&d!==p;)g=f(d),i(d),d=g;i(p)},s1=(d,p,g,E,w,I,R,C,N)=>{R=R||p.type==="svg",d==null?T1(p,g,E,w,I,R,C,N):u1(d,p,w,I,R,C,N)},T1=(d,p,g,E,w,I,R,C)=>{let N,b;const{type:B,props:P,shapeFlag:V,transition:q,patchFlag:i1,dirs:p1}=d;if(d.el&&v!==void 0&&i1===-1)N=d.el=v(d.el);else{if(N=d.el=o(d.type,I,P&&P.is,P),V&8?u(N,d.children):V&16&&r1(d.children,N,null,E,w,I&&B!=="foreignObject",R,C),p1&&u3(d,null,E,"created"),P){for(const b1 in P)b1!=="value"&&!De(b1)&&r(N,b1,null,P[b1],I,d.children,E,w,D);"value"in P&&r(N,"value",null,P.value),(b=P.onVnodeBeforeMount)&&A2(b,E,d)}K(N,d,d.scopeId,R,E)}p1&&u3(d,null,E,"beforeMount");const m1=(!w||w&&!w.pendingBranch)&&q&&!q.persisted;m1&&q.beforeEnter(N),s(N,p,g),((b=P&&P.onVnodeMounted)||m1||p1)&&Z1(()=>{b&&A2(b,E,d),m1&&q.enter(N),p1&&u3(d,null,E,"mounted")},w)},K=(d,p,g,E,w)=>{if(g&&m(d,g),E)for(let I=0;I<E.length;I++)m(d,E[I]);if(w){let I=w.subTree;if(p===I){const R=w.vnode;K(d,R,R.scopeId,R.slotScopeIds,w.parent)}}},r1=(d,p,g,E,w,I,R,C,N=0)=>{for(let b=N;b<d.length;b++){const B=d[b]=C?G2(d[b]):E2(d[b]);x(null,B,p,g,E,w,I,R,C)}},u1=(d,p,g,E,w,I,R)=>{const C=p.el=d.el;let{patchFlag:N,dynamicChildren:b,dirs:B}=p;N|=d.patchFlag&16;const P=d.props||E1,V=p.props||E1;let q;g&&h3(g,!1),(q=V.onVnodeBeforeUpdate)&&A2(q,g,p,d),B&&u3(p,d,g,"beforeUpdate"),g&&h3(g,!0);const i1=w&&p.type!=="foreignObject";if(b?v1(d.dynamicChildren,b,C,g,E,i1,I):R||r2(d,p,C,null,g,E,i1,I,!1),N>0){if(N&16)I1(C,p,P,V,g,E,w);else if(N&2&&P.class!==V.class&&r(C,"class",null,V.class,w),N&4&&r(C,"style",P.style,V.style,w),N&8){const p1=p.dynamicProps;for(let m1=0;m1<p1.length;m1++){const b1=p1[m1],y2=P[b1],M3=V[b1];(M3!==y2||b1==="value")&&r(C,b1,y2,M3,w,d.children,g,E,D)}}N&1&&d.children!==p.children&&u(C,p.children)}else!R&&b==null&&I1(C,p,P,V,g,E,w);((q=V.onVnodeUpdated)||B)&&Z1(()=>{q&&A2(q,g,p,d),B&&u3(p,d,g,"updated")},E)},v1=(d,p,g,E,w,I,R)=>{for(let C=0;C<p.length;C++){const N=d[C],b=p[C],B=N.el&&(N.type===w2||!D2(N,b)||N.shapeFlag&70)?h(N.el):g;x(N,b,B,null,E,w,I,R,!0)}},I1=(d,p,g,E,w,I,R)=>{if(g!==E){for(const C in E){if(De(C))continue;const N=E[C],b=g[C];N!==b&&C!=="value"&&r(d,C,b,N,R,p.children,w,I,D)}if(g!==E1)for(const C in g)!De(C)&&!(C in E)&&r(d,C,g[C],null,R,p.children,w,I,D);"value"in E&&r(d,"value",g.value,E.value)}},J1=(d,p,g,E,w,I,R,C,N)=>{const b=p.el=d?d.el:l(""),B=p.anchor=d?d.anchor:l("");let{patchFlag:P,dynamicChildren:V,slotScopeIds:q}=p;q&&(C=C?C.concat(q):q),d==null?(s(b,g,E),s(B,g,E),r1(p.children,g,B,w,I,R,C,N)):P>0&&P&64&&V&&d.dynamicChildren?(v1(d.dynamicChildren,V,g,w,I,R,C),(p.key!=null||w&&p===w.subTree)&&As(d,p,!0)):r2(d,p,g,B,w,I,R,C,N)},h2=(d,p,g,E,w,I,R,C,N)=>{p.slotScopeIds=C,d==null?p.shapeFlag&512?w.ctx.activate(p,g,E,R,N):R3(p,g,E,w,I,R,N):k1(d,p,N)},R3=(d,p,g,E,w,I,R)=>{const C=d.component=nl(d,E,w);if(p4(d)&&(C.ctx.renderer=w1),sl(C),C.asyncDep){if(w&&w.registerDep(C,y1),!d.el){const N=C.subTree=_1(a2);_(null,N,p,g)}return}y1(C,d,p,g,w,I,R)},k1=(d,p,g)=>{const E=p.component=d.component;if(ao(d,p,g))if(E.asyncDep&&!E.asyncResolved){f1(E,p,g);return}else E.next=p,no(E.update),E.update();else p.el=d.el,E.vnode=p},y1=(d,p,g,E,w,I,R)=>{const C=()=>{if(d.isMounted){let{next:B,bu:P,u:V,parent:q,vnode:i1}=d,p1=B,m1;h3(d,!1),B?(B.el=i1.el,f1(d,B,R)):B=i1,P&&H4(P),(m1=B.props&&B.props.onVnodeBeforeUpdate)&&A2(m1,q,B,i1),h3(d,!0);const b1=K4(d),y2=d.subTree;d.subTree=b1,x(y2,b1,h(y2.el),L(y2),d,w,I),B.el=b1.el,p1===null&&I6(d,b1.el),V&&Z1(V,w),(m1=B.props&&B.props.onVnodeUpdated)&&Z1(()=>A2(m1,q,B,i1),w)}else{let B;const{el:P,props:V}=p,{bm:q,m:i1,parent:p1}=d,m1=Re(p);if(h3(d,!1),q&&H4(q),!m1&&(B=V&&V.onVnodeBeforeMount)&&A2(B,p1,p),h3(d,!0),P&&X){const b1=()=>{d.subTree=K4(d),X(P,d.subTree,d,w,null)};m1?p.type.__asyncLoader().then(()=>!d.isUnmounted&&b1()):b1()}else{const b1=d.subTree=K4(d);x(null,b1,g,E,d,w,I),p.el=b1.el}if(i1&&Z1(i1,w),!m1&&(B=V&&V.onVnodeMounted)){const b1=p;Z1(()=>A2(B,p1,b1),w)}(p.shapeFlag&256||p1&&Re(p1.vnode)&&p1.vnode.shapeFlag&256)&&d.a&&Z1(d.a,w),d.isMounted=!0,p=g=E=null}},N=d.effect=new y6(C,()=>ts(b),d.scope),b=d.update=()=>N.run();b.id=d.uid,h3(d,!0),b()},f1=(d,p,g)=>{p.component=d;const E=d.vnode.props;d.vnode=p,d.next=null,$o(d,p.props,E,g),Ho(d,p.children,g),ut(),h4(void 0,d.update),ht()},r2=(d,p,g,E,w,I,R,C,N=!1)=>{const b=d&&d.children,B=d?d.shapeFlag:0,P=p.children,{patchFlag:V,shapeFlag:q}=p;if(V>0){if(V&128){z2(b,P,g,E,w,I,R,C,N);return}else if(V&256){O3(b,P,g,E,w,I,R,C,N);return}}q&8?(B&16&&D(b,w,I),P!==b&&u(g,P)):B&16?q&16?z2(b,P,g,E,w,I,R,C,N):D(b,w,I,!0):(B&8&&u(g,""),q&16&&r1(P,g,E,w,I,R,C,N))},O3=(d,p,g,E,w,I,R,C,N)=>{d=d||K3,p=p||K3;const b=d.length,B=p.length,P=Math.min(b,B);let V;for(V=0;V<P;V++){const q=p[V]=N?G2(p[V]):E2(p[V]);x(d[V],q,g,null,w,I,R,C,N)}b>B?D(d,w,I,!0,!1,P):r1(p,g,E,w,I,R,C,N,P)},z2=(d,p,g,E,w,I,R,C,N)=>{let b=0;const B=p.length;let P=d.length-1,V=B-1;for(;b<=P&&b<=V;){const q=d[b],i1=p[b]=N?G2(p[b]):E2(p[b]);if(D2(q,i1))x(q,i1,g,null,w,I,R,C,N);else break;b++}for(;b<=P&&b<=V;){const q=d[P],i1=p[V]=N?G2(p[V]):E2(p[V]);if(D2(q,i1))x(q,i1,g,null,w,I,R,C,N);else break;P--,V--}if(b>P){if(b<=V){const q=V+1,i1=q<B?p[q].el:E;for(;b<=V;)x(null,p[b]=N?G2(p[b]):E2(p[b]),g,i1,w,I,R,C,N),b++}}else if(b>V)for(;b<=P;)f2(d[b],w,I,!0),b++;else{const q=b,i1=b,p1=new Map;for(b=i1;b<=V;b++){const o2=p[b]=N?G2(p[b]):E2(p[b]);o2.key!=null&&p1.set(o2.key,b)}let m1,b1=0;const y2=V-i1+1;let M3=!1,Rn=0;const bt=new Array(y2);for(b=0;b<y2;b++)bt[b]=0;for(b=q;b<=P;b++){const o2=d[b];if(b1>=y2){f2(o2,w,I,!0);continue}let S2;if(o2.key!=null)S2=p1.get(o2.key);else for(m1=i1;m1<=V;m1++)if(bt[m1-i1]===0&&D2(o2,p[m1])){S2=m1;break}S2===void 0?f2(o2,w,I,!0):(bt[S2-i1]=b+1,S2>=Rn?Rn=S2:M3=!0,x(o2,p[S2],g,null,w,I,R,C,N),b1++)}const On=M3?Qo(bt):K3;for(m1=On.length-1,b=y2-1;b>=0;b--){const o2=i1+b,S2=p[o2],Mn=o2+1<B?p[o2+1].el:E;bt[b]===0?x(null,S2,g,Mn,w,I,R,C,N):M3&&(m1<0||b!==On[m1]?I2(S2,g,Mn,2):m1--)}}},I2=(d,p,g,E,w=null)=>{const{el:I,type:R,transition:C,children:N,shapeFlag:b}=d;if(b&6){I2(d.component.subTree,p,g,E);return}if(b&128){d.suspense.move(p,g,E);return}if(b&64){R.move(d,p,g,w1);return}if(R===w2){s(I,p,g);for(let P=0;P<N.length;P++)I2(N[P],p,g,E);s(d.anchor,p,g);return}if(R===Oe){U(d,p,g);return}if(E!==2&&b&1&&C)if(E===0)C.beforeEnter(I),s(I,p,g),Z1(()=>C.enter(I),w);else{const{leave:P,delayLeave:V,afterLeave:q}=C,i1=()=>s(I,p,g),p1=()=>{P(I,()=>{i1(),q&&q()})};V?V(I,i1,p1):p1()}else s(I,p,g)},f2=(d,p,g,E=!1,w=!1)=>{const{type:I,props:R,ref:C,children:N,dynamicChildren:b,shapeFlag:B,patchFlag:P,dirs:V}=d;if(C!=null&&S5(C,null,g,d,!0),B&256){p.ctx.deactivate(d);return}const q=B&1&&V,i1=!Re(d);let p1;if(i1&&(p1=R&&R.onVnodeBeforeUnmount)&&A2(p1,p,d),B&6)z(d.component,g,E);else{if(B&128){d.suspense.unmount(g,E);return}q&&u3(d,null,p,"beforeUnmount"),B&64?d.type.remove(d,p,g,w,w1,E):b&&(I!==w2||P>0&&P&64)?D(b,p,g,!1,!0):(I===w2&&P&384||!w&&B&16)&&D(N,p,g),E&&Et(d)}(i1&&(p1=R&&R.onVnodeUnmounted)||q)&&Z1(()=>{p1&&A2(p1,p,d),q&&u3(d,null,p,"unmounted")},g)},Et=d=>{const{type:p,el:g,anchor:E,transition:w}=d;if(p===w2){y(g,E);return}if(p===Oe){Q(d);return}const I=()=>{i(g),w&&!w.persisted&&w.afterLeave&&w.afterLeave()};if(d.shapeFlag&1&&w&&!w.persisted){const{leave:R,delayLeave:C}=w,N=()=>R(g,I);C?C(d.el,I,N):N()}else I()},y=(d,p)=>{let g;for(;d!==p;)g=f(d),i(d),d=g;i(p)},z=(d,p,g)=>{const{bum:E,scope:w,update:I,subTree:R,um:C}=d;E&&H4(E),w.stop(),I&&(I.active=!1,f2(R,d,p,g)),C&&Z1(C,p),Z1(()=>{d.isUnmounted=!0},p),p&&p.pendingBranch&&!p.isUnmounted&&d.asyncDep&&!d.asyncResolved&&d.suspenseId===p.pendingId&&(p.deps--,p.deps===0&&p.resolve())},D=(d,p,g,E=!1,w=!1,I=0)=>{for(let R=I;R<d.length;R++)f2(d[R],p,g,E,w)},L=d=>d.shapeFlag&6?L(d.component.subTree):d.shapeFlag&128?d.suspense.next():f(d.anchor||d.el),d1=(d,p,g)=>{d==null?p._vnode&&f2(p._vnode,null,null,!0):x(p._vnode||null,d,p,null,null,null,g),is(),p._vnode=d},w1={p:x,um:f2,m:I2,r:Et,mt:R3,mc:r1,pc:r2,pbc:v1,n:L,o:e};let Y,X;return t&&([Y,X]=t(w1)),{render:d1,hydrate:Y,createApp:qo(d1,Y)}}function h3({effect:e,update:t},n){e.allowRecurse=t.allowRecurse=n}function As(e,t,n=!1){const s=e.children,i=t.children;if(G(s)&&G(i))for(let r=0;r<s.length;r++){const o=s[r];let l=i[r];l.shapeFlag&1&&!l.dynamicChildren&&((l.patchFlag<=0||l.patchFlag===32)&&(l=i[r]=G2(i[r]),l.el=o.el),n||As(o,l))}}function Qo(e){const t=e.slice(),n=[0];let s,i,r,o,l;const a=e.length;for(s=0;s<a;s++){const c=e[s];if(c!==0){if(i=n[n.length-1],e[i]<c){t[s]=i,n.push(s);continue}for(r=0,o=n.length-1;r<o;)l=r+o>>1,e[n[l]]<c?r=l+1:o=l;c<e[n[r]]&&(r>0&&(t[s]=n[r-1]),n[r]=s)}}for(r=n.length,o=n[r-1];r-- >0;)n[r]=o,o=t[o];return n}const Xo=e=>e.__isTeleport,w2=Symbol(void 0),N6=Symbol(void 0),a2=Symbol(void 0),Oe=Symbol(void 0),Dt=[];let m2=null;function P2(e=!1){Dt.push(m2=e?null:[])}function Ns(){Dt.pop(),m2=Dt[Dt.length-1]||null}let Z3=1;function t7(e){Z3+=e}function Ds(e){return e.dynamicChildren=Z3>0?m2||K3:null,Ns(),Z3>0&&m2&&m2.push(e),e}function N3(e,t,n,s,i,r){return Ds(J(e,t,n,s,i,r,!0))}function ks(e,t,n,s,i){return Ds(_1(e,t,n,s,i,!0))}function Ue(e){return e?e.__v_isVNode===!0:!1}function D2(e,t){return e.type===t.type&&e.key===t.key}const g4="__vInternal",Rs=({key:e})=>e!=null?e:null,Me=({ref:e,ref_key:t,ref_for:n})=>e!=null?z1(e)||K1(e)||W(e)?{i:_2,r:e,k:t,f:!!n}:e:null;function J(e,t=null,n=null,s=0,i=null,r=e===w2?0:1,o=!1,l=!1){const a={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&Rs(t),ref:t&&Me(t),scopeId:d4,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:r,patchFlag:s,dynamicProps:i,dynamicChildren:null,appContext:null};return l?(k6(a,n),r&128&&e.normalize(a)):n&&(a.shapeFlag|=z1(n)?8:16),Z3>0&&!o&&m2&&(a.patchFlag>0||r&6)&&a.patchFlag!==32&&m2.push(a),a}const _1=Yo;function Yo(e,t=null,n=null,s=0,i=null,r=!1){if((!e||e===Ro)&&(e=a2),Ue(e)){const l=e3(e,t,!0);return n&&k6(l,n),Z3>0&&!r&&m2&&(l.shapeFlag&6?m2[m2.indexOf(e)]=l:m2.push(l)),l.patchFlag|=-2,l}if(al(e)&&(e=e.__vccOpts),t){t=Jo(t);let{class:l,style:a}=t;l&&!z1(l)&&(t.class=h6(l)),O1(a)&&(q8(a)&&!G(a)&&(a=G1({},a)),t.style=u6(a))}const o=z1(e)?1:co(e)?128:Xo(e)?64:O1(e)?4:W(e)?2:0;return J(e,t,n,s,i,o,r,!0)}function Jo(e){return e?q8(e)||g4 in e?G1({},e):e:null}function e3(e,t,n=!1){const{props:s,ref:i,patchFlag:r,children:o}=e,l=t?Zo(s||{},t):s;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:l,key:l&&Rs(l),ref:t&&t.ref?n&&i?G(i)?i.concat(Me(t)):[i,Me(t)]:Me(t):i,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:o,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==w2?r===-1?16:r|16:r,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&e3(e.ssContent),ssFallback:e.ssFallback&&e3(e.ssFallback),el:e.el,anchor:e.anchor}}function D6(e=" ",t=0){return _1(N6,null,e,t)}function l3(e,t){const n=_1(Oe,null,e);return n.staticCount=t,n}function Hp(e="",t=!1){return t?(P2(),ks(a2,null,e)):_1(a2,null,e)}function E2(e){return e==null||typeof e=="boolean"?_1(a2):G(e)?_1(w2,null,e.slice()):typeof e=="object"?G2(e):_1(N6,null,String(e))}function G2(e){return e.el===null||e.memo?e:e3(e)}function k6(e,t){let n=0;const{shapeFlag:s}=e;if(t==null)t=null;else if(G(t))n=16;else if(typeof t=="object")if(s&65){const i=t.default;i&&(i._c&&(i._d=!1),k6(e,i()),i._c&&(i._d=!0));return}else{n=32;const i=t._;!i&&!(g4 in t)?t._ctx=_2:i===3&&_2&&(_2.slots._===1?t._=1:(t._=2,e.patchFlag|=1024))}else W(t)?(t={default:t,_ctx:_2},n=32):(t=String(t),s&64?(n=16,t=[D6(t)]):n=8);e.children=t,e.shapeFlag|=n}function Zo(...e){const t={};for(let n=0;n<e.length;n++){const s=e[n];for(const i in s)if(i==="class")t.class!==s.class&&(t.class=h6([t.class,s.class]));else if(i==="style")t.style=u6([t.style,s.style]);else if(o4(i)){const r=t[i],o=s[i];o&&r!==o&&!(G(r)&&r.includes(o))&&(t[i]=r?[].concat(r,o):o)}else i!==""&&(t[i]=s[i])}return t}function A2(e,t,n,s=null){v2(e,t,7,[n,s])}const tl=Ss();let el=0;function nl(e,t,n){const s=e.type,i=(t?t.appContext:e.appContext)||tl,r={uid:el++,vnode:e,type:s,parent:t,appContext:i,root:null,next:null,subTree:null,effect:null,update:null,scope:new Er(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(i.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Ts(s,i),emitsOptions:os(s,i),emit:null,emitted:null,propsDefaults:E1,inheritAttrs:s.inheritAttrs,ctx:E1,data:E1,props:E1,attrs:E1,slots:E1,refs:E1,setupState:E1,setupContext:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return r.ctx={_:r},r.root=t?t.root:r,r.emit=io.bind(null,r),e.ce&&e.ce(r),r}let P1=null;const Os=()=>P1||_2,n3=e=>{P1=e,e.scope.on()},Y2=()=>{P1&&P1.scope.off(),P1=null};function Ms(e){return e.vnode.shapeFlag&4}let Ht=!1;function sl(e,t=!1){Ht=t;const{props:n,children:s}=e.vnode,i=Ms(e);Vo(e,n,i,t),jo(e,s);const r=i?il(e,t):void 0;return Ht=!1,r}function il(e,t){const n=e.type;e.accessCache=Object.create(null),e.proxy=G8(new Proxy(e.ctx,Mo));const{setup:s}=n;if(s){const i=e.setupContext=s.length>1?ol(e):null;n3(e),ut();const r=X2(s,e,0,[e.props,i]);if(ht(),Y2(),m6(r)){if(r.then(Y2,Y2),t)return r.then(o=>{A5(e,o,t)}).catch(o=>{ie(o,e,0)});e.asyncDep=r}else A5(e,r,t)}else Ps(e,t)}function A5(e,t,n){W(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:O1(t)&&(e.setupState=Y8(t)),Ps(e,n)}let e7;function Ps(e,t,n){const s=e.type;if(!e.render){if(!t&&e7&&!s.render){const i=s.template;if(i){const{isCustomElement:r,compilerOptions:o}=e.appContext.config,{delimiters:l,compilerOptions:a}=s,c=G1(G1({isCustomElement:r,delimiters:l},o),a);s.render=e7(i,c)}}e.render=s.render||T2}n3(e),ut(),Po(e),ht(),Y2()}function rl(e){return new Proxy(e.attrs,{get(t,n){return c2(e,"get","$attrs"),t[n]}})}function ol(e){const t=s=>{e.exposed=s||{}};let n;return{get attrs(){return n||(n=rl(e))},slots:e.slots,emit:e.emit,expose:t}}function R6(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(Y8(G8(e.exposed)),{get(t,n){if(n in t)return t[n];if(n in Ve)return Ve[n](e)}}))}function ll(e,t=!0){return W(e)?e.displayName||e.name:e.name||t&&e.__name}function al(e){return W(e)&&"__vccOpts"in e}const p2=(e,t)=>Zr(e,t,Ht);function Kp(e){const t=Os();let n=e();return Y2(),m6(n)&&(n=n.catch(s=>{throw n3(t),s})),[n,()=>n3(t)]}function zs(e,t,n){const s=arguments.length;return s===2?O1(t)&&!G(t)?Ue(t)?_1(e,null,[t]):_1(e,t):_1(e,null,t):(s>3?n=Array.prototype.slice.call(arguments,2):s===3&&Ue(n)&&(n=[n]),_1(e,t,n))}const cl="3.2.37",ul="http://www.w3.org/2000/svg",p3=typeof document<"u"?document:null,n7=p3&&p3.createElement("template"),hl={insert:(e,t,n)=>{t.insertBefore(e,n||null)},remove:e=>{const t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t,n,s)=>{const i=t?p3.createElementNS(ul,e):p3.createElement(e,n?{is:n}:void 0);return e==="select"&&s&&s.multiple!=null&&i.setAttribute("multiple",s.multiple),i},createText:e=>p3.createTextNode(e),createComment:e=>p3.createComment(e),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>p3.querySelector(e),setScopeId(e,t){e.setAttribute(t,"")},cloneNode(e){const t=e.cloneNode(!0);return"_value"in e&&(t._value=e._value),t},insertStaticContent(e,t,n,s,i,r){const o=n?n.previousSibling:t.lastChild;if(i&&(i===r||i.nextSibling))for(;t.insertBefore(i.cloneNode(!0),n),!(i===r||!(i=i.nextSibling)););else{n7.innerHTML=s?`<svg>${e}</svg>`:e;const l=n7.content;if(s){const a=l.firstChild;for(;a.firstChild;)l.appendChild(a.firstChild);l.removeChild(a)}t.insertBefore(l,n)}return[o?o.nextSibling:t.firstChild,n?n.previousSibling:t.lastChild]}};function fl(e,t,n){const s=e._vtc;s&&(t=(t?[t,...s]:[...s]).join(" ")),t==null?e.removeAttribute("class"):n?e.setAttribute("class",t):e.className=t}function dl(e,t,n){const s=e.style,i=z1(n);if(n&&!i){for(const r in n)N5(s,r,n[r]);if(t&&!z1(t))for(const r in t)n[r]==null&&N5(s,r,"")}else{const r=s.display;i?t!==n&&(s.cssText=n):t&&e.removeAttribute("style"),"_vod"in e&&(s.display=r)}}const s7=/\s*!important$/;function N5(e,t,n){if(G(n))n.forEach(s=>N5(e,t,s));else if(n==null&&(n=""),t.startsWith("--"))e.setProperty(t,n);else{const s=pl(e,t);s7.test(n)?e.setProperty(ct(s),n.replace(s7,""),"important"):e[s]=n}}const i7=["Webkit","Moz","ms"],G4={};function pl(e,t){const n=G4[t];if(n)return n;let s=O2(t);if(s!=="filter"&&s in e)return G4[t]=s;s=c4(s);for(let i=0;i<i7.length;i++){const r=i7[i]+s;if(r in e)return G4[t]=r}return t}const r7="http://www.w3.org/1999/xlink";function ml(e,t,n,s,i){if(s&&t.startsWith("xlink:"))n==null?e.removeAttributeNS(r7,t.slice(6,t.length)):e.setAttributeNS(r7,t,n);else{const r=cr(t);n==null||r&&!N8(n)?e.removeAttribute(t):e.setAttribute(t,r?"":n)}}function gl(e,t,n,s,i,r,o){if(t==="innerHTML"||t==="textContent"){s&&o(s,i,r),e[t]=n==null?"":n;return}if(t==="value"&&e.tagName!=="PROGRESS"&&!e.tagName.includes("-")){e._value=n;const a=n==null?"":n;(e.value!==a||e.tagName==="OPTION")&&(e.value=a),n==null&&e.removeAttribute(t);return}let l=!1;if(n===""||n==null){const a=typeof e[t];a==="boolean"?n=N8(n):n==null&&a==="string"?(n="",l=!0):a==="number"&&(n=0,l=!0)}try{e[t]=n}catch{}l&&e.removeAttribute(t)}const[Ls,vl]=(()=>{let e=Date.now,t=!1;if(typeof window<"u"){Date.now()>document.createEvent("Event").timeStamp&&(e=performance.now.bind(performance));const n=navigator.userAgent.match(/firefox\/(\d+)/i);t=!!(n&&Number(n[1])<=53)}return[e,t]})();let D5=0;const yl=Promise.resolve(),wl=()=>{D5=0},El=()=>D5||(yl.then(wl),D5=Ls());function bl(e,t,n,s){e.addEventListener(t,n,s)}function _l(e,t,n,s){e.removeEventListener(t,n,s)}function Tl(e,t,n,s,i=null){const r=e._vei||(e._vei={}),o=r[t];if(s&&o)o.value=s;else{const[l,a]=xl(t);if(s){const c=r[t]=Cl(s,i);bl(e,l,c,a)}else o&&(_l(e,l,o,a),r[t]=void 0)}}const o7=/(?:Once|Passive|Capture)$/;function xl(e){let t;if(o7.test(e)){t={};let n;for(;n=e.match(o7);)e=e.slice(0,e.length-n[0].length),t[n[0].toLowerCase()]=!0}return[ct(e.slice(2)),t]}function Cl(e,t){const n=s=>{const i=s.timeStamp||Ls();(vl||i>=n.attached-1)&&v2(Il(s,n.value),t,5,[s])};return n.value=e,n.attached=El(),n}function Il(e,t){if(G(t)){const n=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{n.call(e),e._stopped=!0},t.map(s=>i=>!i._stopped&&s&&s(i))}else return t}const l7=/^on[a-z]/,Sl=(e,t,n,s,i=!1,r,o,l,a)=>{t==="class"?fl(e,s,i):t==="style"?dl(e,n,s):o4(t)?f6(t)||Tl(e,t,n,s,o):(t[0]==="."?(t=t.slice(1),!0):t[0]==="^"?(t=t.slice(1),!1):Al(e,t,s,i))?gl(e,t,s,r,o,l,a):(t==="true-value"?e._trueValue=s:t==="false-value"&&(e._falseValue=s),ml(e,t,s,i))};function Al(e,t,n,s){return s?!!(t==="innerHTML"||t==="textContent"||t in e&&l7.test(t)&&W(n)):t==="spellcheck"||t==="draggable"||t==="translate"||t==="form"||t==="list"&&e.tagName==="INPUT"||t==="type"&&e.tagName==="TEXTAREA"||l7.test(t)&&z1(n)?!1:t in e}const Nl={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String};bo.props;const Dl=G1({patchProp:Sl},hl);let a7;function kl(){return a7||(a7=Go(Dl))}const Rl=(...e)=>{const t=kl().createApp(...e),{mount:n}=t;return t.mount=s=>{const i=Ol(s);if(!i)return;const r=t._component;!W(r)&&!r.render&&!r.template&&(r.template=i.innerHTML),i.innerHTML="";const o=n(i,!1,i instanceof SVGElement);return i instanceof Element&&(i.removeAttribute("v-cloak"),i.setAttribute("data-v-app","")),o},t};function Ol(e){return z1(e)?document.querySelector(e):e}function Ml(){return Fs().__VUE_DEVTOOLS_GLOBAL_HOOK__}function Fs(){return typeof navigator<"u"&&typeof window<"u"?window:typeof global<"u"?global:{}}const Pl=typeof Proxy=="function",zl="devtools-plugin:setup",Ll="plugin:settings:set";let P3,k5;function Fl(){var e;return P3!==void 0||(typeof window<"u"&&window.performance?(P3=!0,k5=window.performance):typeof global<"u"&&((e=global.perf_hooks)===null||e===void 0?void 0:e.performance)?(P3=!0,k5=global.perf_hooks.performance):P3=!1),P3}function Bl(){return Fl()?k5.now():Date.now()}class Vl{constructor(t,n){this.target=null,this.targetQueue=[],this.onQueue=[],this.plugin=t,this.hook=n;const s={};if(t.settings)for(const o in t.settings){const l=t.settings[o];s[o]=l.defaultValue}const i=`__vue-devtools-plugin-settings__${t.id}`;let r=Object.assign({},s);try{const o=localStorage.getItem(i),l=JSON.parse(o);Object.assign(r,l)}catch{}this.fallbacks={getSettings(){return r},setSettings(o){try{localStorage.setItem(i,JSON.stringify(o))}catch{}r=o},now(){return Bl()}},n&&n.on(Ll,(o,l)=>{o===this.plugin.id&&this.fallbacks.setSettings(l)}),this.proxiedOn=new Proxy({},{get:(o,l)=>this.target?this.target.on[l]:(...a)=>{this.onQueue.push({method:l,args:a})}}),this.proxiedTarget=new Proxy({},{get:(o,l)=>this.target?this.target[l]:l==="on"?this.proxiedOn:Object.keys(this.fallbacks).includes(l)?(...a)=>(this.targetQueue.push({method:l,args:a,resolve:()=>{}}),this.fallbacks[l](...a)):(...a)=>new Promise(c=>{this.targetQueue.push({method:l,args:a,resolve:c})})})}async setRealTarget(t){this.target=t;for(const n of this.onQueue)this.target.on[n.method](...n.args);for(const n of this.targetQueue)n.resolve(await this.target[n.method](...n.args))}}function $l(e,t){const n=e,s=Fs(),i=Ml(),r=Pl&&n.enableEarlyProxy;if(i&&(s.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__||!r))i.emit(zl,e,t);else{const o=r?new Vl(n,i):null;(s.__VUE_DEVTOOLS_PLUGINS__=s.__VUE_DEVTOOLS_PLUGINS__||[]).push({pluginDescriptor:n,setupFn:t,proxy:o}),o&&t(o.proxiedTarget)}}/*!
 * vuex v4.0.2
 * (c) 2021 Evan You
 * @license MIT
 */var Ul="store";function dt(e,t){Object.keys(e).forEach(function(n){return t(e[n],n)})}function jl(e){return e!==null&&typeof e=="object"}function Hl(e){return e&&typeof e.then=="function"}function Kl(e,t){return function(){return e(t)}}function Bs(e,t,n){return t.indexOf(e)<0&&(n&&n.prepend?t.unshift(e):t.push(e)),function(){var s=t.indexOf(e);s>-1&&t.splice(s,1)}}function Vs(e,t){e._actions=Object.create(null),e._mutations=Object.create(null),e._wrappedGetters=Object.create(null),e._modulesNamespaceMap=Object.create(null);var n=e.state;v4(e,n,[],e._modules.root,!0),O6(e,n,t)}function O6(e,t,n){var s=e._state;e.getters={},e._makeLocalGettersCache=Object.create(null);var i=e._wrappedGetters,r={};dt(i,function(o,l){r[l]=Kl(o,e),Object.defineProperty(e.getters,l,{get:function(){return r[l]()},enumerable:!0})}),e._state=ft({data:t}),e.strict&&Xl(e),s&&n&&e._withCommit(function(){s.data=null})}function v4(e,t,n,s,i){var r=!n.length,o=e._modules.getNamespace(n);if(s.namespaced&&(e._modulesNamespaceMap[o],e._modulesNamespaceMap[o]=s),!r&&!i){var l=M6(t,n.slice(0,-1)),a=n[n.length-1];e._withCommit(function(){l[a]=s.state})}var c=s.context=ql(e,o,n);s.forEachMutation(function(u,h){var f=o+h;Gl(e,f,u,c)}),s.forEachAction(function(u,h){var f=u.root?h:o+h,m=u.handler||u;Wl(e,f,m,c)}),s.forEachGetter(function(u,h){var f=o+h;Ql(e,f,u,c)}),s.forEachChild(function(u,h){v4(e,t,n.concat(h),u,i)})}function ql(e,t,n){var s=t==="",i={dispatch:s?e.dispatch:function(r,o,l){var a=je(r,o,l),c=a.payload,u=a.options,h=a.type;return(!u||!u.root)&&(h=t+h),e.dispatch(h,c)},commit:s?e.commit:function(r,o,l){var a=je(r,o,l),c=a.payload,u=a.options,h=a.type;(!u||!u.root)&&(h=t+h),e.commit(h,c,u)}};return Object.defineProperties(i,{getters:{get:s?function(){return e.getters}:function(){return $s(e,t)}},state:{get:function(){return M6(e.state,n)}}}),i}function $s(e,t){if(!e._makeLocalGettersCache[t]){var n={},s=t.length;Object.keys(e.getters).forEach(function(i){if(i.slice(0,s)===t){var r=i.slice(s);Object.defineProperty(n,r,{get:function(){return e.getters[i]},enumerable:!0})}}),e._makeLocalGettersCache[t]=n}return e._makeLocalGettersCache[t]}function Gl(e,t,n,s){var i=e._mutations[t]||(e._mutations[t]=[]);i.push(function(o){n.call(e,s.state,o)})}function Wl(e,t,n,s){var i=e._actions[t]||(e._actions[t]=[]);i.push(function(o){var l=n.call(e,{dispatch:s.dispatch,commit:s.commit,getters:s.getters,state:s.state,rootGetters:e.getters,rootState:e.state},o);return Hl(l)||(l=Promise.resolve(l)),e._devtoolHook?l.catch(function(a){throw e._devtoolHook.emit("vuex:error",a),a}):l})}function Ql(e,t,n,s){e._wrappedGetters[t]||(e._wrappedGetters[t]=function(r){return n(s.state,s.getters,r.state,r.getters)})}function Xl(e){Q3(function(){return e._state.data},function(){},{deep:!0,flush:"sync"})}function M6(e,t){return t.reduce(function(n,s){return n[s]},e)}function je(e,t,n){return jl(e)&&e.type&&(n=t,t=e,e=e.type),{type:e,payload:t,options:n}}var Yl="vuex bindings",c7="vuex:mutations",W4="vuex:actions",z3="vuex",Jl=0;function Zl(e,t){$l({id:"org.vuejs.vuex",app:e,label:"Vuex",homepage:"https://next.vuex.vuejs.org/",logo:"https://vuejs.org/images/icons/favicon-96x96.png",packageName:"vuex",componentStateTypes:[Yl]},function(n){n.addTimelineLayer({id:c7,label:"Vuex Mutations",color:u7}),n.addTimelineLayer({id:W4,label:"Vuex Actions",color:u7}),n.addInspector({id:z3,label:"Vuex",icon:"storage",treeFilterPlaceholder:"Filter stores..."}),n.on.getInspectorTree(function(s){if(s.app===e&&s.inspectorId===z3)if(s.filter){var i=[];Ks(i,t._modules.root,s.filter,""),s.rootNodes=i}else s.rootNodes=[Hs(t._modules.root,"")]}),n.on.getInspectorState(function(s){if(s.app===e&&s.inspectorId===z3){var i=s.nodeId;$s(t,i),s.state=na(ia(t._modules,i),i==="root"?t.getters:t._makeLocalGettersCache,i)}}),n.on.editInspectorState(function(s){if(s.app===e&&s.inspectorId===z3){var i=s.nodeId,r=s.path;i!=="root"&&(r=i.split("/").filter(Boolean).concat(r)),t._withCommit(function(){s.set(t._state.data,r,s.state.value)})}}),t.subscribe(function(s,i){var r={};s.payload&&(r.payload=s.payload),r.state=i,n.notifyComponentUpdate(),n.sendInspectorTree(z3),n.sendInspectorState(z3),n.addTimelineEvent({layerId:c7,event:{time:Date.now(),title:s.type,data:r}})}),t.subscribeAction({before:function(s,i){var r={};s.payload&&(r.payload=s.payload),s._id=Jl++,s._time=Date.now(),r.state=i,n.addTimelineEvent({layerId:W4,event:{time:s._time,title:s.type,groupId:s._id,subtitle:"start",data:r}})},after:function(s,i){var r={},o=Date.now()-s._time;r.duration={_custom:{type:"duration",display:o+"ms",tooltip:"Action duration",value:o}},s.payload&&(r.payload=s.payload),r.state=i,n.addTimelineEvent({layerId:W4,event:{time:Date.now(),title:s.type,groupId:s._id,subtitle:"end",data:r}})}})})}var u7=8702998,ta=6710886,ea=16777215,Us={label:"namespaced",textColor:ea,backgroundColor:ta};function js(e){return e&&e!=="root"?e.split("/").slice(-2,-1)[0]:"Root"}function Hs(e,t){return{id:t||"root",label:js(t),tags:e.namespaced?[Us]:[],children:Object.keys(e._children).map(function(n){return Hs(e._children[n],t+n+"/")})}}function Ks(e,t,n,s){s.includes(n)&&e.push({id:s||"root",label:s.endsWith("/")?s.slice(0,s.length-1):s||"Root",tags:t.namespaced?[Us]:[]}),Object.keys(t._children).forEach(function(i){Ks(e,t._children[i],n,s+i+"/")})}function na(e,t,n){t=n==="root"?t:t[n];var s=Object.keys(t),i={state:Object.keys(e.state).map(function(o){return{key:o,editable:!0,value:e.state[o]}})};if(s.length){var r=sa(t);i.getters=Object.keys(r).map(function(o){return{key:o.endsWith("/")?js(o):o,editable:!1,value:R5(function(){return r[o]})}})}return i}function sa(e){var t={};return Object.keys(e).forEach(function(n){var s=n.split("/");if(s.length>1){var i=t,r=s.pop();s.forEach(function(o){i[o]||(i[o]={_custom:{value:{},display:o,tooltip:"Module",abstract:!0}}),i=i[o]._custom.value}),i[r]=R5(function(){return e[n]})}else t[n]=R5(function(){return e[n]})}),t}function ia(e,t){var n=t.split("/").filter(function(s){return s});return n.reduce(function(s,i,r){var o=s[i];if(!o)throw new Error('Missing module "'+i+'" for path "'+t+'".');return r===n.length-1?o:o._children},t==="root"?e:e.root._children)}function R5(e){try{return e()}catch(t){return t}}var C2=function(t,n){this.runtime=n,this._children=Object.create(null),this._rawModule=t;var s=t.state;this.state=(typeof s=="function"?s():s)||{}},qs={namespaced:{configurable:!0}};qs.namespaced.get=function(){return!!this._rawModule.namespaced};C2.prototype.addChild=function(t,n){this._children[t]=n};C2.prototype.removeChild=function(t){delete this._children[t]};C2.prototype.getChild=function(t){return this._children[t]};C2.prototype.hasChild=function(t){return t in this._children};C2.prototype.update=function(t){this._rawModule.namespaced=t.namespaced,t.actions&&(this._rawModule.actions=t.actions),t.mutations&&(this._rawModule.mutations=t.mutations),t.getters&&(this._rawModule.getters=t.getters)};C2.prototype.forEachChild=function(t){dt(this._children,t)};C2.prototype.forEachGetter=function(t){this._rawModule.getters&&dt(this._rawModule.getters,t)};C2.prototype.forEachAction=function(t){this._rawModule.actions&&dt(this._rawModule.actions,t)};C2.prototype.forEachMutation=function(t){this._rawModule.mutations&&dt(this._rawModule.mutations,t)};Object.defineProperties(C2.prototype,qs);var D3=function(t){this.register([],t,!1)};D3.prototype.get=function(t){return t.reduce(function(n,s){return n.getChild(s)},this.root)};D3.prototype.getNamespace=function(t){var n=this.root;return t.reduce(function(s,i){return n=n.getChild(i),s+(n.namespaced?i+"/":"")},"")};D3.prototype.update=function(t){Gs([],this.root,t)};D3.prototype.register=function(t,n,s){var i=this;s===void 0&&(s=!0);var r=new C2(n,s);if(t.length===0)this.root=r;else{var o=this.get(t.slice(0,-1));o.addChild(t[t.length-1],r)}n.modules&&dt(n.modules,function(l,a){i.register(t.concat(a),l,s)})};D3.prototype.unregister=function(t){var n=this.get(t.slice(0,-1)),s=t[t.length-1],i=n.getChild(s);!i||!i.runtime||n.removeChild(s)};D3.prototype.isRegistered=function(t){var n=this.get(t.slice(0,-1)),s=t[t.length-1];return n?n.hasChild(s):!1};function Gs(e,t,n){if(t.update(n),n.modules)for(var s in n.modules){if(!t.getChild(s))return;Gs(e.concat(s),t.getChild(s),n.modules[s])}}function ra(e){return new i2(e)}var i2=function(t){var n=this;t===void 0&&(t={});var s=t.plugins;s===void 0&&(s=[]);var i=t.strict;i===void 0&&(i=!1);var r=t.devtools;this._committing=!1,this._actions=Object.create(null),this._actionSubscribers=[],this._mutations=Object.create(null),this._wrappedGetters=Object.create(null),this._modules=new D3(t),this._modulesNamespaceMap=Object.create(null),this._subscribers=[],this._makeLocalGettersCache=Object.create(null),this._devtools=r;var o=this,l=this,a=l.dispatch,c=l.commit;this.dispatch=function(f,m){return a.call(o,f,m)},this.commit=function(f,m,v){return c.call(o,f,m,v)},this.strict=i;var u=this._modules.root.state;v4(this,u,[],this._modules.root),O6(this,u),s.forEach(function(h){return h(n)})},P6={state:{configurable:!0}};i2.prototype.install=function(t,n){t.provide(n||Ul,this),t.config.globalProperties.$store=this;var s=this._devtools!==void 0?this._devtools:!1;s&&Zl(t,this)};P6.state.get=function(){return this._state.data};P6.state.set=function(e){};i2.prototype.commit=function(t,n,s){var i=this,r=je(t,n,s),o=r.type,l=r.payload,a={type:o,payload:l},c=this._mutations[o];!c||(this._withCommit(function(){c.forEach(function(h){h(l)})}),this._subscribers.slice().forEach(function(u){return u(a,i.state)}))};i2.prototype.dispatch=function(t,n){var s=this,i=je(t,n),r=i.type,o=i.payload,l={type:r,payload:o},a=this._actions[r];if(!!a){try{this._actionSubscribers.slice().filter(function(u){return u.before}).forEach(function(u){return u.before(l,s.state)})}catch{}var c=a.length>1?Promise.all(a.map(function(u){return u(o)})):a[0](o);return new Promise(function(u,h){c.then(function(f){try{s._actionSubscribers.filter(function(m){return m.after}).forEach(function(m){return m.after(l,s.state)})}catch{}u(f)},function(f){try{s._actionSubscribers.filter(function(m){return m.error}).forEach(function(m){return m.error(l,s.state,f)})}catch{}h(f)})})}};i2.prototype.subscribe=function(t,n){return Bs(t,this._subscribers,n)};i2.prototype.subscribeAction=function(t,n){var s=typeof t=="function"?{before:t}:t;return Bs(s,this._actionSubscribers,n)};i2.prototype.watch=function(t,n,s){var i=this;return Q3(function(){return t(i.state,i.getters)},n,Object.assign({},s))};i2.prototype.replaceState=function(t){var n=this;this._withCommit(function(){n._state.data=t})};i2.prototype.registerModule=function(t,n,s){s===void 0&&(s={}),typeof t=="string"&&(t=[t]),this._modules.register(t,n),v4(this,this.state,t,this._modules.get(t),s.preserveState),O6(this,this.state)};i2.prototype.unregisterModule=function(t){var n=this;typeof t=="string"&&(t=[t]),this._modules.unregister(t),this._withCommit(function(){var s=M6(n.state,t.slice(0,-1));delete s[t[t.length-1]]}),Vs(this)};i2.prototype.hasModule=function(t){return typeof t=="string"&&(t=[t]),this._modules.isRegistered(t)};i2.prototype.hotUpdate=function(t){this._modules.update(t),Vs(this,!0)};i2.prototype._withCommit=function(t){var n=this._committing;this._committing=!0,t(),this._committing=n};Object.defineProperties(i2.prototype,P6);const oa=ra({state(){return{user:{}}},mutations:{user(e){e.user}}}),la="modulepreload",aa=function(e){return"/"+e},h7={},Te=function(t,n,s){return!n||n.length===0?t():Promise.all(n.map(i=>{if(i=aa(i),i in h7)return;h7[i]=!0;const r=i.endsWith(".css"),o=r?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${i}"]${o}`))return;const l=document.createElement("link");if(l.rel=r?"stylesheet":la,r||(l.as="script",l.crossOrigin=""),l.href=i,document.head.appendChild(l),r)return new Promise((a,c)=>{l.addEventListener("load",a),l.addEventListener("error",()=>c(new Error(`Unable to preload CSS for ${i}`)))})})).then(()=>t())};/*!
  * vue-router v4.1.3
  * (c) 2022 Eduardo San Martin Morote
  * @license MIT
  */const $3=typeof window<"u";function ca(e){return e.__esModule||e[Symbol.toStringTag]==="Module"}const g1=Object.assign;function Q4(e,t){const n={};for(const s in t){const i=t[s];n[s]=x2(i)?i.map(e):e(i)}return n}const kt=()=>{},x2=Array.isArray,ua=/\/$/,ha=e=>e.replace(ua,"");function X4(e,t,n="/"){let s,i={},r="",o="";const l=t.indexOf("#");let a=t.indexOf("?");return l<a&&l>=0&&(a=-1),a>-1&&(s=t.slice(0,a),r=t.slice(a+1,l>-1?l:t.length),i=e(r)),l>-1&&(s=s||t.slice(0,l),o=t.slice(l,t.length)),s=ma(s!=null?s:t,n),{fullPath:s+(r&&"?")+r+o,path:s,query:i,hash:o}}function fa(e,t){const n=t.query?e(t.query):"";return t.path+(n&&"?")+n+(t.hash||"")}function f7(e,t){return!t||!e.toLowerCase().startsWith(t.toLowerCase())?e:e.slice(t.length)||"/"}function da(e,t,n){const s=t.matched.length-1,i=n.matched.length-1;return s>-1&&s===i&&tt(t.matched[s],n.matched[i])&&Ws(t.params,n.params)&&e(t.query)===e(n.query)&&t.hash===n.hash}function tt(e,t){return(e.aliasOf||e)===(t.aliasOf||t)}function Ws(e,t){if(Object.keys(e).length!==Object.keys(t).length)return!1;for(const n in e)if(!pa(e[n],t[n]))return!1;return!0}function pa(e,t){return x2(e)?d7(e,t):x2(t)?d7(t,e):e===t}function d7(e,t){return x2(t)?e.length===t.length&&e.every((n,s)=>n===t[s]):e.length===1&&e[0]===t}function ma(e,t){if(e.startsWith("/"))return e;if(!e)return t;const n=t.split("/"),s=e.split("/");let i=n.length-1,r,o;for(r=0;r<s.length;r++)if(o=s[r],o!==".")if(o==="..")i>1&&i--;else break;return n.slice(0,i).join("/")+"/"+s.slice(r-(r===s.length?1:0)).join("/")}var Kt;(function(e){e.pop="pop",e.push="push"})(Kt||(Kt={}));var Rt;(function(e){e.back="back",e.forward="forward",e.unknown=""})(Rt||(Rt={}));function ga(e){if(!e)if($3){const t=document.querySelector("base");e=t&&t.getAttribute("href")||"/",e=e.replace(/^\w+:\/\/[^\/]+/,"")}else e="/";return e[0]!=="/"&&e[0]!=="#"&&(e="/"+e),ha(e)}const va=/^[^#]+#/;function ya(e,t){return e.replace(va,"#")+t}function wa(e,t){const n=document.documentElement.getBoundingClientRect(),s=e.getBoundingClientRect();return{behavior:t.behavior,left:s.left-n.left-(t.left||0),top:s.top-n.top-(t.top||0)}}const y4=()=>({left:window.pageXOffset,top:window.pageYOffset});function Ea(e){let t;if("el"in e){const n=e.el,s=typeof n=="string"&&n.startsWith("#"),i=typeof n=="string"?s?document.getElementById(n.slice(1)):document.querySelector(n):n;if(!i)return;t=wa(i,e)}else t=e;"scrollBehavior"in document.documentElement.style?window.scrollTo(t):window.scrollTo(t.left!=null?t.left:window.pageXOffset,t.top!=null?t.top:window.pageYOffset)}function p7(e,t){return(history.state?history.state.position-t:-1)+e}const O5=new Map;function ba(e,t){O5.set(e,t)}function _a(e){const t=O5.get(e);return O5.delete(e),t}let Ta=()=>location.protocol+"//"+location.host;function Qs(e,t){const{pathname:n,search:s,hash:i}=t,r=e.indexOf("#");if(r>-1){let l=i.includes(e.slice(r))?e.slice(r).length:1,a=i.slice(l);return a[0]!=="/"&&(a="/"+a),f7(a,"")}return f7(n,e)+s+i}function xa(e,t,n,s){let i=[],r=[],o=null;const l=({state:f})=>{const m=Qs(e,location),v=n.value,A=t.value;let x=0;if(f){if(n.value=m,t.value=f,o&&o===v){o=null;return}x=A?f.position-A.position:0}else s(m);i.forEach(S=>{S(n.value,v,{delta:x,type:Kt.pop,direction:x?x>0?Rt.forward:Rt.back:Rt.unknown})})};function a(){o=n.value}function c(f){i.push(f);const m=()=>{const v=i.indexOf(f);v>-1&&i.splice(v,1)};return r.push(m),m}function u(){const{history:f}=window;!f.state||f.replaceState(g1({},f.state,{scroll:y4()}),"")}function h(){for(const f of r)f();r=[],window.removeEventListener("popstate",l),window.removeEventListener("beforeunload",u)}return window.addEventListener("popstate",l),window.addEventListener("beforeunload",u),{pauseListeners:a,listen:c,destroy:h}}function m7(e,t,n,s=!1,i=!1){return{back:e,current:t,forward:n,replaced:s,position:window.history.length,scroll:i?y4():null}}function Ca(e){const{history:t,location:n}=window,s={value:Qs(e,n)},i={value:t.state};i.value||r(s.value,{back:null,current:s.value,forward:null,position:t.length-1,replaced:!0,scroll:null},!0);function r(a,c,u){const h=e.indexOf("#"),f=h>-1?(n.host&&document.querySelector("base")?e:e.slice(h))+a:Ta()+e+a;try{t[u?"replaceState":"pushState"](c,"",f),i.value=c}catch(m){console.error(m),n[u?"replace":"assign"](f)}}function o(a,c){const u=g1({},t.state,m7(i.value.back,a,i.value.forward,!0),c,{position:i.value.position});r(a,u,!0),s.value=a}function l(a,c){const u=g1({},i.value,t.state,{forward:a,scroll:y4()});r(u.current,u,!0);const h=g1({},m7(s.value,a,null),{position:u.position+1},c);r(a,h,!1),s.value=a}return{location:s,state:i,push:l,replace:o}}function Ia(e){e=ga(e);const t=Ca(e),n=xa(e,t.state,t.location,t.replace);function s(r,o=!0){o||n.pauseListeners(),history.go(r)}const i=g1({location:"",base:e,go:s,createHref:ya.bind(null,e)},t,n);return Object.defineProperty(i,"location",{enumerable:!0,get:()=>t.location.value}),Object.defineProperty(i,"state",{enumerable:!0,get:()=>t.state.value}),i}function Sa(e){return e=location.host?e||location.pathname+location.search:"",e.includes("#")||(e+="#"),Ia(e)}function Aa(e){return typeof e=="string"||e&&typeof e=="object"}function Xs(e){return typeof e=="string"||typeof e=="symbol"}const K2={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},Ys=Symbol("");var g7;(function(e){e[e.aborted=4]="aborted",e[e.cancelled=8]="cancelled",e[e.duplicated=16]="duplicated"})(g7||(g7={}));function et(e,t){return g1(new Error,{type:e,[Ys]:!0},t)}function L2(e,t){return e instanceof Error&&Ys in e&&(t==null||!!(e.type&t))}const v7="[^/]+?",Na={sensitive:!1,strict:!1,start:!0,end:!0},Da=/[.+*?^${}()[\]/\\]/g;function ka(e,t){const n=g1({},Na,t),s=[];let i=n.start?"^":"";const r=[];for(const c of e){const u=c.length?[]:[90];n.strict&&!c.length&&(i+="/");for(let h=0;h<c.length;h++){const f=c[h];let m=40+(n.sensitive?.25:0);if(f.type===0)h||(i+="/"),i+=f.value.replace(Da,"\\$&"),m+=40;else if(f.type===1){const{value:v,repeatable:A,optional:x,regexp:S}=f;r.push({name:v,repeatable:A,optional:x});const _=S||v7;if(_!==v7){m+=10;try{new RegExp(`(${_})`)}catch(U){throw new Error(`Invalid custom RegExp for param "${v}" (${_}): `+U.message)}}let O=A?`((?:${_})(?:/(?:${_}))*)`:`(${_})`;h||(O=x&&c.length<2?`(?:/${O})`:"/"+O),x&&(O+="?"),i+=O,m+=20,x&&(m+=-8),A&&(m+=-20),_===".*"&&(m+=-50)}u.push(m)}s.push(u)}if(n.strict&&n.end){const c=s.length-1;s[c][s[c].length-1]+=.7000000000000001}n.strict||(i+="/?"),n.end?i+="$":n.strict&&(i+="(?:/|$)");const o=new RegExp(i,n.sensitive?"":"i");function l(c){const u=c.match(o),h={};if(!u)return null;for(let f=1;f<u.length;f++){const m=u[f]||"",v=r[f-1];h[v.name]=m&&v.repeatable?m.split("/"):m}return h}function a(c){let u="",h=!1;for(const f of e){(!h||!u.endsWith("/"))&&(u+="/"),h=!1;for(const m of f)if(m.type===0)u+=m.value;else if(m.type===1){const{value:v,repeatable:A,optional:x}=m,S=v in c?c[v]:"";if(x2(S)&&!A)throw new Error(`Provided param "${v}" is an array but it is not repeatable (* or + modifiers)`);const _=x2(S)?S.join("/"):S;if(!_)if(x)f.length<2&&(u.endsWith("/")?u=u.slice(0,-1):h=!0);else throw new Error(`Missing required param "${v}"`);u+=_}}return u||"/"}return{re:o,score:s,keys:r,parse:l,stringify:a}}function Ra(e,t){let n=0;for(;n<e.length&&n<t.length;){const s=t[n]-e[n];if(s)return s;n++}return e.length<t.length?e.length===1&&e[0]===40+40?-1:1:e.length>t.length?t.length===1&&t[0]===40+40?1:-1:0}function Oa(e,t){let n=0;const s=e.score,i=t.score;for(;n<s.length&&n<i.length;){const r=Ra(s[n],i[n]);if(r)return r;n++}if(Math.abs(i.length-s.length)===1){if(y7(s))return 1;if(y7(i))return-1}return i.length-s.length}function y7(e){const t=e[e.length-1];return e.length>0&&t[t.length-1]<0}const Ma={type:0,value:""},Pa=/[a-zA-Z0-9_]/;function za(e){if(!e)return[[]];if(e==="/")return[[Ma]];if(!e.startsWith("/"))throw new Error(`Invalid path "${e}"`);function t(m){throw new Error(`ERR (${n})/"${c}": ${m}`)}let n=0,s=n;const i=[];let r;function o(){r&&i.push(r),r=[]}let l=0,a,c="",u="";function h(){!c||(n===0?r.push({type:0,value:c}):n===1||n===2||n===3?(r.length>1&&(a==="*"||a==="+")&&t(`A repeatable param (${c}) must be alone in its segment. eg: '/:ids+.`),r.push({type:1,value:c,regexp:u,repeatable:a==="*"||a==="+",optional:a==="*"||a==="?"})):t("Invalid state to consume buffer"),c="")}function f(){c+=a}for(;l<e.length;){if(a=e[l++],a==="\\"&&n!==2){s=n,n=4;continue}switch(n){case 0:a==="/"?(c&&h(),o()):a===":"?(h(),n=1):f();break;case 4:f(),n=s;break;case 1:a==="("?n=2:Pa.test(a)?f():(h(),n=0,a!=="*"&&a!=="?"&&a!=="+"&&l--);break;case 2:a===")"?u[u.length-1]=="\\"?u=u.slice(0,-1)+a:n=3:u+=a;break;case 3:h(),n=0,a!=="*"&&a!=="?"&&a!=="+"&&l--,u="";break;default:t("Unknown state");break}}return n===2&&t(`Unfinished custom RegExp for param "${c}"`),h(),o(),i}function La(e,t,n){const s=ka(za(e.path),n),i=g1(s,{record:e,parent:t,children:[],alias:[]});return t&&!i.record.aliasOf==!t.record.aliasOf&&t.children.push(i),i}function Fa(e,t){const n=[],s=new Map;t=E7({strict:!1,end:!0,sensitive:!1},t);function i(u){return s.get(u)}function r(u,h,f){const m=!f,v=Va(u);v.aliasOf=f&&f.record;const A=E7(t,u),x=[v];if("alias"in u){const O=typeof u.alias=="string"?[u.alias]:u.alias;for(const U of O)x.push(g1({},v,{components:f?f.record.components:v.components,path:U,aliasOf:f?f.record:v}))}let S,_;for(const O of x){const{path:U}=O;if(h&&U[0]!=="/"){const Q=h.record.path,s1=Q[Q.length-1]==="/"?"":"/";O.path=h.record.path+(U&&s1+U)}if(S=La(O,h,A),f?f.alias.push(S):(_=_||S,_!==S&&_.alias.push(S),m&&u.name&&!w7(S)&&o(u.name)),v.children){const Q=v.children;for(let s1=0;s1<Q.length;s1++)r(Q[s1],S,f&&f.children[s1])}f=f||S,a(S)}return _?()=>{o(_)}:kt}function o(u){if(Xs(u)){const h=s.get(u);h&&(s.delete(u),n.splice(n.indexOf(h),1),h.children.forEach(o),h.alias.forEach(o))}else{const h=n.indexOf(u);h>-1&&(n.splice(h,1),u.record.name&&s.delete(u.record.name),u.children.forEach(o),u.alias.forEach(o))}}function l(){return n}function a(u){let h=0;for(;h<n.length&&Oa(u,n[h])>=0&&(u.record.path!==n[h].record.path||!Js(u,n[h]));)h++;n.splice(h,0,u),u.record.name&&!w7(u)&&s.set(u.record.name,u)}function c(u,h){let f,m={},v,A;if("name"in u&&u.name){if(f=s.get(u.name),!f)throw et(1,{location:u});A=f.record.name,m=g1(Ba(h.params,f.keys.filter(_=>!_.optional).map(_=>_.name)),u.params),v=f.stringify(m)}else if("path"in u)v=u.path,f=n.find(_=>_.re.test(v)),f&&(m=f.parse(v),A=f.record.name);else{if(f=h.name?s.get(h.name):n.find(_=>_.re.test(h.path)),!f)throw et(1,{location:u,currentLocation:h});A=f.record.name,m=g1({},h.params,u.params),v=f.stringify(m)}const x=[];let S=f;for(;S;)x.unshift(S.record),S=S.parent;return{name:A,path:v,params:m,matched:x,meta:Ua(x)}}return e.forEach(u=>r(u)),{addRoute:r,resolve:c,removeRoute:o,getRoutes:l,getRecordMatcher:i}}function Ba(e,t){const n={};for(const s of t)s in e&&(n[s]=e[s]);return n}function Va(e){return{path:e.path,redirect:e.redirect,name:e.name,meta:e.meta||{},aliasOf:void 0,beforeEnter:e.beforeEnter,props:$a(e),children:e.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in e?e.components||null:e.component&&{default:e.component}}}function $a(e){const t={},n=e.props||!1;if("component"in e)t.default=n;else for(const s in e.components)t[s]=typeof n=="boolean"?n:n[s];return t}function w7(e){for(;e;){if(e.record.aliasOf)return!0;e=e.parent}return!1}function Ua(e){return e.reduce((t,n)=>g1(t,n.meta),{})}function E7(e,t){const n={};for(const s in e)n[s]=s in t?t[s]:e[s];return n}function Js(e,t){return t.children.some(n=>n===e||Js(e,n))}const Zs=/#/g,ja=/&/g,Ha=/\//g,Ka=/=/g,qa=/\?/g,t9=/\+/g,Ga=/%5B/g,Wa=/%5D/g,e9=/%5E/g,Qa=/%60/g,n9=/%7B/g,Xa=/%7C/g,s9=/%7D/g,Ya=/%20/g;function z6(e){return encodeURI(""+e).replace(Xa,"|").replace(Ga,"[").replace(Wa,"]")}function Ja(e){return z6(e).replace(n9,"{").replace(s9,"}").replace(e9,"^")}function M5(e){return z6(e).replace(t9,"%2B").replace(Ya,"+").replace(Zs,"%23").replace(ja,"%26").replace(Qa,"`").replace(n9,"{").replace(s9,"}").replace(e9,"^")}function Za(e){return M5(e).replace(Ka,"%3D")}function t0(e){return z6(e).replace(Zs,"%23").replace(qa,"%3F")}function e0(e){return e==null?"":t0(e).replace(Ha,"%2F")}function He(e){try{return decodeURIComponent(""+e)}catch{}return""+e}function n0(e){const t={};if(e===""||e==="?")return t;const s=(e[0]==="?"?e.slice(1):e).split("&");for(let i=0;i<s.length;++i){const r=s[i].replace(t9," "),o=r.indexOf("="),l=He(o<0?r:r.slice(0,o)),a=o<0?null:He(r.slice(o+1));if(l in t){let c=t[l];x2(c)||(c=t[l]=[c]),c.push(a)}else t[l]=a}return t}function b7(e){let t="";for(let n in e){const s=e[n];if(n=Za(n),s==null){s!==void 0&&(t+=(t.length?"&":"")+n);continue}(x2(s)?s.map(r=>r&&M5(r)):[s&&M5(s)]).forEach(r=>{r!==void 0&&(t+=(t.length?"&":"")+n,r!=null&&(t+="="+r))})}return t}function s0(e){const t={};for(const n in e){const s=e[n];s!==void 0&&(t[n]=x2(s)?s.map(i=>i==null?null:""+i):s==null?s:""+s)}return t}const i0=Symbol(""),_7=Symbol(""),w4=Symbol(""),i9=Symbol(""),P5=Symbol("");function _t(){let e=[];function t(s){return e.push(s),()=>{const i=e.indexOf(s);i>-1&&e.splice(i,1)}}function n(){e=[]}return{add:t,list:()=>e,reset:n}}function W2(e,t,n,s,i){const r=s&&(s.enterCallbacks[i]=s.enterCallbacks[i]||[]);return()=>new Promise((o,l)=>{const a=h=>{h===!1?l(et(4,{from:n,to:t})):h instanceof Error?l(h):Aa(h)?l(et(2,{from:t,to:h})):(r&&s.enterCallbacks[i]===r&&typeof h=="function"&&r.push(h),o())},c=e.call(s&&s.instances[i],t,n,a);let u=Promise.resolve(c);e.length<3&&(u=u.then(a)),u.catch(h=>l(h))})}function Y4(e,t,n,s){const i=[];for(const r of e)for(const o in r.components){let l=r.components[o];if(!(t!=="beforeRouteEnter"&&!r.instances[o]))if(r0(l)){const c=(l.__vccOpts||l)[t];c&&i.push(W2(c,n,s,r,o))}else{let a=l();i.push(()=>a.then(c=>{if(!c)return Promise.reject(new Error(`Couldn't resolve component "${o}" at "${r.path}"`));const u=ca(c)?c.default:c;r.components[o]=u;const f=(u.__vccOpts||u)[t];return f&&W2(f,n,s,r,o)()}))}}return i}function r0(e){return typeof e=="object"||"displayName"in e||"props"in e||"__vccOpts"in e}function T7(e){const t=V2(w4),n=V2(i9),s=p2(()=>t.resolve(g2(e.to))),i=p2(()=>{const{matched:a}=s.value,{length:c}=a,u=a[c-1],h=n.matched;if(!u||!h.length)return-1;const f=h.findIndex(tt.bind(null,u));if(f>-1)return f;const m=x7(a[c-2]);return c>1&&x7(u)===m&&h[h.length-1].path!==m?h.findIndex(tt.bind(null,a[c-2])):f}),r=p2(()=>i.value>-1&&c0(n.params,s.value.params)),o=p2(()=>i.value>-1&&i.value===n.matched.length-1&&Ws(n.params,s.value.params));function l(a={}){return a0(a)?t[g2(e.replace)?"replace":"push"](g2(e.to)).catch(kt):Promise.resolve()}return{route:s,href:p2(()=>s.value.href),isActive:r,isExactActive:o,navigate:l}}const o0=ds({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:T7,setup(e,{slots:t}){const n=ft(T7(e)),{options:s}=V2(w4),i=p2(()=>({[C7(e.activeClass,s.linkActiveClass,"router-link-active")]:n.isActive,[C7(e.exactActiveClass,s.linkExactActiveClass,"router-link-exact-active")]:n.isExactActive}));return()=>{const r=t.default&&t.default(n);return e.custom?r:zs("a",{"aria-current":n.isExactActive?e.ariaCurrentValue:null,href:n.href,onClick:n.navigate,class:i.value},r)}}}),l0=o0;function a0(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)&&!e.defaultPrevented&&!(e.button!==void 0&&e.button!==0)){if(e.currentTarget&&e.currentTarget.getAttribute){const t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}function c0(e,t){for(const n in t){const s=t[n],i=e[n];if(typeof s=="string"){if(s!==i)return!1}else if(!x2(i)||i.length!==s.length||s.some((r,o)=>r!==i[o]))return!1}return!0}function x7(e){return e?e.aliasOf?e.aliasOf.path:e.path:""}const C7=(e,t,n)=>e!=null?e:t!=null?t:n,u0=ds({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(e,{attrs:t,slots:n}){const s=V2(P5),i=p2(()=>e.route||s.value),r=V2(_7,0),o=p2(()=>{let c=g2(r);const{matched:u}=i.value;let h;for(;(h=u[c])&&!h.components;)c++;return c}),l=p2(()=>i.value.matched[o.value]);ke(_7,p2(()=>o.value+1)),ke(i0,l),ke(P5,i);const a=Wr();return Q3(()=>[a.value,l.value,e.name],([c,u,h],[f,m,v])=>{u&&(u.instances[h]=c,m&&m!==u&&c&&c===f&&(u.leaveGuards.size||(u.leaveGuards=m.leaveGuards),u.updateGuards.size||(u.updateGuards=m.updateGuards))),c&&u&&(!m||!tt(u,m)||!f)&&(u.enterCallbacks[h]||[]).forEach(A=>A(c))},{flush:"post"}),()=>{const c=i.value,u=e.name,h=l.value,f=h&&h.components[u];if(!f)return I7(n.default,{Component:f,route:c});const m=h.props[u],v=m?m===!0?c.params:typeof m=="function"?m(c):m:null,x=zs(f,g1({},v,t,{onVnodeUnmounted:S=>{S.component.isUnmounted&&(h.instances[u]=null)},ref:a}));return I7(n.default,{Component:x,route:c})||x}}});function I7(e,t){if(!e)return null;const n=e(t);return n.length===1?n[0]:n}const h0=u0;function f0(e){const t=Fa(e.routes,e),n=e.parseQuery||n0,s=e.stringifyQuery||b7,i=e.history,r=_t(),o=_t(),l=_t(),a=Qr(K2);let c=K2;$3&&e.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const u=Q4.bind(null,y=>""+y),h=Q4.bind(null,e0),f=Q4.bind(null,He);function m(y,z){let D,L;return Xs(y)?(D=t.getRecordMatcher(y),L=z):L=y,t.addRoute(L,D)}function v(y){const z=t.getRecordMatcher(y);z&&t.removeRoute(z)}function A(){return t.getRoutes().map(y=>y.record)}function x(y){return!!t.getRecordMatcher(y)}function S(y,z){if(z=g1({},z||a.value),typeof y=="string"){const X=X4(n,y,z.path),d=t.resolve({path:X.path},z),p=i.createHref(X.fullPath);return g1(X,d,{params:f(d.params),hash:He(X.hash),redirectedFrom:void 0,href:p})}let D;if("path"in y)D=g1({},y,{path:X4(n,y.path,z.path).path});else{const X=g1({},y.params);for(const d in X)X[d]==null&&delete X[d];D=g1({},y,{params:h(y.params)}),z.params=h(z.params)}const L=t.resolve(D,z),d1=y.hash||"";L.params=u(f(L.params));const w1=fa(s,g1({},y,{hash:Ja(d1),path:L.path})),Y=i.createHref(w1);return g1({fullPath:w1,hash:d1,query:s===b7?s0(y.query):y.query||{}},L,{redirectedFrom:void 0,href:Y})}function _(y){return typeof y=="string"?X4(n,y,a.value.path):g1({},y)}function O(y,z){if(c!==y)return et(8,{from:z,to:y})}function U(y){return T1(y)}function Q(y){return U(g1(_(y),{replace:!0}))}function s1(y){const z=y.matched[y.matched.length-1];if(z&&z.redirect){const{redirect:D}=z;let L=typeof D=="function"?D(y):D;return typeof L=="string"&&(L=L.includes("?")||L.includes("#")?L=_(L):{path:L},L.params={}),g1({query:y.query,hash:y.hash,params:"path"in L?{}:y.params},L)}}function T1(y,z){const D=c=S(y),L=a.value,d1=y.state,w1=y.force,Y=y.replace===!0,X=s1(D);if(X)return T1(g1(_(X),{state:d1,force:w1,replace:Y}),z||D);const d=D;d.redirectedFrom=z;let p;return!w1&&da(s,L,D)&&(p=et(16,{to:d,from:L}),O3(L,L,!0,!1)),(p?Promise.resolve(p):r1(d,L)).catch(g=>L2(g)?L2(g,2)?g:r2(g):y1(g,d,L)).then(g=>{if(g){if(L2(g,2))return T1(g1({replace:Y},_(g.to),{state:d1,force:w1}),z||d)}else g=v1(d,L,!0,Y,d1);return u1(d,L,g),g})}function K(y,z){const D=O(y,z);return D?Promise.reject(D):Promise.resolve()}function r1(y,z){let D;const[L,d1,w1]=d0(y,z);D=Y4(L.reverse(),"beforeRouteLeave",y,z);for(const X of L)X.leaveGuards.forEach(d=>{D.push(W2(d,y,z))});const Y=K.bind(null,y,z);return D.push(Y),L3(D).then(()=>{D=[];for(const X of r.list())D.push(W2(X,y,z));return D.push(Y),L3(D)}).then(()=>{D=Y4(d1,"beforeRouteUpdate",y,z);for(const X of d1)X.updateGuards.forEach(d=>{D.push(W2(d,y,z))});return D.push(Y),L3(D)}).then(()=>{D=[];for(const X of y.matched)if(X.beforeEnter&&!z.matched.includes(X))if(x2(X.beforeEnter))for(const d of X.beforeEnter)D.push(W2(d,y,z));else D.push(W2(X.beforeEnter,y,z));return D.push(Y),L3(D)}).then(()=>(y.matched.forEach(X=>X.enterCallbacks={}),D=Y4(w1,"beforeRouteEnter",y,z),D.push(Y),L3(D))).then(()=>{D=[];for(const X of o.list())D.push(W2(X,y,z));return D.push(Y),L3(D)}).catch(X=>L2(X,8)?X:Promise.reject(X))}function u1(y,z,D){for(const L of l.list())L(y,z,D)}function v1(y,z,D,L,d1){const w1=O(y,z);if(w1)return w1;const Y=z===K2,X=$3?history.state:{};D&&(L||Y?i.replace(y.fullPath,g1({scroll:Y&&X&&X.scroll},d1)):i.push(y.fullPath,d1)),a.value=y,O3(y,z,D,Y),r2()}let I1;function J1(){I1||(I1=i.listen((y,z,D)=>{if(!Et.listening)return;const L=S(y),d1=s1(L);if(d1){T1(g1(d1,{replace:!0}),L).catch(kt);return}c=L;const w1=a.value;$3&&ba(p7(w1.fullPath,D.delta),y4()),r1(L,w1).catch(Y=>L2(Y,12)?Y:L2(Y,2)?(T1(Y.to,L).then(X=>{L2(X,20)&&!D.delta&&D.type===Kt.pop&&i.go(-1,!1)}).catch(kt),Promise.reject()):(D.delta&&i.go(-D.delta,!1),y1(Y,L,w1))).then(Y=>{Y=Y||v1(L,w1,!1),Y&&(D.delta&&!L2(Y,8)?i.go(-D.delta,!1):D.type===Kt.pop&&L2(Y,20)&&i.go(-1,!1)),u1(L,w1,Y)}).catch(kt)}))}let h2=_t(),R3=_t(),k1;function y1(y,z,D){r2(y);const L=R3.list();return L.length?L.forEach(d1=>d1(y,z,D)):console.error(y),Promise.reject(y)}function f1(){return k1&&a.value!==K2?Promise.resolve():new Promise((y,z)=>{h2.add([y,z])})}function r2(y){return k1||(k1=!y,J1(),h2.list().forEach(([z,D])=>y?D(y):z()),h2.reset()),y}function O3(y,z,D,L){const{scrollBehavior:d1}=e;if(!$3||!d1)return Promise.resolve();const w1=!D&&_a(p7(y.fullPath,0))||(L||!D)&&history.state&&history.state.scroll||null;return Z8().then(()=>d1(y,z,w1)).then(Y=>Y&&Ea(Y)).catch(Y=>y1(Y,y,z))}const z2=y=>i.go(y);let I2;const f2=new Set,Et={currentRoute:a,listening:!0,addRoute:m,removeRoute:v,hasRoute:x,getRoutes:A,resolve:S,options:e,push:U,replace:Q,go:z2,back:()=>z2(-1),forward:()=>z2(1),beforeEach:r.add,beforeResolve:o.add,afterEach:l.add,onError:R3.add,isReady:f1,install(y){const z=this;y.component("RouterLink",l0),y.component("RouterView",h0),y.config.globalProperties.$router=z,Object.defineProperty(y.config.globalProperties,"$route",{enumerable:!0,get:()=>g2(a)}),$3&&!I2&&a.value===K2&&(I2=!0,U(i.location).catch(d1=>{}));const D={};for(const d1 in K2)D[d1]=p2(()=>a.value[d1]);y.provide(w4,z),y.provide(i9,ft(D)),y.provide(P5,a);const L=y.unmount;f2.add(y),y.unmount=function(){f2.delete(y),f2.size<1&&(c=K2,I1&&I1(),I1=null,a.value=K2,I2=!1,k1=!1),L()}}};return Et}function L3(e){return e.reduce((t,n)=>t.then(()=>n()),Promise.resolve())}function d0(e,t){const n=[],s=[],i=[],r=Math.max(t.matched.length,e.matched.length);for(let o=0;o<r;o++){const l=t.matched[o];l&&(e.matched.find(c=>tt(c,l))?s.push(l):n.push(l));const a=e.matched[o];a&&(t.matched.find(c=>tt(c,a))||i.push(a))}return[n,s,i]}function qp(){return V2(w4)}const p0={xmlns:"http://www.w3.org/2000/svg","xml:space":"preserve",width:"200mm",height:"200mm","shape-rendering":"geometricPrecision","text-rendering":"geometricPrecision","image-rendering":"optimizeQuality","fill-rule":"evenodd","clip-rule":"evenodd",viewBox:"0 0 20000 20000"},m0=l3('<circle fill="none" cx="9976.91" cy="10017.76" r="7860.85"></circle><text x="12207.51" y="17911.11" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="170">P</tspan></text><text x="10719.36" y="18159.12" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="179">I</tspan></text><text x="9695.84" y="18204.66" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="187">M</tspan></text><text x="7755.72" y="17902.85" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="201">P</tspan></text><text x="6357.87" y="17336.77" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="210">I</tspan></text><text x="5464.33" y="16838.06" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="218">N</tspan></text><text x="4156.09" y="15744.19" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="229">A</tspan></text><text x="3127.77" y="14509.88" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="243">N</tspan></text><text x="2372.27" y="12981.9" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="252"></tspan></text><text x="2099.01" y="12280.66" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="260">K</tspan></text><text x="1811.41" y="10625.49" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="271">O</tspan></text><text x="1877.43" y="8849.18" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="283">M</tspan></text><text x="2403.65" y="6963.54" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="294">I</tspan></text><text x="2837.71" y="6038.98" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="303">S</tspan></text><text x="3667.1" y="4810.1" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="314">A</tspan></text><text x="4800.59" y="3677.45" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="325">R</tspan></text><text x="6178.36" y="2767.19" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="336">I</tspan></text><text x="7106.67" y="2337.6" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="344">A</tspan></text><text x="8564.44" y="1925.89" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="356">T</tspan></text><text x="10146.18" y="1843.51" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="1"></tspan></text><text x="10893.51" y="1874.21" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="10">A</tspan></text><text x="12461.06" y="2202.88" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="21">L</tspan></text><text x="13856.96" y="2810.29" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="30">-</tspan></text><text x="14595.29" y="3238.38" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="38">K</tspan></text><text x="15914.26" y="4325.64" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="52">H</tspan></text><text x="16979.95" y="5742.03" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="63">A</tspan></text><text x="17665.84" y="7133.91" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="74">W</tspan></text><text x="18137.43" y="8982.81" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="89">A</tspan></text><text x="18181.69" y="10589.03" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="100">R</tspan></text><text x="17870.74" y="12210.72" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="109">I</tspan></text><text x="17545.27" y="13180.19" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="117">Z</tspan></text><text x="16831.68" y="14521.19" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="128">M</tspan></text><text x="15548.87" y="15999.5" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="139">I</tspan></text><text x="14755.79" y="16640.62" fill="#fff" font-size="1668.06" font-family="Arial"><tspan rotate="145"></tspan></text><text x="14140.78" y="17055.99" fill="#fff" font-size="1668.06" font-family="Arial"><tspan rotate="153">\u25CF</tspan></text><text x="12985.94" y="17621.38" fill="#fff" font-weight="bold" font-size="1668.06" font-family="News701 BT"><tspan rotate="162"></tspan></text><circle fill="none" cx="9992.4" cy="10007.59" r="8729.17"></circle>',38),g0=[m0];function v0(e,t){return P2(),N3("svg",p0,g0)}const y0={render:v0},w0={xmlns:"http://www.w3.org/2000/svg","xml:space":"preserve",width:"200mm",height:"200mm","shape-rendering":"geometricPrecision","text-rendering":"geometricPrecision","image-rendering":"optimizeQuality","fill-rule":"evenodd","clip-rule":"evenodd",viewBox:"0 0 20000 20000"},E0=l3('<circle fill="none" cx="9976.91" cy="10017.76" r="7860.85"></circle><text x="13810.62" y="15009.26" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="147">F</tspan></text><text x="13183.03" y="15420.12" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="153">A</tspan></text><text x="12375.31" y="15822.88" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="161">K</tspan></text><text x="11488.47" y="16111.18" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="170">U</tspan></text><text x="10540.76" y="16266.17" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="179">L</tspan></text><text x="9795.85" y="16281.48" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="184">T</tspan></text><text x="8969.87" y="16208.37" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="193">A</tspan></text><text x="8091.29" y="16000.2" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="202">S</tspan></text><text x="7331.64" y="15691.52" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="207"></tspan></text><text x="7037.99" y="15563.07" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="213">T</tspan></text><text x="6281.41" y="15089.28" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="221">E</tspan></text><text x="5607.51" y="14522.96" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="229">K</tspan></text><text x="4967.16" y="13789.04" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="237">N</tspan></text><text x="4458.3" y="12960.89" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="243">I</tspan></text><text x="4218.7" y="12513.41" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="251">K</tspan></text><text x="3920.43" y="11588.16" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="257"></tspan></text><text x="3832.57" y="11280.2" fill="#fff" font-size="1138.59" font-family="Arial"><tspan rotate="263">\u25CF</tspan></text><text x="3748.45" y="10597.7" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="266"></tspan></text><text x="3713.07" y="10279.88" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="271">U</tspan></text><text x="3744.5" y="9319.64" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="280">N</tspan></text><text x="3927.04" y="8363.81" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="289">I</tspan></text><text x="4071.88" y="7877.99" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="294">V</tspan></text><text x="4415.07" y="7087.33" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="303">E</tspan></text><text x="4875.86" y="6336.87" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="311">R</tspan></text><text x="5480.54" y="5619.68" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="319">S</tspan></text><text x="6099.32" y="5080.98" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="325">I</tspan></text><text x="6505.21" y="4778.22" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="330">T</tspan></text><text x="7221.39" y="4358" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="338">A</tspan></text><text x="8058.74" y="4017.14" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="347">S</tspan></text><text x="8859.04" y="3839.26" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="350"></tspan></text><text x="9172.83" y="3781.11" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="356">T</tspan></text><text x="10062.49" y="3724.11" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="4">R</tspan></text><text x="10996.01" y="3802.48" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="13">U</tspan></text><text x="11929.29" y="4029.13" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="22">N</tspan></text><text x="12839.22" y="4383.21" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="33">O</tspan></text><text x="13693.61" y="4940.67" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="38">J</tspan></text><text x="14197.44" y="5330.84" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="46">O</tspan></text><text x="14881.45" y="6061.69" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="55">Y</tspan></text><text x="15369.54" y="6747.9" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="63">O</tspan></text><text x="15811.57" y="7666.7" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="68"></tspan></text><text x="15955.7" y="7956.24" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="77">M</tspan></text><text x="16210.33" y="9075.35" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="86">A</tspan></text><text x="16283.61" y="9976.16" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="94">D</tspan></text><text x="16212.96" y="10944.35" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="103">U</tspan></text><text x="15996.05" y="11880.66" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="112">R</tspan></text><text x="15649.4" y="12751.12" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="120">A</tspan></text><text x="15186.43" y="13524.65" fill="#fff" font-size="1138.59" font-family="Arial"><tspan rotate="125"></tspan></text><text x="15002.07" y="13781.67" fill="#fff" font-size="1138.59" font-family="Arial"><tspan rotate="128"></tspan></text><text x="14814.21" y="14037.45" fill="#fff" font-size="1138.59" font-family="Arial"><tspan rotate="134">\u25CF</tspan></text><text x="14335.36" y="14530.89" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="136"></tspan></text><text x="14104.84" y="14751.37" fill="#fff" font-weight="bold" font-size="1138.59" font-family="News701 BT"><tspan rotate="142"></tspan></text><circle fill="none" cx="9992.39" cy="10007.6" r="6272.44"></circle>',53),b0=[E0];function _0(e,t){return P2(),N3("svg",w0,b0)}const T0={render:_0},x0={xmlns:"http://www.w3.org/2000/svg","xml:space":"preserve",width:"220.625",height:"459.099","shape-rendering":"geometricPrecision","text-rendering":"geometricPrecision","image-rendering":"optimizeQuality","fill-rule":"evenodd","clip-rule":"evenodd",viewBox:"0 0 58373.6 121470"},C0=l3('<path fill="#1F1B20" d="M976.8 10966.8h56039.5l334.1 77838.4-28717.8 21917.6L976.8 88686z"></path><path fill="#E42B24" d="M10592.9 6424.3H47400v93641.8l-18642.4 15718.4-18164.7-15718.4z"></path><path fill="#FFED00" d="M16230 1013.3h25532.9v109263l-12932.2 10207-12600.7-10207z"></path><path fill="#FEFEFE" d="M13790 52276.9H14040.2l109.2 3.8 109 3.7 109.1 5.3 107.6 4.9 109 5.1 109.1 6.3 109.2 7.6 108.8 7.6 2.9 3.9 8.3 3.6 11.3 3.9 14.1 3.8 33.4 6.1 40.5 5.3 43.4 5.1 40.4 4.9 33.7 3.8 23.8 3.8v-17.6l71.2 10 95.2 11.3 114.4 15.3 130.3 17.8 143.8 20.1 151 21.6 158 24 159.4 26.6 156.8 27.8 150.9 29.1 71.2 15.1 69.9 16.5 65.8 15.2 62.9 16.6 58.7 14.9 53.2 16.6 48.9 17.7 43.3 16.3 36.4 16.5 30.6 16.5 23.9 17.7 16.8 16.4h-50.3l4.1 6.3 5.5 6.4 147 37.9 145.3 41.6 145.4 44.4 144.1 45.5 144 49.3 142.5 50.7 142.6 53.1 141.2 55.8 141.2 58.1 139.9 59.4 139.7 62 138.5 63.2 137.1 64.6 136.9 66.8 135.6 68.4 134.3 70.8 134.1 72.3 132.9 72.1 132.9 74.5 131.4 75.9 129.9 77.2 128.7 78.3 128.6 78.5 127.2 80.9 125.9 81 124.3 80.8 124.4 83.7 123.1 82.1 121.6 84.7 120.4 83.6 118.6 84.7 119 85.9V54952.1l19.6 15.2 25 21.3 29.5 25.4 30.7 25.2 16.8 11.4 15.5 11.4 15.2 10.1 15.4 9.1 14 7.4 14 5.1 12.6 2.4h9.9l110.5 88.5 108.8 91.2 107.6 89.7 106.4 92.3 106.4 91.2 104.8 93.7 103.4 93.5 103.5 93.7 101.9 96.1 102.1 94.7 100.8 97.3 99.3 97.6 99.2 98.7 97.7 98.7 98.1 101.1 96.2 101.2-6.8 3.7-7 6.4 34.9 40.6 36.4 40.2 35.1 40.5 36 40.6 35.1 41.6 36.4 40.5 36.3 40.6 34.9 41.8 16.9 2.3 18.2 10.3 22.4 13.8 23.8 20.3 25.1 25.4 27.8 30.1 30.9 34.4 30.7 38 33.7 41.5 33.4 44.4 35 48 36.5 49.3 73.9 106.2 75.5 112.5 75.4 115.2 72.8 115.2 71.3 111.3 65.6 107.4 58.7 98.6 51.9 86.3 43.4 73.3 32.2 55.5-8.7-1.3-8.3-2.5 43.4 80.9 43.5 79.8 43.3 79.7 44.6 79.7 43.2 80.9 43.6 79.8 44.7 79.6 44.7 79.6 4.1-7.5 4.4-7.7 25 49.4 30.9 56.9 34.9 63.3 39.1 67 42.1 72.2 41.9 75.8 43.3 77.1 43.4 78.5 41.8 78.4 39.2 77.3 36.5 75.6 30.7 72.2 13.8 35.4 12.8 32.9 11.1 32.9 8.3 31.7 7.2 29 5.5 29.1 4 25.2v25.4l-5.5-6.3-6.9-5.2 35 83.7 41.8 111.3 47.5 126.2 53.2 132.9 26.6 66.9 28 63.4 27.8 61.9 28.1 57 13.9 26.6 14 25.4 13.9 22.7 14.2 22.8 12.4 18.7 14.2 17.8 12.4 15.3 13.9 12.6 2.9-6.3 4.1-6.3 131.6 277 134.2 273.3 67.2 136.5 68.2 136.6 70 135.4 68.7 135.2 71.1 134 70 134.3 72.6 134 71.5 134 73.8 132.8 72.7 132.8 75.7 131.6 75.5 131.6 75.6 131.4 76.7 131.8 78.2 130 78.6 130.5 79.4 130.1 79.8 129.1 82.6 128.8 82.4 129.1 24.7 38.3v-6933.8c-1197.9-759.2-2024.5-2336.6-2024.5-4152.2 0-222.1 12.3-440.3 36.2-654.2-779.8-603.9-1364.3-1554.4-1364.3-3046.8 0-2580.4 1016.9-6203.4 2519.2-8206.7 100.1 108.4 196 219.2 288.3 332.2 209.6-513.2 456.8-980.6 731.8-1353.3 178.6 197.4 347.5 389.3 505.3 597.2 235.6-574.2 537.7-1118.7 984.2-1594.7 425.1 439.9 704.1 1011 926.8 1638.6 132.9-203.2 275.5-407.5 431.9-640.2 282.8 383.2 536.1 866.6 749.2 1396.8 87.3-127.9 177.7-253.3 271.3-375.4 1501.9 2003.6 2518.2 5625.6 2518.2 8205.5 0 1492.4-584.5 2442.9-1364.3 3046.8 23.8 213.9 36.3 432.1 36.3 654.2 0 1815.6-826.4 3392.7-2024.2 4152v6933.6l24.3-37.9 82.6-129.1 82.5-128.8 79.6-129.1 79.8-130.1 78.2-130.5 78.4-130 76.8-131.8 75.5-131.4 75.5-131.6 75.6-131.6 72.6-132.8 74.2-132.8 71.2-134 72.7-134 69.9-134.3 71.3-134 68.4-135.2 70-135.4 68.6-136.6 67.1-136.5 134.2-273.3 131.4-277 4.2 6.3 2.8 6.3 13.9-12.6 12.7-15.3 13.9-17.8 12.7-18.7 13.9-22.8 13.9-22.7 14.1-25.4 14-26.6 28-57 27.9-61.9 27.9-63.4 26.6-66.9 53.2-132.9 47.5-126.2 41.9-111.3 34.9-83.7-7.1 5.2-5.5 6.3v-25.4l4.3-25.2 5.6-29.1 7-29 8.5-31.7 11-32.9 12.5-32.9 14.1-35.4 30.7-72.2 36.5-75.6 39-77.3 42-78.4 43.4-78.5 43.2-77.1 42.1-75.8 41.8-72.2 39.2-67 35-63.3 30.6-56.9 25.4-49.4 4 7.7 4.3 7.5 44.5-79.6 44.9-79.6 43.4-79.8 43.3-80.9 44.8-79.7 43.3-79.7 43.3-79.8 43.4-80.9-8.4 2.5-8.4 1.3 32.2-55.5 43.3-73.3 51.7-86.3 58.7-98.6 65.8-107.4 71.1-111.3 72.8-115.2 75.5-115.2 75.6-112.5 74.1-106.2 36.4-49.3 35-48 33.4-44.4 33.6-41.5 30.8-38 30.6-34.4 28.1-30.1 25.1-25.4 23.8-20.3 22.3-13.8 18.3-10.3 16.6-2.3 35-41.8 36.4-40.6 36.3-40.5 35-41.6 36.4-40.6 35-40.5 36.2-40.2 35-40.6-6.9-6.4-7.1-3.7 96.6-101.2 97.7-101.1 97.9-98.7 99.3-98.7 99.3-97.6 100.6-97.3 102.2-94.7 101.9-96.1 103.6-93.7 103.3-93.5 105-93.7 106.2-91.2 106.2-92.3 107.6-89.7 109.2-91.2 110.5-88.5h9.8l12.4-2.4 13.9-5.1 14.3-7.4 15.2-9.1 15.4-10.1 15.5-11.4 16.6-11.4 30.8-25.2 29.3-25.4 25.4-21.3 19.4-15.2V54927.9l118.8-85.9 118.8-84.7 120.3-83.6 121.5-84.7 123.2-82.1 124.3-83.7 124.6-80.8 125.9-81 127.2-80.9 128.6-78.5 128.7-78.3 129.9-77.2 131.4-75.9 132.8-74.5 132.8-72.1 134.4-72.3 134.2-70.8 135.5-68.4 137-66.8 137-64.6 138.3-63.2 139.9-62 139.8-59.4 141.2-58.1 141.1-55.8 142.8-53.1 142.6-50.7 144-49.3 144.1-45.5 145.3-44.4 145.4-41.6 146.9-37.9 5.6-6.4 4-6.3H41007.1l16.9-16.4 23.8-17.7 30.7-16.5 36.2-16.5 43.5-16.3 48.9-17.7 53.2-16.6 58.6-14.9 63-16.6 65.6-15.2 69.9-16.5 71.3-15.1 151.1-29.1 156.6-27.8 159.4-26.6 157.8-24 151-21.6 144.2-20.1 129.9-17.8 114.6-15.3 95.1-11.3 71.4-10v17.6l23.7-3.8 33.5-3.8 40.5-4.9 43.4-5.1 40.8-5.3 33.3-6.1 14-3.8 11.1-3.9 8.6-3.6 2.7-3.9 109-7.6 109.2-7.6 109-6.3 109.1-5.1 107.6-4.9 108.8-5.3 109.3-3.7 109.1-3.8h250.3l152.2 5.1 152.5 7.7 152.5 8.8 149.4 10.1 149.7 13.8 148 14 148.2 16.5 147 18.9 145.4 18.9 145.2 22.9 144.2 22.8 143.9 26.5 144.1 26.6 142.6 28.9 141.1 30.5 141.3 32.8 141.1 34.1 141.3 35.6 139.8 37.9 139.8 39.1 139.9 41.8 139.7 41.8 138.3 44.1 140.1 46.9 138.3 48.2 138.5 49.3 138.3 50.6 138.4 51.7 138.5 54.4 138.2 56.9 138.5 57 138.3 59.4 1.6 7.5v7.7l23.8 7.5 34.9 12.7 43.4 16.5 51.6 21.4 57.3 24 61.5 26.6 65.8 27.9 64.4 29.1 64.3 30.3 62.8 30.4 57.2 28.9 51.9 28 22.4 12.7 21 12.5 18.1 12.8 15.3 10 14 11.3 9.8 9.1 5.7 8.8 4.1 6.1-443.1 100.1-420.9 115.1-401.2 130.3-381.7 145.5-365.1 159.2-346.6 173.3-329.9 185.8-316 198.9-300.7 211.2-286.4 221.3-274.1 233.9-261.6 244.3-250.2 252.8-241.8 263-232.1 270.7-222.3 279.6-216.6 287.2-208.4 294.5-204.2 299.9-199.8 307.4-194.3 311.1-193.1 317.5-190.1 321.1-188.6 323.7-377.7 659.3-384.5 666.4-197 335.1-199.9 335.2-206.8 335.2-211.3 334-22.3 26.6-29.3 36.7-36.4 46.7-40.7 56.9-100.4 136.5-118.9 163.2-134.2 185.9-145.4 201.2-155.3 210-159.3 213.7-81.2 106.3-81.1 103.6-79.6 103.8-79.7 98.7-77 96-76.7 92.4-74.3 85.9-71.2 81.2-68.7 73.3-64.2 66.9-61.5 58.3-55.8 49.3-51.8 39.4-46.1 28.9-42 19-34.8 6.2-31 41.8-33.3 40.6-36.5 41.6-36.2 41.9-39.4 41.7-40.4 40.3-42.1 41.8-43.3 40.6-43.3 40.3-46.1 41.8-46.1 39.2-47.7 40.6-48.8 40.3-48.9 39.2-50.5 39.3-48.8 37.8-102.1 77.3-103.5 74.6-102.2 72.1-101.9 69.6-99.3 68.3-99.1 65.7-93.7 62-91 60.7-29.3 40.6-33.5 39.2-39.2 39.1-43.2 37.9-47.7 35.6-51.6 36.6-54.6 34.2-57.5 32.7-61.5 33.1-64.4 32.8-65.5 31.5-67.1 30.4-70 30.4-71.1 29-71.4 29.1-72.7 28-146.9 56.7-145.4 54.6-142.6 54.2-137.1 53.2-64.2 26.6-62.8 27.9-60.1 26.5-57.4 26.6-54.4 27.7-50.5 27.8-46.1 28-42.1 29.1-224.9 91-226.7 87.3-229.2 84.7-230.7 82.2-232 80.9-233.5 78.5-233.4 77.2-235 75.9-469.7 150.5-468.2 152.9-232.2 77.2-233.4 78.4-230.7 82.2-229.3 82.3-226.6 86.1-226.5 89.7-222.3 92.2-220.9 97.4-216.6 99.9-215.3 106.4-211.3 110-98.4 55.4v.2l-108.3 60.8-204.2 122.7-198.5 129.1-195.8 135.3-190 142.8-184.6 149.3-180.3 158.3-173.6 166.8-168.9 174.6v-.2l-6.7-37.8-6.3 38-.1-.2-169.2-174.4v-.1l-173.2-166.7-.1-.1-180.2-158.2-.1-.1-184.5-149.2-.1-.1-190.1-142.7-.1-.1-195.8-135.2v-.1l-198.3-129-.2-.1-203.9-122.6h-.1l-108.2-60.8v-.1l-98.8-55.5-211.2-110-215.2-106.4-216.7-99.9-220.9-97.4-222.2-92.2-226.7-89.7-226.4-86.1-229.2-82.3-230.7-82.2-233.6-78.4-231.9-77.2-468.4-152.9-469.7-150.5-235.1-75.9-233.3-77.2-233.5-78.5-232.3-80.9-230.4-82.2-229.5-84.7-226.4-87.3-225.2-91-41.8-29.1-46.3-28-50.2-27.8-54.6-27.7-57.4-26.6-59.9-26.5-63.2-27.9-64.2-26.6-137-53.2-142.7-54.2-145.4-54.6-146.6-56.7-72.7-28-71.4-29.1-71.3-29-69.7-30.4-67.3-30.4-65.7-31.5-64.4-32.8-61.5-33.1-57.2-32.7-54.6-34.2-51.6-36.6-47.7-35.6-43.2-37.9-39.3-39.1-33.4-39.2-29.5-40.6-90.9-60.7-93.7-62-99.2-65.7-99.3-68.3-102-69.6-102.1-72.1-103.4-74.6-102.1-77.3-48.9-37.8-50.3-39.3-48.8-39.2-49.1-40.3-47.5-40.6-46.1-39.2-46.1-41.8-43.5-40.3-43.4-40.6-41.8-41.8-40.5-40.3-39.3-41.7-36.4-41.9-36.3-41.6-33.3-40.6-30.9-41.8-35.1-6.2-41.9-19-46.1-28.9-51.7-39.4-55.9-49.3-61.7-58.3-64.2-66.9-68.4-73.3-71.5-81.2-73.9-85.9-77.1-92.4-76.7-96-79.8-98.7-79.8-103.8-80.9-103.6-81.2-106.3-159.2-213.7-155.3-210-145.4-201.2-134.2-185.9-118.8-163.2-100.7-136.5-40.6-56.9-36.2-46.7-29.4-36.7-22.3-26.6-211.2-334-207-335.2-199.7-335.2-197.4-335.1-384.5-666.4-377.3-659.3-188.7-323.7-190.3-321.1-192.9-317.5-194.3-311.1-200.1-307.4-204.1-299.9-208.2-294.5-216.9-287.2-222.1-279.6-232.1-270.7-242-263-250.2-252.8-261.4-244.3-274-233.9-286.7-221.3-300.4-211.2-316-198.9-330-185.8-346.8-173.3-364.8-159.2-381.6-145.5-401.5-130.3-420.6-115.1-443.4-100.1 4.4-6.1 5.6-8.8 9.5-9.1 14.1-11.3 15.3-10 18.3-12.8 21.1-12.5 22.2-12.7 51.7-28 57.4-28.9 62.9-30.4 64.3-30.3 64.4-29.1 65.5-27.9 61.6-26.6 57.2-24 52-21.4 43.3-16.5 34.9-12.7 23.8-7.5v-7.7l1.3-7.5 138.5-59.4 138.3-57 138.6-56.9 138.3-54.4 138.5-51.7 138.3-50.6 138.5-49.3 138.3-48.2 139.8-46.9 138.5-44.1 139.9-41.8 139.7-41.8 139.9-39.1 139.9-37.9 140.9-35.6 141.4-34.1 141-32.8 141.4-30.5 142.5-28.9 143.9-26.6 144.1-26.5 144.1-22.8 145.4-22.9 145.4-18.9 146.7-18.9 148.2-16.5 148.3-14 149.4-13.8 149.8-10.1 152.5-8.8 152.1-7.7 152.5-5.1zm-3094.8-31913.8h4049v12784.8h-4285.6V20363.1h236.6zm6738 473.2h-.2v11838.5h.2V20836.3zm10275.8 2629 464.8 58.1v9151.4h.1v-9151.4l-464.9-58.1zm-1469.6-2629h-.1l-1877.6 7311.8 1877.7-7311.8zm7426.8 0h-.1v11838.5h.1V20836.3zm10275.9 2629 464.8 58.1v9151.4h.1v-9151.4l-464.9-58.1zm-1469.5-2629h-.1l-1877.7 7311.8 1877.8-7311.8zm-25276.1-473.2h5187.2l1749.3 6781.6 1741.5-6781.6h5406.6v12784.8h-3580.5v-7756l-1991.6 7756h-3178l-1982-7745.8v7745.8h-3589.1V20363.1h236.6zm16233.1 0h5187.2l1749.2 6781.6 1741.6-6781.6h5406.6v12784.8h-3580.5v-7756l-1991.6 7756h-3178l-1982-7745.9v7745.9H33193V20363.1h236.6zm-5232.5 75250.1 808.1 1202.8 757.2-1202.8-430-10882.1c83-3.8 165.6-9.1 248-15.6l676.5 10329.7 772.1-1517.4-1008.6-8861.1c84.4-11.9 168.3-25 251.7-39.7l1196.5 8473.9 644.7-1575.6-1367.1-6999.7c91.9-22.8 183-47.3 273.5-73.6l1541 6747.2 546-888.2 895.2 509.9-2182.4-6653.2c64-27.3 127.2-55.3 190.2-84.3l2361.9 6690.1 1355.1 1030.6-3281.4-7938.2c74.7-40.6 148.4-82.9 221.4-125.9l3655.4 8208.8 1435.5 915.5-4717.6-9359.5c69.9-47.1 138.5-95.8 206.5-145.3l5242.3 9733.5 1306.5 626.4 42.2-1420.7-6038.1-9383.8c60.8-54 121-108.7 179.9-164.7l5995.7 8808.2-104.4-1699.3-5586.7-7416.5c56.5-60.4 112.2-121.7 166.5-184l5582.3 7009.4-244.1-1684.7-5041.2-5688.4c43.9-57.3 87-115.3 129.1-173.9l5168.8 5472.2 19.8-1042.1 1030.1-15-5787.4-5091.5c24.6-43.9 48.9-88.1 72.8-132.6l5952 5111.1 1688.4 217.6-7438.4-5736.4c32.9-72 64.6-144.5 95.1-217.8l7931.7 5782.8 1700.6 78.1-9485.8-6242.6c25.8-73.2 50.7-146.9 73.9-221.2l10159.8 6297.6 1444.8-108.4-671.6-1252.6-10765.5-5565.6c15.9-72.7 30.9-145.7 44.5-219.2l10471.3 5074.5-937.7-1421.1-9472-4041.7c9.7-74.3 18.2-149 25.7-224l9292.1 3672.7-1051.4-1339-8211.7-2755.7 3.1-82.8 8140.2 2529.6-494.1-917.8 890.6-518.5-8550.8-1812.5c-4.3-62.3-9.5-124.5-15.3-186.5l8845.3 1727.6 1575.6-644.6-10469-1478.3c-10.3-68.8-21.7-137.2-33.8-205.3l10929.7 1244 1517.3-772.3-12518.5-819.8c-15.1-64.9-31.1-129.4-47.9-193.6l13134.4 519.1L50336 75432l-1202.8-807.9-1126.8 43.2c62.4 296.8-25.2 595.6-165.4 729.9-683.5 697.8-1868.2 362.2-1989.4-626.9l-3.5-20.5-8906.6 340.7c-2390.6 1098.1-5107.4 2163.8-7747.1 2142.9-3132-254.3-5967.4-1189.7-8324-2149.7l-9310.8-356.3-7.4 42.9c-121.1 989.1-1306 1324.7-1989.5 626.9-143.6-137.6-232.1-448.4-160.2-752.4l-542.8-20.7L7657 75432l1202.7 757.4 13134.6-519.1c-16.7 64.2-32.8 128.8-47.8 193.7l-12518.7 819.7L10945 77456l10930-1244c-12.3 68.1-23.5 136.5-33.8 205.3l-10469.3 1478.3 1575.6 644.6 8845.5-1727.6c-4.9 52.4-9.4 104.7-13.4 157.2l-8621.3 1787.8 877 563.7-527.7 884.8 8254.8-2525.3c.7 29.8 1.9 59.5 3.1 89.3l-8304 2786.7-1051.5 1339 9382.5-3708.5c7.1 74.3 14.8 148.2 24 221.9l-9560.8 4079.6-937.6 1421.1 10557-5116.1c13.1 73 27.6 145.3 42.8 217.4l-10849.6 5609-671.6 1252.6 1444.8 108.4 10238.2-6346.1c22.7 73.8 46.7 147 71.6 219.7l-9561.8 6292.6 1700.6-78.1 8003.8-5835.5c29.6 72.9 60.3 145.3 92.4 216.9l-7507.9 5790 1688.5-217.6 6016.4-5166.4c34.2 65.1 69.2 129.8 105.3 193.8l-5791.2 5141.8 1040.9 51.7-16.4 1030.1 5195.9-5551.5c30.1 42 60.5 83.6 91.5 124.8l-5083.1 5735.9-244.3 1684.7 5620-7056.7c53.5 62.5 108.3 124.2 164 184.7l-5621.8 7463.1-104.5 1699.3 6026.8-8854c58.3 56.3 117.3 111.8 177.4 166.3l-6066.7 9428 42.2 1420.7 1306.6-626.4 5264.2-9774.4c67.3 49.8 135.7 98.4 204.7 145.9l-4737.7 9399.8 1435.4-915.5 3671.7-8245.6c72.4 43.8 145.9 86.1 220 127.2l-3296.3 7973.7 1355.1-1030.6 2373.1-6721.4c77.1 36.2 154.9 71.5 233.4 105.1l-2162.7 6665.2 924-482.6 507.2 896.7 1528.7-6792.4c82.6 24.2 165.7 47.6 249.4 69.1l-1369.6 7012.1 644.8 1575.6 1198-8483.8c83.3 15.5 166.8 29.6 251 42.2L26911 93527.8l772.2 1517.4 676.8-10334.4c84.1 7.5 168.5 13.7 253.6 18.3l-416.5 10884.1zm19458.3-20932.6-1346 51.5c226.4 755.7 1411.7 814.2 1346-51.5zm-10164.2 154.7 8264.8-541.2c-49.2-218.8-115.4-485.7-200.9-786.4l-6927 788.4c-367.9 175.2-747.4 356.4-1136.9 539.2zm8802.9-576.5 1218.2-79.8c-26.3-57.5-55.9-117.2-90.1-179.3 111.8 45.2 205.5 102.1 283.1 166.7l859.9-56.3-1517.3-772.2-81 9.1c-364 197.6-602.6 559.2-672.8 911.8zm-6853.3-346.6 5982.5-844.7c-76.5-242.6-164.1-500.2-263.6-767.2l-114.3-46.8-1625.6 317.6c87 123.6 175 244.9 264.1 363-811.3-510-2328.8 84.5-4243.1 978.1zm-25131.4-1392.6-1361.9-266.1-806 329.9c-48.4 138.3-93.8 273.5-135.8 404.5l5994.4 846.4c-2131.5-958.3-3549.3-1572.5-3990.9-900.2 101.5-134.6 201.6-273 300.2-414.5zm4605.8 1725.5-7048.1-802.3c-89.3 309.9-158.7 585.8-210.7 813.2l8573.2 561.5c-459-194.1-897.5-386.7-1314.4-572.4zm-8268.2-755.6-1219.2 620.6 316.3 20.8c68-50.1 146.7-94.4 237.7-131.2-26.9 48.7-51 96-72.8 141.9l1192.4 78.1c-62.6-266.8-220-535.1-454.4-730.2zm453.8 1220.3-1350.4-51.6c-88.9 897.6 1139.3 835 1350.4 51.6zm21478.8-22327.9c-554.2 411.6-1199.4 655.3-1801.8 798.2-22 951.4-191.4 1815.9-456.6 2475.7 1120-540.1 1979.3-1767 2258.4-3273.9zm-2022.7 846.6c-626.5 126.8-1185.7 149.7-1515.6 149.7-330 0-889.1-22.9-1515.6-149.6 426.6 1346.9 1373.4 2282.3 1515.6 2282.3 142.2 0 1089.1-935.4 1515.6-2282.4zm-3251.9-48.4c-602.4-143-1247.8-386.6-1801.9-798.2 279.3 1506.9 1138.5 2733.8 2258.5 3273.9-265.2-659.8-434.6-1524.3-456.6-2475.7z"></path><path fill="#B0CB1F" d="M42277.3 69991.9c230.1 494.3 492.4 977.8 776.7 1443.6 435.9-197.1 854.3-444.1 1244.1-755-457.4-795.1-1028.2-1576.5-1731.9-2220.2 243.6-669.3 1525.8-1070 2548.9-952.7 184.6 610.7 413.4 1206.1 682.9 1788.7 374.4 743 711.1 1347.5 1012.6 1845 441.7 694.3 942 1372.1 1495.4 2037.7 512.9 559 719.8 699 702.9 1427 432.3 1509-6290.3 5307.6-7974 4011.3-1642.7-1491.1-670.7-2277.4-1107.9-4303.3-2744.1 1171.2-6662.5 3457.6-10542.2 3370.6-3790.2-84.9-7672.7-1710.7-11875.3-3513.4-516.5 2132.7 540.2 2920.5-1140.5 4446.1-1683.7 1296.3-8406.3-2502.3-7974-4011.3-17.1-728 190-868 702.9-1427 553.2-665.6 1053.7-1343.4 1495.4-2037.7 301.5-497.5 638.2-1102 1012.6-1845 269.5-582.6 498.1-1178 682.9-1788.7 1023.1-117.3 2305.3 283.4 2548.9 952.7-703.9 643.7-1274.7 1425.1-1732.1 2220.2 476.7 379.9 995.6 664.7 1537.2 878.9 313.9-503.7 602.6-1029.2 853.2-1567.5 380.6-873.8 684.5-1805.5 969.5-2751.1 2618.6-1451 5341.2 2412.3 12421.2 2659.4 7080-247.1 9802.4-4110.4 12421.2-2659.4 285 945.6 588.6 1877.3 969.4 2751.1z"></path><path fill="#009846" d="M28947 48824.3c19.1-1084.8-78.7-2753.2-604-4417.7-353.9-1121.3-901.6-2240.3-1737.9-3175-693.4 956.6-1279.5 2262.5-1702.6 3640.8-462.4 1506.8-729.7 3099.2-729.7 4417.3 0 1371.2 504.5 2273.3 1197.3 2865.6l2-13.5h187c9 62.5 19.2 124.5 30.1 186.2 187.4 136.5 384.9 253.5 587.5 354 338.1 167.5 690.2 289 1031.6 377l-.5-91.2c0-117.2 2.6-238.5 7.5-363.1 4.9-125.8 12.2-246.4 21.2-361.6h188.5c25.4 315.9 87.6 618.9 174.1 903.8 596.2 115.6 1125.8 136.7 1442.1 136.7 316.4 0 846.1-21.1 1442.3-136.7 86.5-284.9 148.7-587.9 174-903.8h188.6c9.1 115 16.3 235.5 21.4 361 4.8 125.2 7.4 246.7 7.4 363.7l-.4 91.1c341.2-88 693.3-209.4 1031.3-376.9 202.6-100.5 400.2-217.4 587.6-354 11-61.6 21-123.7 30-186.2h187l2 13.5c692.9-592.3 1197.4-1494.4 1197.4-2865.6 0-1317.9-267.2-2910-729.5-4416.5-421.5-1373.7-1004.9-2675-1695.1-3631-716.7 964.8-1235.9 2118.3-1601.1 3275-503.1 1593.5-714.3 3190.7-748.6 4312.2l-188.5-4v-1.1zm-6048.1 8127.1c0 76.2-7.4 169.4-11.9 234.3-2.4 33-.8 65.3-5.6 89.9-38.1 28.9-503.8 25.8-514.5 13.9 12.7-95.1 18.5-56.8 28.2-129.9 34.3-254.5 210.9-508.3 279.3-560.8 2.3-6 109.9-5.8 113.3 0 81.7 76.9 111.2 321.5 111.2 352.6zm12174.3 0c0 76.2 7.4 169.4 12 234.3 2.3 33 .7 65.3 5.5 89.9 38.1 28.9 503.8 25.8 514.5 13.9-12.7-95.1-18.5-56.8-28.2-129.9-34.3-254.5-210.9-508.3-279.3-560.8-2.2-6-109.9-5.8-113.3 0-81.6 76.9-111.2 321.5-111.2 352.6zm-20511 11508.8c-224.7-669.2-1303.3-928.4-2247.4-811.1-627.9 2249-2049.9 4037.5-3638.9 5983.2 1505.3-1097 2542.7 118.6 2450.1 944.5-118.6 1079.7-2037.6 1045.2-1144.2-577.1-760.6 307.6-683 1144.5-419.1 1397.6 683.4 697.7 1868.4 362.1 1989.5-627 130-775.2 908-4226.2 3010-6310.1zm14284.4 1893.4c7109.8-242.4 9630.4-4150.7 12254.2-2642.3 546.5 1881.6 1487.2 3768.8 2583.1 5222.8-2027.6-1274.7-8460 4346.9-14489.5 4299.3-8071.6-655.2-14176.1-5835.4-15185.2-4299.3 1096.2-1454 2036.6-3341.2 2583.2-5222.8 2623.8-1508.4 5144.3 2399.9 12254.2 2642.3zm13994.9-1893.4c224.7-669.2 1303.5-928.4 2247.4-811.1 628 2249 2050 4037.5 3639.1 5983.2-1505.5-1097-2542.7 118.6-2450.1 944.5 118.6 1079.7 2037.5 1045.2 1144.2-577.1 760.4 307.6 683 1144.5 419 1397.6-683.6 697.7-1868.3 362.1-1989.5-627-130.1-775.2-908-4226.2-3010.1-6310.1zM13790.1 52276.9H14040.3l109.2 3.7 109 3.8 109.1 5.2 107.6 4.9 108.9 5.1 109.2 6.3 109.1 7.6 109 7.6 2.7 3.9 8.4 3.6 11.2 3.9 14.1 3.8 33.5 6.2 40.5 5.2 43.4 5.1 40.5 4.9 33.7 3.9 23.7 3.7v-17.6l71.2 10 95.2 11.4 114.5 15.2 130.2 17.8 143.9 20.2 150.9 21.5 158.1 24 159.2 26.6 156.8 27.8 151 29.2 71.2 15 69.9 16.5 65.8 15.2 62.8 16.6 58.8 14.9 53.2 16.6 48.9 17.8 43.2 16.3 36.5 16.4 30.6 16.6 23.9 17.6 16.7 16.4h-50.2l4.1 6.3 5.5 6.4 146.9 38 145.5 41.5 145.3 44.4 144.1 45.5 143.9 49.3 142.6 50.7 142.6 53.2 141.3 55.7 141.1 58.1 139.8 59.3 139.8 62 138.6 63.3 136.9 64.6 137 66.9 135.6 68.3 134.3 70.8 134.2 72.3 132.7 72 132.9 74.6 131.4 75.9 130 77.2 128.7 78.3 128.6 78.5 127.2 80.9 125.9 81 124.3 80.8 124.4 83.7 123.1 82.1 121.6 84.7 120.3 83.6 118.8 84.7 118.9 86v24l19.6 15.3 25.1 21.4 29.3 25.3 30.9 25.3 16.7 11.3 15.5 11.4 15.2 10.1 15.4 9 14 7.5 13.9 5.1 12.7 2.4h9.9l110.4 88.6 108.9 91.1 107.6 89.8 106.4 92.3 106.4 91.1 104.8 93.7 103.4 93.5 103.5 93.7 101.8 96 102.2 94.8 100.7 97.4 99.3 97.5 99.3 98.6 97.8 98.8 98 101.1 96.2 101.2-6.9 3.7-7 6.4 35 40.5 36.4 40.3 35 40.5 36.2 40.6 35 41.6 36.4 40.5 36.3 40.6 34.9 41.8 16.9 2.3 18.1 10.3 22.4 13.7 23.9 20.4 25.1 25.3 27.9 30.2 30.8 34.4 30.7 37.9 33.7 41.6 33.4 44.4 34.9 48 36.5 49.3 73.9 106.2 75.6 112.6 75.4 115.1 72.8 115.2 71.3 111.3 65.6 107.4 58.8 98.6 51.8 86.2 43.4 73.4 32.2 55.5-8.6-1.3-8.4-2.5 43.4 81 43.5 79.7 43.2 79.6 44.7 79.8 43.3 80.8 43.5 79.8 44.7 79.8 44.7 79.5 4.1-7.5 4.4-7.7 25 49.4 30.9 56.9 34.9 63.3 39.1 66.9 42 72.3 42 75.9 43.3 77 43.3 78.4 41.9 78.5 39.2 77.2 36.5 75.7 30.6 72.2 13.9 35.4 12.7 32.9 11.2 33 8.3 31.5 7.1 29.2 5.6 28.9 4.1 25.3v25.4l-5.6-6.3-6.9-5.2 35 83.7 41.7 111.3 47.6 126.3 53.2 132.9 26.6 66.9 27.9 63.3 27.8 62 28.2 57 14 26.5 13.9 25.4 13.9 22.7 14.2 22.7 12.4 18.9 14.2 17.8 12.4 15.2 13.9 12.7 2.8-6.5 4.3-6.2 131.4 277.1 134.2 273.1 67.2 136.7 68.3 136.5 70 135.4 68.6 135.2 71.2 134 69.9 134.3 72.7 134 71.4 134 73.9 132.8 72.7 132.9 75.7 131.4 75.6 131.7 75.4 131.4 76.7 131.7 78.3 130.2 78.6 130.4 79.4 130.1 79.8 129.1 82.6 128.9 82.4 129.1 24.6 38.1v-6822c-385-235-733.5-551.4-1031.8-931.6-671.2-855.2-1087.3-2034.6-1087.3-3332.1 0-142.5 5.2-285.1 15.2-427 4.4-61.9 9.7-123.6 16.1-185.1-779.8-620.4-1359.5-1586.7-1359.5-3089 0-1335.3 270.6-2947.6 738.7-4472.8 442.6-1442.1 1063-2808.1 1799.8-3790.4l67.8-90.3 76.7 82.9c66 70.1 129.6 142.4 192 216.3 199.2-463.6 429.4-885.8 683.2-1229.7l68.3-92.4 77.3 85.4c144.3 158.4 280.6 312.5 410.8 475.7 229.9-528.4 522.8-1029.7 940-1474.7l67.8-72.1 69.1 71.5c396.4 410 667.4 927.2 883.4 1496.1 51.5-76.8 104.6-154.7 159.3-235l244.3-361 79.5 107.7c258.9 350.8 492.9 782.7 694.7 1256.7 56.9-80 115.3-159 174.9-236.6l75.9-98.8 74.6 99.5c736.4 982.4 1356.7 2348.3 1799.1 3790.1 468 1524.9 738.3 3136.9 738.3 4471.9 0 1502.3-579.7 2468.6-1359.4 3089 6.3 61.6 11.8 123.6 16.3 185.7 10 141.7 15.2 284 15.2 426.4 0 1297.5-416.1 2477-1087.1 3332.3-298.4 380-646.5 696-1031.8 931.5v6821.6l24.4-37.8 82.6-129.1 82.5-128.9 79.6-129.1 79.8-130.1 78.2-130.4 78.3-130.2 77-131.7 75.5-131.4 75.4-131.7 75.5-131.4 72.7-132.9 74.2-132.8 71.2-134 72.6-134 70-134.3 71.3-134 68.5-135.2 69.9-135.4 68.6-136.5 67.1-136.7 134.2-273.1 131.5-277.1 4 6.2 2.9 6.5 13.9-12.7 12.7-15.2 13.9-17.8 12.7-18.9 13.9-22.7 13.9-22.7 14.2-25.4 13.9-26.5 27.9-57 28-62 27.9-63.3 26.6-66.9 53.2-132.9 47.4-126.3 42-111.3 35-83.7-7.1 5.2-5.6 6.3v-25.4l4.3-25.3 5.6-28.9 7-29.2 8.4-31.5 11.1-33 12.5-32.9 14.1-35.4 30.7-72.2 36.5-75.7 39-77.2 42-78.5 43.4-78.4 43.2-77 42.1-75.9 41.8-72.3 39.2-66.9 35-63.3 30.6-56.9 25.4-49.4 4 7.7 4.3 7.5 44.6-79.5 44.8-79.8 43.4-79.8 43.2-80.8 44.9-79.8 43.3-79.6 43.3-79.7 43.3-81-8.3 2.5-8.4 1.3 32.2-55.5 43.3-73.4 51.7-86.2 58.7-98.6 65.8-107.4 71.2-111.3 72.8-115.2 75.4-115.1 75.5-112.6 74.2-106.2 36.4-49.3 35-48 33.5-44.4 33.6-41.6 30.6-37.9 30.7-34.4 28.1-30.2 25.1-25.3 23.8-20.4 22.3-13.7 18.2-10.3 16.8-2.3 34.9-41.8 36.4-40.6 36.3-40.5 35-41.6 36.4-40.6 34.9-40.5 36.3-40.3 34.9-40.5-6.8-6.4-7.1-3.7 96.5-101.2 97.8-101.1 97.9-98.8 99.3-98.6 99.3-97.5 100.6-97.4 102.1-94.8 102-96 103.6-93.7 103.4-93.5 104.9-93.7 106.2-91.1 106.2-92.3 107.6-89.8 109.2-91.1 110.5-88.6h9.8l12.4-2.4 13.9-5.1 14.2-7.5 15.3-9 15.4-10.1 15.4-11.4 16.8-11.3 30.6-25.3 29.4-25.3 25.3-21.4 19.5-15.3v-24l118.8-86 118.8-84.7 120.2-83.6 121.7-84.7 123.1-82.1 124.3-83.7 124.6-80.8 125.8-81 127.2-80.9 128.6-78.5 128.8-78.3 129.9-77.2 131.4-75.9 132.7-74.6 133-72 134.3-72.3 134.2-70.8 135.5-68.3 137-66.9 137.1-64.6 138.2-63.3 139.8-62 139.9-59.3 141.3-58.1 141.1-55.7 142.8-53.2 142.5-50.7 144-49.3 144-45.5 145.5-44.4 145.3-41.5 146.9-38 5.6-6.4 4.1-6.3h-50.5l16.9-16.4 23.9-17.6 30.7-16.6 36.2-16.4 43.5-16.3 48.9-17.8 53.2-16.6 58.5-14.9 63.1-16.6 65.6-15.2 69.9-16.5 71.3-15 151.1-29.2 156.5-27.8 159.5-26.6 157.8-24 151-21.5 144.1-20.2 130-17.8 114.7-15.2 95-11.4 71.3-10v17.6l23.9-3.7 33.4-3.9 40.5-4.9 43.3-5.1 40.8-5.2 33.4-6.2 13.9-3.8 11.2-3.9 8.6-3.6 2.8-3.9 108.9-7.6 109.2-7.6 108.9-6.3 109.1-5.1 107.7-4.9 108.9-5.2 109.2-3.8 109.1-3.7h250.2l152.3 4.9 152.5 7.8 152.4 8.8 149.5 10 149.7 13.9 148.1 14 148.2 16.5 146.9 18.9 145.3 18.9 145.4 22.9 144.1 22.8 143.9 26.5 144.1 26.6 142.6 28.9 141.1 30.5 141.3 32.8 141.1 34.1 141.3 35.6 139.8 37.9 139.8 39.1 139.9 41.8 139.7 41.8 138.3 44.2 140.1 46.7 138.2 48.3 138.6 49.3 138.2 50.6 138.4 51.7 138.6 54.4 138.2 56.9 138.6 57 138.2 59.4 1.5 7.5v7.7l23.9 7.5 34.9 12.7 43.4 16.5 51.6 21.5 57.3 24 61.5 26.5 65.8 27.9 64.3 29.2 64.4 30.2 62.8 30.4 57.3 29 51.8 27.9 22.4 12.7 21 12.6 18.2 12.6 15.2 10.1 14 11.3 9.8 9.1 5.6 8.8 4.3 6.2-443.2 99.9-421 115.2-401.1 130.3-381.8 145.5-364.9 159.2-346.8 173.3-329.8 185.9-316 198.8-300.6 211.2-286.5 221.3-274.1 234-261.6 244.2-250.2 252.8-241.9 263.1-232 270.6-222.3 279.6-216.6 287.1-208.4 294.6-204.2 299.9-199.8 307.4-194.3 311.1-193 317.4-190.1 321.2-188.7 323.8-377.6 659.1-384.6 666.5-197 335.2-199.9 335.1-206.8 335.2-211.3 334.1-22.3 26.6-29.3 36.6-36.5 46.7-40.6 56.9-100.5 136.6-118.9 163.1-134.1 186-145.4 201.1-155.3 209.9-159.3 213.8-81.3 106.4-81 103.5-79.6 103.8-79.8 98.6-76.9 96.1-76.7 92.4-74.2 86-71.3 81.1-68.6 73.3-64.3 66.9-61.6 58.3-55.7 49.3-51.9 39.3-46.1 29-41.8 19-34.9 6.2-31 41.9-33.4 40.5-36.4 41.6-36.3 41.8-39.2 41.8-40.5 40.3-42.1 41.8-43.3 40.5-43.4 40.3-46 41.9-46.1 39.3-47.6 40.5-48.9 40.3-48.9 39.2-50.4 39.2-48.9 38-102.1 77.2-103.5 74.7-102.1 72-102 69.6-99.3 68.3-99.1 65.7-93.7 62-90.9 60.7-29.4 40.6-33.5 39.2-39.2 39.1-43.3 37.9-47.6 35.6-51.7 36.6-54.5 34.2-57.4 32.7-61.6 33.1-64.3 32.8-65.6 31.5-67.1 30.5-69.9 30.4-71.2 28.9-71.4 29.2-72.7 27.9-146.9 56.8-145.4 54.5-142.6 54.2-137 53.2-64.3 26.6-62.8 27.9-60.1 26.5-57.5 26.6-54.4 27.7-50.4 27.9-46.1 27.9-42 29.1-225 91-226.6 87.2-229.2 84.7-230.8 82.4-232 80.8-233.5 78.4-233.5 77.3-234.9 75.9-469.7 150.5-468.3 152.9-232.1 77.2-233.4 78.4-230.8 82.2-229.3 82.3-226.5 86.1-226.5 89.8-222.4 92.1-220.9 97.4-216.5 100-215.3 106.3-211.2 110-98.6 55.5v.2l-108.3 60.9-107.5 64.6V57375.5c-49.8 24.8-99.5 49.7-150.4 72.5v11378.7l-144.8 94.1-70.9 49.1v-11434c-59 21.6-120.5 42-182.9 60.4v11503.5l-131.9 99.2-51.1 41.2v-11596c-71.7 15.5-143.4 30.2-215.7 41v11735l-98.3 86.2-52.1 50.2V57704.2c-74.8 6.8-151.5 12.1-227.7 14.1v12064.9l-62.6 64.6-6.7-37.9-6.3 37.9-62.7-64.6V57718.3c-76.5-2.9-151.9-6.7-227.7-14v11852.4l-52.1-50.3-98.2-86.2V57685.3c-72.8-10.6-145.2-24.6-215.7-41.1v11596l-51-41.2-132-99.1V57596.4c-62.5-17.6-123.4-38.3-183-60.5v11434l-71.1-49.1-144.7-94.1V57448c-51.2-22.6-101.2-46.9-150.2-72.5v11358.2l-107.5-64.6-108.3-60.9v-.2l-98.6-55.5-211.3-110-215.3-106.3-216.7-100-220.9-97.4-222.2-92.1-226.6-89.8-226.4-86.1-229.2-82.3-230.7-82.2-233.6-78.4-232-77.2-468.3-152.9-469.8-150.5-235.1-75.9-233.3-77.3-233.4-78.4-232.3-80.8-230.5-82.4-229.4-84.7-226.5-87.2-225.1-91-41.9-29.1-46.2-27.9-50.2-27.9-54.7-27.7-57.2-26.6-60-26.5-63.2-27.9-64.2-26.6-137.1-53.2-142.6-54.2-145.3-54.5-146.7-56.8-72.7-27.9-71.5-29.2-71.1-28.9-69.9-30.4-67.2-30.5-65.7-31.5-64.4-32.8-61.5-33.1-57.3-32.7-54.5-34.2-51.6-36.6-47.7-35.6-43.2-37.9-39.3-39.1-33.5-39.2-29.3-40.6-91-60.7-93.7-62-99.2-65.7-99.3-68.3-102-69.6-102.1-72-103.4-74.7-102.1-77.2-48.8-38-50.5-39.2-48.8-39.2-48.9-40.3-47.6-40.5-46.1-39.3-46.1-41.9-43.5-40.3-43.4-40.5-41.8-41.8-40.5-40.3-39.3-41.8-36.4-41.8-36.3-41.6-33.4-40.5-30.8-41.9-35.1-6.2-42-19-46.1-29-51.6-39.3-56-49.3-61.6-58.3-64.2-66.9-68.5-73.3-71.4-81.1-73.9-86-77.1-92.4-76.7-96.1-79.8-98.6-79.8-103.8-81-103.5-81.1-106.4-159.2-213.8-155.3-209.9-145.4-201.1-134.2-186-118.8-163.1-100.8-136.6-40.6-56.9-36.1-46.7-29.5-36.6-22.2-26.6-211.2-334.1-207-335.2-199.8-335.1-197.3-335.2-384.5-666.5-377.3-659.1-188.7-323.8-190.3-321.2-192.9-317.4-194.3-311.1-200.1-307.4-204.1-299.9-208.2-294.6-216.8-287.1-222.1-279.6-232.3-270.6-241.9-263.1-250.2-252.8-261.4-244.2-274.1-234-286.6-221.3-300.4-211.2-316.1-198.8-330-185.9-346.7-173.3-364.8-159.2-381.6-145.5-401.5-130.3-420.7-115.2-443.2-99.9 4.3-6.2 5.6-8.8 9.6-9.1 14-11.3 15.4-10.1 18.2-12.6 21.1-12.6 22.2-12.7 51.7-27.9 57.4-29 62.9-30.4 64.3-30.2 64.4-29.2 65.6-27.9 61.5-26.5 57.2-24 52-21.5 43.2-16.5 35-12.7 23.8-7.5v-7.7l1.3-7.5 138.6-59.4 138.2-57 138.6-56.9 138.3-54.4 138.5-51.7 138.3-50.6 138.5-49.3 138.3-48.3 139.9-46.7 138.4-44.2 139.9-41.8 139.8-41.8 139.7-39.1 139.9-37.9 141-35.6 141.4-34.1 141-32.8 141.4-30.5 142.5-28.9 144-26.6 144-26.5 144.2-22.8 145.3-22.9 145.4-18.9 146.7-18.9 148.2-16.5 148.4-14 149.4-13.9 149.7-10 152.5-8.8 152.1-7.8 152.5-4.9zm11853.6 318.5c139.8 608 376.7 1164 687.7 1638.2 340 518.6 768.7 939.1 1255 1222.3-107.3-311-195-658.3-258.8-1031.9-62.7-367.3-102.6-760.4-115.3-1169.2-368.6-91.9-751.5-221.4-1119-403.4-153.2-75.9-303.7-160.9-449.6-256zm2022.7 756.3c86 243 188.3 471.1 298.1 680.5 443.1 844.8 982.2 1384 1076.7 1384 94.7 0 633.6-539.1 1076.9-1384 109.9-209.5 212.1-437.5 298-680.5-569.3 101.8-1069.2 121.1-1374.9 121.1-305.6 0-805.4-19.3-1374.8-121.1zm3204.1-96.9c-12.8 408.9-52.6 801.8-115.4 1169.2-63.8 373.6-151.5 720.9-258.7 1031.9 486.2-283.2 914.8-703.6 1255-1222.4 310.9-474.1 547.8-1030.1 687.5-1638.1-145.8 95.1-296.3 180.1-449.6 256-367.6 182-750.2 311.5-1118.8 403.4zm1711.3-264-2.5-175.6c-148.2 561.4-377.5 1076.3-669.7 1521.9-408.2 622.5-940.2 1110.9-1547.3 1403.7l-128.7-120.1c142.5-354.7 257.1-770.8 335.3-1228.5 58.6-343.1 96.6-710.2 110.7-1092.8l-49.8 10.7c-95.8 291.1-215.2 562.6-344.6 809.4-475.9 907.1-1118.8 1486-1244 1486-125.2 0-767.9-579-1243.8-1486-129.5-246.7-248.7-518.4-344.6-809.4l-49.6-10.6c14.1 382.7 52.1 749.6 110.7 1092.7 78.1 457.7 192.8 873.8 335.3 1228.5l-128.7 120.1c-607.1-292.8-1139.2-781.2-1547.4-1403.6-292.2-445.6-521.3-960.4-669.6-1521.6l-2.6 175.2c0 1254.4 400.5 2392.1 1046.4 3215.5 640.6 817.1 1523.3 1323.6 2493.9 1323.6 970.6 0 1853.4-506.7 2494.2-1323.5 645.9-823.4 1046.4-1961.2 1046.4-3215.6zM29929 40690.6c-203.9-564.9-455.4-1080.1-821.3-1486.9-387.3 433.8-660.3 924.7-876.9 1442.2 109.3 146.9 213.3 302.4 311.8 473.6 211.1 367.2 395.5 805.1 548.3 1383 262.8-841.8 523.9-1328.3 838.1-1811.9zm1179.4 757.5c-186.2-455.8-402-874.3-640.4-1220.1l-94.4 138.8c-484.4 711.3-833.2 1223.1-1200.8 2523.5l-183-5.2c-162.8-732.1-368.8-1251.2-610.6-1671.7-221.2-384.7-474.6-689.9-753.2-1001.3-234.3 336.6-447 743.5-631.6 1187.4 718.5 893.6 1204.5 1921.6 1529 2950.1 319.5 1012.5 482.9 2026.5 558.3 2912.9 117.9-866.3 316.7-1835.5 622-2802.3 329.8-1048.9 789.9-2098.7 1404.7-3012.1z"></path><path fill="#4A813E" stroke="#4A813E" stroke-width="76.2" stroke-miterlimit="2.613" d="M17469.6 74197.4c-1415.7-726.8-3115.4-1360.8-3489.6-1017.5-727.1 603.1 1897.2 1942.1 3395.1 3078.5 12.2-597.2 24.6-1449.3 94.5-2061zm22458 126.4c1415.7-726.6 3115.4-1360.7 3489.6-1017.5 727.1 603.4-1897.2 1942.4-3395.3 3078.6-12-597.2-24.4-1449.3-94.3-2061.1z"></path><path fill="#FEFEFE" d="m40229.9 69550.2-408.9-158 117.9-428.9 406 140.3-115 446.6zm-18865.6 4598.2c12.9-84.9 28.1-170 42.1-254.9 16.2-86.1 32.5-172 51.1-258.6 26.6-323.2 55.2-644 101.3-961.1 45.6-314.1 108.3-625.3 174.5-934.5 135.2-141.7 271.3-284.4 407.4-426-104.6 390.8-202.4 786.5-271.2 1189.4-68.6 404.4-108.1 816.1-147.7 1230.2-6.1 35.7-17.4 73.7-37.3 109.7-21.1 37.1-51.1 79-93.1 125.3-69.9 91.9-146.7 151.4-227.1 180.5zm-2044.1-2621.3c-111.8 61.1-222.4 120.2-332.9 180.5-94.3-142.8-186.3-283.5-275.9-424.1-102.5 42.6-203.7 83-302.8 125.2-83.6-134-163.8-266.3-243.1-397.6 108.3-59.3 216.5-116.9 328.3-175.4 84.9 140.9 173.5 282.6 264.3 425.2 93.1-49.1 189.6-99.4 287.3-148.5 90.8 137.4 181.7 276.3 274.8 414.7zm1202.4 1877.7c-103.5 25.7-269.9 25.7-497 .8-242.1-30.2-537.6-102.5-888.2-214.8-344.6-117.7-680.3-270.2-998.8-463.8-363.9-221.3-648.2-435.3-861.6-627.9-261.7-246.6-439.9-474.1-540.9-688.7-49.1-109.1-82.8-221.8-100.4-338.4-3.4-24-4.5-47.2-5.8-72.3-1-25.7-2.7-51.4-2.4-79.7.7-27.7 4.8-50.9 7.3-71.2 2.2-20.8 9.1-41.4 17.2-64.6 13.1-30.8 28.2-61.7 42.1-92.8 45.4-68.6 101.4-121.8 168.7-162.1 87.3-57.6 197.9-88.6 330.7-94.7 5.7 4.4 16.2 20.7 28.9 52.5 7 18.2 15.3 35.9 24.6 54.9-53.5 5.9-113 37.7-179.2 89.4-65.2 52.2-105.1 96.9-118.8 134.9-35.2 98.6-31.5 204.5 9.2 315.1 43.2 109.9 142 267 299.3 477.5 57.1 69.6 145.4 154.7 270 257.7 69.7 55 141 109.9 211.9 164.8 62.8 45.7 128.2 88.6 192.1 132.3 187.4 115.2 377.2 232.9 569.3 345.4 158.2 91.8 314.2 170.8 466.6 236.2 45.5 18.8 117.8 47.1 213.2 80.6 111.6 37.9 203.4 68.8 274.9 93.7 48.6 17.1 99.8 35.1 151.1 53.2 52.4 14.5 107.1 28.3 162 43 206 54.9 376.9 87.8 512.2 96.9 199 22.6 339.7 10.4 428.2-33.4-22.1-71.1-43.1-142.6-64.1-213.9-25.6-79.8-67.3-177-125.7-285.9 9.5-5.2 51-50 119.9-132.1 69.9-84.5 132.7-136.6 187.4-162.5 39.7 90.2 77 212 105.9 359.8 3.7 33.7 6.9 62 11.8 86.8 2.2 24.9 3.3 60.9 6.9 108.3 2.3 47.2 0 86.6-8.2 120.3-4.4 34.9-9.2 72-13.9 108.1-18.6 85.7-53.6 161.4-108.3 222.4-65.2 70.3-164 125.5-298.1 164.2zm5311.7-220.8c-110.5-80.9-221.1-170.1-330.4-259.3 86.2-95.4 170-190.6 253.6-287.7 109.4 82.3 219 162 330.7 242-84.9 102.3-169.8 204.4-253.9 305zm-3230.2 753c-3.4 23.2-7 44.9-10.5 65.4-1.1 13.1-3.6 24.9-4.5 36.2-8.1 10.1-10.5 18.7-12.8 23.2-4.8 29.2-11.6 54.1-23.4 72.9-12.7 26.6-23.2 52.3-34.9 78.3-64.2 147.7-151.5 269.5-261.9 364.7-51.5 44.9-109.3 86.2-177.1 122-55.8 30.1-131.2 58.6-229.3 87.7-95.4 29.4-200 38.6-314.3 29.4-74.3-7-157-24-250.2-47.6-90.7-24.7-188.7-62.2-292-109.8-36.6-16.7-73.4-33.4-111-50.6-116.2-53.3-265.2-152-446.8-300.6-65.2-54.1-142-125.2-228.2-212.1 4.7-8 12.9-14.8 17.6-21.7 14-20.3 26.6-30.8 41.8-31.7 44.2 40.5 119.9 97.1 231.6 172.8 46.8 26.4 95.7 55.8 144.3 83.2 138.6 63.5 279.7 105.7 427.4 126.2 108.3 17.3 229.2 19.8 363.2 10.5 83.7-7.8 160.6-23.2 228-45.6 80.4-27.6 158.4-60.1 231.8-98.8 65.2-32.8 131.4-77.2 202.4-130.6 69.9-53.1 146.9-124.5 226-208 57.1-71.1 85.9-121.8 83.7-152-30.3-24-59.3-49.5-87.4-75.3-27.8-24.2-52.2-53.4-72-89.3-38.3-72.3-51.7-136.4-43.1-193.3 1.9-12.8 4.8-27.4 7-42.2 1.2-9.3 8.3-24 18.8-41.2 8.1-11.1 13.9-24.8 22-37.7 8.2-8.6 17.3-17.4 26.6-26.6 17.6-20.8 32.6-38.8 48.9-51.7 12.8-14.4 30.4-28.3 50.2-42.9 6.8-5.2 15-11.1 24.4-18 4.6 23.2 10.5 47.4 15.1 69.7 16.2 53.2 35.1 96.1 53.5 126.9 21 26.8 40.8 52.4 60.7 79.1 22.1 23.2 45.2 46.4 68.4 69.5 29.4 27.5 71.2 57.6 125.9 93.8 41.8 20.5 82.5 40.2 124.5 61.7 95.5 35.4 190.9 71.2 286.3 106.6v1.7c82.8 25.7 148 42.8 192.1 50.6 100.2 13.9 229.5 11.2 386.4-7.8 58.4-7.6 116.7-15.4 173.8-22.2 59.1-6.9 105.7-6.1 137.2 4.1 16.3-1.5 37.5 1.5 61.7 8.8 16.6 4.9 29 9.3 33.7 10.2 40.8 13.8 61.8 30.1 63.9 48.1 1.3 19.1 3.7 38.6 7.3 56.7 24.5 61.8 67.4 116.1 125.6 161.6 75.6 60 172.3 105.4 291.1 136.6 72.2 18.6 144.3 39.4 216.5 56.5 25.5 6.1 51 11.2 75.5 16.3 2.6-23.9 4.3-47.1 5.8-70.3 1.9-23.4 4.2-46.5 5.9-67.9 1.8-22.2 3.5-38 7.1-49.8 3.5-12.4 13.8-34.6 26.6-68.6 26.8-82.6 57.1-149.7 92-196.9 16.3-26.6 33.9-50.6 51.3-73.7 17.3-24 37.3-45.7 58.1-65.2 34.9-33.7 83.9-68.8 145.6-109.4 71-42.7 153.8-77.1 246.8-103.7 29.1-6.9 59.4-12 92-16.3 30.3-11.2 62.8-18.9 91.8-26.6 62-18.1 131.6-25.7 206.3-24.9 76.7 2.4 141.9-1.7 192.1-13 52.1-10.2 101-29.3 151.1-56.7 110.7-47.2 168.8-130.4 176.9-252.3 5.9-85.2 9.5-205.3 8.2-361.8 0-37.8-1.1-179.5-3.5-421.6-1.2-145.1-1.2-219.1-1.2-221.7-39.4-29.1-54.7-84-46.5-164.9 8.1-79.8 36.2-157 84-231.8 46.6-78.9 104.7-128.9 170.9-161.5 12.9 6.8 17.3 18.9 16.3 36.1-.2 1.7-3.4 14.6-10.3 38.8-6 23.1-10.5 42.7-11.8 59-3.4 40.5 9.4 77.4 43.1 110.1 44.2 42.7 117.5 84.1 226.8 120.1-22 59.2-59.1 143.5-108 253.4-15.2 40.4-39.7 93.5-71 161.6-12.8-13.2-25.7-24-38.3-37.1-6.1 219.1-10.5 438.1-15.5 656.3-4.5 84-24.5 199.2-57.9 343.5-3.7 23.2-7.1 45.5-10.5 66.1-2.5 14.8-4.7 24-7.1 29.3-1 5-5.8 12.7-16.3 24.9-17.6 36.9-37.1 73.7-55.7 109.8-17.6 32.8-46.6 68.6-82.8 107.4 134.8 44.7 271.3 87.7 407.4 131.5 79.9 20.6 159.4 42 238.8 62.5 3.9-71.5 8.1-142.8 11.4-214.5-13.9-339.5-26.1-676.8-33.9-1013.4-7.4-334.4-10.2-669.3-13.7-1003.3 81.5-207.9 160.7-414.7 237.5-625.3 5.9 434.7 12.2 869 21 1302.9 8.8 436.3 24.4 874.4 40.7 1312.3-1.1 40.2-8.2 84.2-21 132.3-14.7 42.5-33.1 94.6-59.5 153.3 22.5 2.2 47.8 3.9 72.3 5.5 94.4 3.7 188.5 7.8 282.9 12.3 79.3-6.2 157.2-13.1 235.2-19.1 16.3-1.7 32.6-2.6 48.9-3.4 23.2-2.4 40.7-3.5 57.1-4.4-75.9 153-151.4 305.8-227.2 457-11.5 1.7-24.4.9-34.7.9-54.9 0-108.4 2.5-163.1 3.4-25.6 1.7-52.6 4.3-77.1 5.1-20.7 1.8-34.7 2.7-45.2 4.4-8.2.8-26.8 5.9-53.4 13.7-24.4 4.2-46.6 8.5-69.9 13-28 9.5-55.8 17.2-82.7 24.1-32.7 7.6-61.6 15.4-92 22.2-123.3 18.9-226.9 42.1-309.7 70.4-89.6 30-181.4 58.3-273.6 86.6-81.5 27.7-161.6 50.8-242.1 73.2-150.1 33.4-300.2 67.9-451.6 100.5-30.4 4.3-53.5 9.4-69.9 11-38.3 7.6-79.1 14.7-119.8 18.1-76.8 2.7-154.9 2.7-231.8.9-45.3-1.7-91.8-6-134.9-8.5-52.3-4.3-104.9-9.5-154.9-15.5-55.9-7.7-110.6-16.2-165.2-25-53.5-11-104.9-21.3-154.8-32.7v-.8c-87.4-19.7-173.5-43.8-259.5-66.1-100.3-27.4-179.5-55.1-238.7-82.3-60.7-27.7-121.1-64.6-181.8-116.2-21.9-16.3-44-42.7-68.4-79.8-24.7-37.7-46.6-73.1-61.8-106.4-14.1-20.7-24.4-51.7-34.9-92.8-14-7.7-23.2-12.1-31.6-14.6-31.3-9.7-67.5-14.6-108.2-15.4-6.9-1.7-19.8-.9-36.1 1.7-18.6.8-33.7 2.3-50 4.3-51.4 4.3-94.3 16.3-130.6 30.9-121.9 48-249 65.2-374.7 51.5-47.6-5.8-104.7-19-169.9-37.6h-1.2c-34.8-10.5-71.3-23.2-109.4-37.1-8.4-3-17.6-7.7-25.8-10.5 0 0 1.4 0 1.4-1.5-53.4-19.7-105.9-40.4-157-59.4-18.9-6.9-37.5-13.5-56-20.4-29.1-14.8-48.9-25.9-60.6-33.6-15.1-11.2-29-21.5-44.2-31.8-9.2-9.4-18.7-18.8-30.3-28.5zm1524.9 1309.1c-130.2-107.5-258.2-214.6-387.6-328.1-86.2 69.5-170 139.1-256 208.7-125.8-109.8-250.5-218.1-373.7-326.2 86.1-84.4 169.8-166.8 257.1-251.8 135.1 114.2 272.5 227.6 409.9 340.8 76.6-69.4 153.6-139.8 232.7-212.9 131.7 104 265.5 208.9 399.3 313.4-93.1 85.2-186.3 171.8-281.7 256.1zm2622.9-1080.5c-47.9-12.1-94.4-24.8-143.3-36-57.1-17.4-114.1-35.2-168.8-54-140.9-53.2-257.3-95.5-350.3-123.2-37.4-10-81.5-22.2-134-33.2-53.5-12.2-97.6-21-135.2-24.9-33.7-3.9-63.8-6.8-95.4-10.5-20.8.9-41.8 2.9-62.8 3.7-13.9-2.8-32.5-3.7-51.3-1.8-20.7 1-42.9 4.2-64.9 11-73.4 13-142.2 37.9-207.4 74.8-37.2 24.9-83.8 66.3-136.1 128-29.2 36.1-56 88.4-81.5 157-9.2 32.8-19.7 63.9-27.8 97.1 24.4 4.5 48.8 9.5 74.3 14.9 16.3 3.2 32.8 6.8 49.2 9.1 10.2.9 20.7 1.7 31.2 2.6 38.4 2 78.1 4.5 116.2 5.2 44.4 3.6 89.9 5.3 133.8 7.7 50.3 6.2 78.3 8.6 82.8 7.1 21.2-2.6 44.4-4.5 67.6-6.3 49.1-3.2 97.9-10 145.5-15.4 19.8-1.7 38.5-4.9 58.2-7.7 24.4-6 48.9-11 74.6-16.3 110.5-21.4 221.1-43.8 329.4-66 88.5-18.1 176.8-36.1 265.4-61.1 75.4-20.4 152.5-40.4 230.6-61.8zm1850.7 888.8 4.7-289.7 7-299.3-144-2134.9 225.8-641.3 159.7 2759.9c0 41.3-6.2 86.4-17.8 134.8-12.4 49.2-32.8 107.5-62.4 176.1-50 129.2-107.4 227.5-173 294.4zm6641-3691c-135.2-25.2-270.6-51.6-403.5-77.8-33.5 133.2-65.8 266.7-99.5 399.7-134-34.1-265.9-67.6-396.5-102.5 27.7-150.3 56.4-303.6 86.6-456.9 131.7 31.9 264.8 62.4 397.8 90.8 33.7-133.8 68.4-269.7 104.2-405.7 121.4 30.7 246.2 61.2 370.1 86.1-19.7 157.5-38.1 313-59.2 466.3zm2012.5 908.2c-1.1 16.6-2.4 32.7-3.3 48.6-4.9 19.1-10.5 37.8-12.8 55.9-16.3 40.8-29 81.5-45.1 123-42.9 106.7-102 206.2-177 296.5-45.3 50.6-91.5 96.5-138.8 138.1-25.5 19.5-49.3 37.5-71.6 53-14.8 10.1-31.4 20.1-48.7 28.9 1.1.7 1.1 1.5 1.1 3-86.7 44.1-173.3 89.4-261.2 132.1-16.3 8.8-32.4 16-47.4 24-92.6 45-161.9 70.6-206.1 78.5-82.1 20.4-161.9 9.6-232.4-30.4-38.1-21.9-71.6-42.9-97.2-65.4-38.1-28.3-69.5-59-91.3-91.6 18.4 119-20.8 237.6-115.8 353.2-97.1 115.5-244 213.9-441.7 298.6-12.9 5.4-23.2 9.9-34.6 15.3-6.8 2.7-14.1 6.4-22 9.4-10.3 4.3-22.1 9.4-32.4 13.1 0-.9 0-2.4-1-3.7-70.8 28.3-142.5 56.7-213 82.8-99.2 37.8-175.8 59-226.6 64.6-31.3 5.1-61.3 5.7-87.9 4.5-29-.7-61.4-7.3-96.9-17.4-12.9-4.6-26.9-6.5-38.5-11-16.2-11.1-32.3-21-48.6-31.9-30.1-26.4-58.8-53-87.9-80.8-10.3-8-32.4-35-65.7-82.2-10.5 1.6-21 3.1-31.5 4.5-27.7 8.8-57.7 26.2-92.4 51.5-9.3 7.9-18.6 16.7-28.8 25.5-12.8 11.8-24.4 24.1-37.2 36.5-41.7 38.4-72.7 79.1-92.5 119.9-75.2 125.6-171.1 227.9-285.8 302.1-65.6 34.9-151.4 66.9-256.7 93-8.1 2-15 4.3-24.2 5.9v-5.3c-107.4 27.1-214 54.7-319.3 80.7-73.7 19.1-147.9 35.8-220.6 51-233.8 43.3-405.1 57.7-517.3 45.7-113-12-218.4-48.6-318-106.6-99.2 79.2-245 145.9-428.8 203.3-186.3 55.9-392.2 84.7-618.8 97.4-5.9.2-10.5 0-17.4 0v1.4c-181.6 9.5-365.4 11.5-547.2 7.4-5.6 124.1-20.6 231.6-42.7 324.6-24.2 93-67.1 201.3-127.2 323.4-63.7 124.7-134.2 233.3-214 327-67.1 76.9-159.7 164.2-281 255.6-61.4 45.2-129.6 85.9-206 117-76.1 32-148.9 53.9-224.3 66.8-60 8.8-128.4 12.5-205.8 11-76.3-1.4-151.3-7.4-224.3-26.3-34.7-8.8-71.8-18.1-107.6-27.4-119.2-30.5-260.2-106.9-425.7-226.7-54.4-40.1-126-98.9-209.4-171.6 6-16 10.5-25.2 14.1-32.7 16.1-21.7 31.1-39.3 43.7-50.6 47.4 38.3 121.6 79.7 221.1 124.7 33.5 13.8 78.7 31.3 139.9 55.2 125 30.6 257.9 40.1 403.7 20.5 110.9-19.7 237-64.7 368.8-128.6 93.7-47.2 178-98.9 255.6-152.7 71.8-53.6 142.2-114.1 209.5-181 66.9-68.1 123.5-138.5 167.7-211.2 47.4-72 83-147.8 114.3-227.5 14-33.4 24.2-64.8 33.7-99.5 11.5-33.4 17.4-65.4 22-93.9-9.4 1.5-22 1.5-37.1 2.4-17.5.6-38.1.6-64.9 0-24.2-.9-50.6-2.4-80.8-4.4-29-2.3-66.1-5.7-108.8-13.9-43-8.6-90.3-23.4-142.1-42-51.1-19.1-96.1-42.2-140.1-69.9-91.3-57.9-158.4-140.9-196.6-247-6.9-20.2-14-43.6-18.4-69-4.5-26.9-9.9-51.5-11.6-76.4-2.8-40.8-1.1-80 0-118.4 4.7-39.2 7.9-71.2 15.2-96.7 2.2-67.3 10.1-134.2 28.8-198.9 10.5-52.4 30-101.7 56.6-147.6 14.9-25.9 34.7-51.5 56.7-76.2 21.9-25.4 45.1-51 66.9-77.1 31.4-37.8 63.5-65.2 98.5-84.3 32.3-18.9 71.6-27.2 117.7-27 61.5.4 119.4 18.2 173.7 53.2 54.3 36.2 107.5 93.7 160.8 173.7 32.4 48 63.7 102.3 94.8 162.7 33.7 60.9 62.4 123.5 84.3 185.2 47.3 110.5 76.6 214.5 86.8 311.9 141.1 1.9 241.7 4.4 302 1.9 62.3-2.4 135.2-5 220.8-9.9v1.5c6.9 0 12.8-.8 17.4-.8 12.8-1.5 26.6-2.2 40.5-2.2 10.5-.8 23-1.5 33.5-2.4 9.3-.6 18.6-1.5 28.8-1.5 69.6-4.2 126.2-10.7 170.1-20.1 77.4-10.9 148.2-26.2 212.8-48 66-22.3 127.3-47.8 179.2-76.4-42.9-36.2-78.5-90.6-107.4-160.6-10.5-30.5-21-61.7-30.3-92.8-8.1-17.6-13.7-30.5-18.2-38.6-1.3-7.1-5.4-21.7-9.4-42.9-21.2-106.6-16.8-246.2 8.1-415.6 24.9-168.5 55.6-271 91.4-305.9 39.2-95.9 75.1-167.1 106.3-218.5 97.2-152.5 213.8-239.8 350.4-259.5 118.1-17.2 227.9 35.5 329.6 155.6 68.4 83.5 130.8 199.7 192.1 352.8 19.8 65.6 42.9 131.7 61.3 197.9 3.5 21.7 5.9 43.6 8.1 66.1 18.5 150.5 17.3 278.9-2.2 387.8-19.8 108.6-61.4 204.4-125 285.1 47.6 3.4 93.7 5.7 135.5 7.9 42.6.6 99.3 0 166.4-3.7 66.9-3.7 133.3-11.1 196.6-27.6 11.9-3 25.3-7.3 39.2-10.1 6.9-1.6 16.1-5.1 25.5-6 95.9-24.5 192-48.5 290.4-72.5 43.7-11 90.3-21.9 134-32v2.2c84.5-24 143.5-45 178.2-63.2 81-46.6 182.7-131.5 300.6-256.5 42.8-45 84.5-88.8 126.3-133.6 44.8-46.6 81.9-75.1 109.8-83.7 16.1-8.1 34.7-16 50.8-26.1 11.6-2.2 22.1-6 32.4-9.5 32.3-11.7 55.5-7.2 70.5 13.2 10.3 19.7 20.8 37.7 31.3 55.9 45.1 51.7 103 83.7 170.1 96.6 88.9 15.9 183.8 4.9 286.6-33.5 64.9-24.1 130.9-49.4 197.7-76.1 41.9-17.6 84.5-35.9 128.5-54.5 0 .4 1.1 1.3 1.1 2.8 101.8-47.2 190.9-93.7 265.1-140.3 50.8-29.8 88.9-59.6 118.9-87.7 29-27.8 51-55.3 63.7-80.8 31.1-57.5 35.8-115.6 15.1-172.2-5.9-8.8-11.7-18.9-17.5-28.9-11.5-30.7-23.1-61.8-34.7-93.3-11.5-32-22.9-63.9-35.8-96.6-48.7-111.8-98.2-223.8-149.2-335.7 7-70.3 17.3-141.5 25.5-213.6 4.5-46.3 11.6-95.8 18.4-143.9 7.1-44.2 15.2-88.6 23.2-134.2 80.8 179.3 161.9 359.6 244 539.7 9.2 25.5 18.6 50.9 28.7 76.3 5 11.7 8.2 21 10.5 27.5 2.4 6.9 12.9 20.6 30 45.2 58 112 115.9 189 177.2 229.5 68.1 48.8 157.4 73.5 262.6 74.2 24.3-2.2 46.1-5.8 70.6-8.6 21.9-3.9 43.8-8.2 66.9-13.1 60.2-30.6 120.3-62 179.3-93.9 0-.6-1.1-2.8-1.1-4.3 33.4-18.8 67.1-37.1 104-55.9 100.7-53.2 188.7-118.4 264.8-197.1 77.5-77.7 132.9-163.4 163.2-254.1 31-93.1 57.9-236.1 79.8-427.8 13.9-3.8 27.6-7.5 43.9-11.8 7.9 15.3 19.8 29 28.9 42.2 7 18 16.3 36.9 24.3 54.5 4.5 16.7 10.3 31.1 15 47.2 3.4 12.4 7.1 24.7 10.3 36.9 12.9 19 24.3 37.9 37.1 55.9 7 10.3 15 20.6 22.1 29.2 10.3 9.6 20.8 18.9 31 26.8 17.4 14 38.3 27.7 56.7 39.9 21 9.6 41.8 18.3 63.7 27 23.1 5.8 52.1 5.2 89.2 0 32.3-11.6 64.7-23.1 98.2-35.3 126-62 215-120.8 264.8-176.7 25.5-26.2 49.3-59.5 71.8-99.6 22.5-40.5 38.8-84.9 53.2-131.6 20.3-65.9 27.6-136.6 25.3-210.6-5.5-32.8-20.6-90.9-47.4-175.8-5.5-16.1-10.5-33.4-17.4-49.5 21-60.3 39.5-119.9 58-180.2 15 35 31.3 70.6 48.6 105.3 16.1 35.8 32.4 70.5 47.4 106.2 5.6 12.2 12.7 25.5 18.5 38.3 11.5 16.8 23.2 33.5 35.7 49.6 17.5 23.1 34.8 45 51.1 67.7 18.2 21.7 39.2 41.8 60 62.4 22.1 20.2 49.8 37.8 80.9 55.1 18.6 10.7 49.9 21.7 96 32.9 36.1 2.7 70.6 5.7 106.4 10.7 39.5-2.8 78.7-5 117.9-8 29.2-5.1 60.3-10.9 89.3-16.7 13.7-5.2 26.5-9.4 40.5-14.6 26.6-8.7 44-24.6 52.1-45.6-2.4-12.2-7.1-25.6-10.5-38.7-12.9-23.7-34.7-45.7-70.6-66.9-55.6-33.4-112.1-68.1-168.7-101.6-19.7-132.3-42.9-264.4-67.3-397.6 25.4 2.4 51 11.9 76.4 27.1 25.4 18.2 53.2 35.6 77.5 52.9 19.5 15.5 35.8 30.1 54.3 45.3 19.7 18.9 40.5 37.5 60.2 56.6 30.1 42.2 61.3 85.6 91.4 128.6 24.2 40 48.4 80.7 73.9 119.1 17.4 31.9 33.7 64.7 48.7 97.6 18.4 51.3 32.4 94.9 40.5 132 2.4 24.7 5.6 47.9 10.4 70.4 0 27 3.4 51.7 4.6 76.5 2.4 65.4-2.4 119.9-15 163.4-8.1 84.9-68.6 147.1-179.5 186.5-35.8 13.1-71.5 22.7-105.2 29.5-34.6 6.4-69.3 10.7-109.8 11.3-76.2 4.5-152.7-3-230.1-23.2-18.4-6.4-39.2-13.7-59-20.1-26.8-12.7-52.1-24.9-78.7-37.3-23.1-13.1-47.4-26.8-71.6-40.8-11.7 33.5-23.2 67.8-33.7 101.9-18.4 39.2-38.1 77.8-54.2 117.1-33.7 60.8-69.3 114.7-111.1 162.7-18.4 20.1-35.8 38.4-52.1 56.7-24.2 18.8-49.8 37.6-72.8 55.2-64.9 46.4-121.3 83.9-171.2 108.1-41.4 20.2-83.2 33.5-130.6 41.4-44.1 7.2-86.8 7.2-127.1-1.5-39.5-7.1-81.1-24.7-121.7-50.6-41.5-26.2-73.9-58.4-99.4-93.3-25.3-37.5-46.3-74-61.3-112.5zm-7443.5 1580.2c-20.8-1.2-42.9 2.4-67.2 11.9-24.2 9.2-40.5 21-47.3 33.2-11.6 4.5-24.5 22.7-45 53.2-11.9 19.5-21.9 34-28 44.2 2.4 24.8 19.8 53.1 52.2 86.4 34.7 34.3 82.1 61.1 144.5 84.5 61.3 23.2 133 33 211.6 34.9 18.7.2 40.6 0 64.8-2.4 24.3-2.1 40.5-3.6 55.5-5.1-16.3-34-35.8-71.8-59-112.3-31-56.9-53.1-88.8-67.1-97.4-21.8-34.9-52-65.2-92.3-90.3-40.8-25.1-81.1-38.1-122.7-40.8zm2165-1604.9c-135.2-69.1-271.7-137.9-406-209.3-42.7 121.4-85.6 240.6-128.3 358.3-140-81.5-277.6-163.6-414-247 41.5-133.8 82-268.3 125-402.5 142.1 78.5 284.3 156.7 427.8 227.9 33.7-129.3 67.1-259.2 102.8-389.3 132 75.4 267.3 149.6 403.9 223.1-38.2 146.1-74.2 292.9-111.2 438.8zm49.8 849.3c-78.7 12.3-158.2 54.7-239.5 123.5-80.6 68.5-120.1 143.9-116.9 226.9 1.3 9.3 2.6 19.5 4.8 29 9.1 47.2 39.4 92.1 91.3 135 67.1 60.5 166.6 122.3 298.5 184.6 115.5-58.1 202.4-119.8 257.9-181.6 41.4-45.2 79.8-104.6 113.5-179.4-1.3-9.5-3.7-20.4-6-30.5-18.5-75-72.9-149-162-218.9-88.9-70.4-168.7-99.7-241.6-88.6zm2396.4 2047c-120.2-53.9-242.9-107.1-366.8-160.6 63.7-154.2 127.1-308.2 185-460.8 133.2 45.2 267.4 91.5 398 133.8-67.1 162.7-138.7 324.6-216.2 487.6zm5746.5-3056.3c-103.1 27.5-213.1 7.5-330-58.7-74.4-43.1-138.1-93.9-189.9-152.7-71.3-85.8-120.3-179.2-147.2-279.5l-700.7-2061.3 90.5-582.9 781 2355.4c13.9 52.5 34.5 102.1 60 146.9l8.4 30.9 29.1 37.3 59.5 62.4c97.7 79.6 174.8 111.3 231.2 96.3l44.7-11.8v-.2l7-1.7 34.2-9.1.2.3 155.7-39.5c160.4-42.8 299.5-96 418.1-159 180.7-90.1 309.4-191.3 386.8-303.9 23.8-34.6 42.7-72.7 58.1-114.7 14.6-41.9 18-77.4 10.3-106.9-8.4-30.6-28.7-64.7-60.7-103-31.7-37.6-71.8-76-120.3-115.4-10.5 45.4-27.2 94.4-51.5 145.7-4.7 15.9-17.9 38-38.6 66.8-11.3 20.8-29.7 42.6-53.1 66.7-52.3 51.8-116.3 87.4-190.8 107.2-75.3 20.2-143.3 22.1-203.8 6.8-47.3-11-77.3-23.7-91-39.4-46.4-34.6-84.7-69.5-112.7-104.7-44.5-61.5-78.9-135.5-101.6-220.4-17.6-66.3-26.8-164.7-28.5-294.8l4.3-169c20.1-114.9 38.1-195.6 54.2-241 57.7-167.7 138.1-265.7 240.4-293.2 79.8-21.2 172.8 4.1 280.3 74.7 59.1 40.5 132.5 113 218.4 217.4l89.9 125.2 61.7 98.9 136.7 254.7c54.6 117.8 96.4 229.3 124.7 335.3 28.6 106.9 36.9 205.5 24.7 295.8-.6 33.2-9.6 69.5-25.9 108.4l-32.7 116.9c-32.5 89.3-71.5 166.7-117.9 232.3-71 93-200.4 184.8-389.1 276.1-143.5 63.3-270.7 110.1-380.7 139.4l-157.5 42-85.9 23zm128.3-1674.5-13.6 37.6c6.1 21.8 23.2 46.9 50.7 74.4l36 29.1c7.5 4.3 32.9 11.4 76.1 20l38.6 1.9 39.5-3.4 61.5-16.3 52.8-23.9c54.9-23.5 99.7-58.1 133.3-101.6-14.2-19.5-37.9-42.2-69.9-68.4l-75.9-54.9c-17.1-9.8-33-17.8-48.6-24.8-14.8-7.3-32.4-13.2-53.4-18.9-20.2-6-41.2-9.2-64.2-11.2l-52.7 14.2c-17.6 9.5-30.5 19.3-37.3 29.3-11.6 7.8-25.7 24.5-40.6 51.1l-32.3 65.8z"></path><path fill-rule="nonzero" d="M10695.2 20200.9h4049c89.4 0 162.1 72.7 162.1 162.2v12784.8c0 89.5-72.7 162.2-162.1 162.2h-4285.6c-89.5 0-162.2-72.7-162.2-162.2V20363.1c0-89.5 72.7-162.2 162.2-162.2h236.6zm3886.8 324.3h-3961.2v12460.6H14582V20525.2zm2614.5-324.3h5187.2c80.9 0 148.1 59.4 160.2 136.9l1588.7 6159.2 1585.5-6173.9c18.6-72.9 84.4-121.5 156.4-121.5l5406.6-.7c89.5 0 162.2 72.7 162.2 162.2v12784.8c0 89.5-72.7 162.2-162.2 162.2h-3580.5c-89.4 0-162.1-72.7-162.1-162.2v-6475.4l-1673.1 6515.4c-18.6 72.9-84.5 121.5-156.4 121.5l-3178 .7c-76.9 0-141.5-53.8-158-125.8l-1661.9-6494.4v6458c0 89.5-72.7 162.2-162.1 162.2h-3589.1c-89.5 0-162.2-72.7-162.2-162.2V20363.1c0-89.5 72.7-162.2 162.2-162.2h236.6zm5062.3 324.3h-5136.7v12460.6h3264.7v-7583.1c-.4-72.7 48.5-139 122.2-157.7 86.8-22.1 175 30.4 197.1 117.2l1950.8 7623.6H25584l1956.4-7618.9c12-77.7 79.2-137.1 160.2-137.1 89.5 0 162.2 72.7 162.2 162.1v7593.9H31119V20525.2h-5119.5l-1710 6658.8c-14.3 55.9-57.4 102-116.5 117.1-86.3 22.1-174.3-30.2-196.4-116.5l-1717.8-6659.4zm11170.8-324.3h5187.2c80.9 0 148.1 59.4 160.2 136.9l1588.6 6159.2 1585.6-6173.9c18.6-72.9 84.4-121.5 156.4-121.5l5406.6-.7c89.5 0 162.2 72.7 162.2 162.2v12784.8c0 89.5-72.7 162.2-162.2 162.2h-3580.5c-89.5 0-162.1-72.7-162.1-162.2v-6475.4l-1673.1 6515.4c-18.6 72.9-84.5 121.5-156.4 121.5l-3178 .7c-76.9 0-141.5-53.8-158-125.8l-1661.9-6494.5v6458.1c0 89.5-72.7 162.2-162.1 162.2H33193c-89.5 0-162.2-72.7-162.2-162.2V20363.1c0-89.5 72.7-162.2 162.2-162.2h236.6zm5062.3 324.3h-5136.8v12460.6h3264.8v-7583.2c-.4-72.7 48.5-139 122.2-157.7 86.8-22.1 175 30.4 197.1 117.1l1950.8 7623.8h2927.1l1956.4-7618.9c12-77.7 79.2-137.1 160.2-137.1 89.5 0 162.2 72.7 162.2 162.1v7593.9h3256.2V20525.2h-5119.5L40522.5 27184c-14.3 55.9-57.5 102-116.6 117.1-86.3 22.1-174.3-30.2-196.3-116.5l-1717.7-6659.4z"></path><path fill="#FEFEFE" d="m23393.5 66694.6-37.7-17.6-30.7-16.5-22.2-16.6-15.4-16.4-8.5-15.1-2.7-15.2 4.1-13.9 8.3-13.9 14.2-14 18-11.4 22.5-12.6 26.6-11.3 29.1-10.2 33.7-10 34.9-9.1 37.8-8.7 39.3-7.6 39-7.6 42-7.6 41.8-5.1 84.1-10 79.5-7.6 39.2-2.6 35-1.3 35-1.2h58.7l23.6 1.2 19.7 2.7 15.2 2.5v10l-26.3 5-26.6 6.4-25.3 7.6-22.3 6.4-22.3 7.5-21 9-19.5 8.8-18.3 8.8-34.9 19.1-33.7 18.8-30.7 20.2-32.1 19.1-30.7 20.2-33.6 17.8-18.3 8.8-17.9 8.7-19.8 7.7-19.5 7.5-21 7.8-22.4 6.2-23.7 6.4-25.1 5-28.1 5.1-27.9 3.7-30.9 2.5-32.2 2.6zm22632-13528.6 37.7-2.3 39-1.4 37.8-1.2h39.2l37.7-1.3 36.5-1.3 19.5-1.3 18.2-3.9 18.1-3.6 16.9-5.2h143.9l72.6-1.2H46757.9l71.4-1.3h110.4l35.1-1.2h33.4l33.7-1.4 12.5-3.6 11.2-5.2 12.5-4.9 11.4-3.9-2.9-10-1.4-10.3-93.8-32.9-100.5-31.5-106.4-31.7-110.4-31.5-116-30.5-117.5-27.8-120.1-27.7-123.1-25.3-121.6-24-121.8-21.7-120-18.8-117.5-15.3-57.3-7.4-55.9-6.5-56-4.9-54.5-3.9-53.2-3.9-51.6-2.5-50.5-1.3-47.6-1.1-11.1 31.5-8.4 28-7.1 25.2-5.5 22.7-5.5 22.8-4.2 19.1-5.5 18.8-7.1 16.6-7.1 16.2-9.6 15.3-12.7 13.9-16.7 13.9-18.2 14-23.8 12.6-27.9 14-34.9 13.9h-42.1l-37.7-2.5-33.5-3.9-29.4-4.9-23.8-6.5-19.5-7.5-16.9-7.7-13.9-10-9.7-10.2-7.1-12.7-4.3-11.3-1.3-13.9v-13.9l1.3-15.3 2.8-15.2 4.3-15.1 12.6-34.2 12.5-34.1 7.1-17.6 5.5-17.8 5.6-18.9 4.3-17.8 2.8-17.8 1.3-18.8v-17.8l-1.3-17.6-5.6-17.8-7.1-16.6-9.8-16.3-13.9-16.4h-37.8l-40.5 2.5-40.5 3.9-43.4 4.9-44.8 6.5-44.6 7.5-46.3 8.8-46.1 10.3-46.1 11.3-47.6 13.9-46.1 13.8-46.1 16.5-46.1 17.8-44.8 17.5-43.3 20.5-42 22.7-41.9 22.7-39.2 24-37.8 26.6-34.9 26.6-33.4 29-29.5 30.3-28.1 31.8-25 32.8-21.1 34.2-17.9 36.6-14.2 36.7-9.7 39.2-7 40.5-1.3 40.6 2.8 44.1 6.8 44.2 18.3 7.7 16.7 5 16.7 5.1 15.4 3.9 15.5 2.5 16.7 1.1 18.3 1.3 21 1.3h107.6l32.2-1.3 27.9-6.3 23.7-8.7 21-11.6 18.3-15 15.2-16.5 14-20.2 9.8-21.7 8.4-22.7 8.4-24 5.5-25.3 4.3-26.6 5.6-54.2 4.2-54.5 2.9-26.6 2.7-26.6 2.9-23.9 4-24.1 5.6-21.5 7-20.3 8.4-17.6 9.9-15.2 12.4-12.6 14.2-10.2 18-5.1 21-3.7 23.8 1.4 26.6 4.9 30.7 10 34.9 14 9.8 9 10 8.8 6.8 8.8 7.1 10 5.6 9 5.5 10.2 4.3 10 2.8 10.1 4.1 21.4 1.4 21.7v22.7l-1.4 22.8-5.6 46.8-5.6 47.9-1.5 24.3v24l3.1 24 4 24 19.5 7.6 21 7.6 22.3 6.3 25.3 3.8 25.1 3.6 28.1 2.6 29.4 2.6h60.1l32-1.3 33.5-1.3 33.7-2.6 68.4-4.9 69.9-8.8 141.3-19 134.3-20.2 62.8-9 58.7-7.5 51.7-5.1 46.2-3.7H45610.1l53.2-2.6 51.6-2.5 51.9-3.9 51.7-2.4 51.7-2.5 51.7-2.6 51.9-1.3 51.7-2.6zm-5642.7 172-5.6-2.4h-18.3l-23.7-1.2h-57.3l-23.8 1.2h-18.2l-5.6 2.4-102.1 7.7-86.6 14-74.2 18.8-60.1 26.6-48.8 31.8-37.8 36.6-26.6 40.3-18.1 45.7-10 50.6-1.2 53 5.6 58.3 11.1 59.4 16.7 63.2 21 65.9 25.1 68.2 26.6 69.7 60.3 141.4 60 146.7 27.9 73.6 26.6 72.1 22.5 72 18 72 14.2 69.8 8.3 68.1 1.3 67.1-5.5 64.6-14 60.7-22.3 59.3-33.7 54.6-43.3 51.6-16.7 25.3-15.4 21.7-14 15-12.6 11.6-12.5 7.4-12.7 2.6h-11l-10-5.1-9.8-6.3-8.4-10.2-6.9-12.7-8.3-15-5.8-17.8-6.9-18.8-5.6-20.4-4.2-21.5-8.3-46.7-5.6-48-5.6-48.3-2.8-44.2-2.8-40.5-1.5-34.1v-38l1.5-7.5 1.3-19.1 1.5-25.2v-60.7l-1.5-26.6-1.3-18.8-1.5-6.5v-31.6l1.5-25.2 1.3-26.6 1.5-25.3 1.3-25.4-1.3-26.6-1.5-27.8-1.3-26.6-1.5-26.4-22.3-89.8-23.8-89.8-22.3-87.4-25.3-83.3-13.9-40.5-14-39.3-15.4-38-15.3-36.6-18.1-34.1-18.3-33.1-19.5-30.2-21-29.1-22.4-25.4-23.7-23.9-26.6-20.2-26.6-17.8-30.7-15.2-30.8-11.4-35-7.5-36.3-5.1-37.6-1.4-42.1 3.9-43.3 6.4-46.1 11.4-50.4 15.2-51.7 20.2-55.9 24-58.8 30.5-37.8 7.5-33.4 8.8-15.4 3.9-14 6.1-11.2 5.2-11.3 7.5-9.7 7.8-8.3 8.7-7.1 11.4-5.6 11.4-4.2 13.9-4.1 15.2-1.5 16.5v18.9l-2.8 7.5-1.3 19.1v26.6l-1.5 30.2 1.5 31.7v26.6l1.3 18.9 2.8 6.5 1.5 11.3 2.7 11.4 4.2 11.3 5.5 10.1 5.8 11.3 6.9 11.5 8.3 10.2 8.4 11.3 19.7 21.5 22.3 21.5 23.8 21.4 23.8 23 53 44.1 50.4 46.7 23.8 24.1 21 25.2 11.1 12.7 8.4 12.7 9.9 12.6 6.9 14v212.5l1.4 40.5 2.8 40.6 5.6 39 5.6 39.2 8.3 36.7 4.3 16.5 5.6 16.5 6.9 15.2 7.1 13.7 7 11.4 8.4 11.6 9.7 8.8 9.8 8.8 11.2 5.2 12.6 3.6 12.6 2.5h12.4l15.6-2.5 15.4-5 16.6-7.7 18.3-10.1 19.5-13.9 19.5-15 21-19.1 22.3-22.7 11.4 17.7 8.4 16.3 6.8 14 5.6 13.9 4.3 15.3 2.8 15.2 2.8 16.3 2.8 20.3v164.3l-1.3 21.7-1.5 21.4-1.6 22.7-1.2 21.5-7.1 40.5-8.3 36.7-11.2 33-12.7 31.6-13.9 27.8-16.7 25.3-16.8 22.8-19.7 18.8-17.9 16.5-21 14-21.1 11.3-21.1 7.7-21 5-20.7 2.6h-22.5l-20.8-2.6-19.8-5-19.5-9-19.5-10-16.9-14-16.8-16.5-13.9-18.8-13.9-21.5-11.2-24.1-9.8-26.6-7.1-29.1-4.1-31.5-1.5-34.3v-36.7l4.2-39.2 7-41.6 9.8-44.4 2.8-50.6 2.8-46.8V54955.9l-1.3-21.7-1.5-21.4-2.8-21.4-4.1-20.5-5.7-21.4-7-20.1-8.3-21.5-9.8-21.7-11.2-22.7-13.9-22.7-21-11.4-18.3-13.9-18.2-14-14-13.9-13.9-15.2-11.1-16.3-9.9-16.5-9.6-16.5-7.1-17.6-7.1-17.8-5.6-18.9-4.1-19.1-8.3-39.2-8.6-39-6.8-41.9-8.4-40.5-5.5-21.5-7.1-21.3-7-20.4-8.5-21.5-9.6-20.1-11.2-21.7-11.3-20.2-15.3-20.1-15.4-20.4-18.3-20.1-21-20.4-22.2-18.9-27.9-2.6-28.1-1.2h-29.4l-27.9-1.3-12.6-21.5-14-17.5-15.4-16.6-18-13.9-19.8-12.7-20.7-8.8-22.5-7.6-22.4-6.3-23.7-3.9-23.9-1.2h-23.7l-22.4 2.6-22.3 3.9-22.5 4.9-19.5 7.6-19.5 8.8-16.8 11.4-15.4 12.7-12.7 13.9-11 15.2-7.1 16.3-4.1 17.8-1.5 18.9 4.2 21.7 5.6 21.4 11.2 22.7 16.7 25.4 21.1 25.2 25.2 26.6 30.7 26.6 37.7 29.2 42.1 28.9 4 40.5 5.6 39.3 5.6 38 7.1 36.6 12.6 69.5 12.5 67.1 4.2 32.8 2.8 34.1 1.3 33.1v35.3l-2.7 35.4-5.6 36.7-4.1 19-5.6 18.9-5.6 19.1-5.5 20.1-7.1 52-1.6 46.7 4.4 44.4 5.6 40.3 11.1 36.6 14 34.4 16.9 30.2 18 29.1 22.5 26.6 22.2 24.1 25.2 22.7 25.3 21.5 54.4 39.1 53.2 36.8 26.6 19.1 26.6 17.5 23.6 19.1 22.5 18.8 21 20.5 18 21.4 15.5 22.7 12.7 24 8.3 26.6 5.6 27.9 1.3 31.5-2.8 33.1-6.9 36.6-14 40.3-18.1 43.1-23.9 48.1-18.2-15.3-18.2-11.3-18-8.8-18.3-7.7-37.7-10.1-37.7-7.5-18.3-5.2-19.5-7.5-19.4-7.5-19.8-11.6-11.2-6.2-9.8-7.5-9.7-9-11.2-10.1-9.8-10.1-11.2-11.3-11.1-12.6-11.1-14-5.9-1.3h-8.3l-8.3 14-8.5 16.4-5.5 17.6-5.6 20.4-5.5 20.1-4.4 21.5-2.7 22.7-2.8 23-8.4 98.6-7.1 100-5.6 47.9-6.8 45.6-5.6 20.1-5.5 20.4-7.1 18.8-7.1 17.8-9.7 15.2-9.8 13.9-12.6 12.7-12.5 10.2-15.4 8.8-16.8 6.4-18.2 3.6-19.5 1.3-16.7-27.9-14.2-26.6-11.2-26.4-8.3-26.6-5.6-26.5-4.2-26.6-2.9-26.6v-27.9l1.5-26.4 1.4-27.8 2.7-27.9 3-27.9 6.9-59.4 5.5-63.2V55659l-2.7-31.5-2.8-32.9-1.3-35.6-1.5-37.9-1.3-79.5v-86l-1.4-89.8-1.4-92.5-3-93.5-5.6-92.4-4-45.5-5.6-44.4-5.6-44.1-7-41.8-8.4-40.3-9.9-39.3-12.4-38-12.7-35.3-13.9-33.1-16.7-30.2-18.3-29.1-19.7-24.1-22.3-22.7-25.1-19.1-26.6-15.2-29.3-11.4-4.3-1.3-11.1-1-16.8-1.3h-37.8l-15.4 1.3-12.4 1-4.3 1.3-18.2 1.3-18.3 2.6-15.2 3.9-15.4 2.5-15.5 3.6-12.3 5.2-12.7 3.8-11.2 6.3-11.2 5.2-9.8 6.1-8.3 6.5-8.5 7.5-7 7.5-6.9 7.7-7.1 7.5-5.6 8.8-8.3 19.1-8.3 20.1-5.6 23-4.3 24-7 51.7-4.1 58.3-1.5 1.3-2.9 5v15.1l-1.2 29.3v345.1h8.3l12.7 38.1 13.9 36.6 15.3 37.9 14.1 36.7 12.5 38 12.6 36.6 4.3 19.1 4.1 20.2 4.2 18.8 2.9 19.1V55550.2l11 40.6 14 38 15.5 35.3 16.7 32.8 18.2 30.5 18.2 30.2 19.5 27.9 19.5 25.3 40.5 49.3 40.6 45.7 18.2 20.1 18.3 21.5 16.7 20.4 15.5 21.4 13.9 20.1 12.6 20.5 9.7 21.3 7 21.5 5.6 21.4 2.8 24.1-1.3 24.2-3 25.3-6.8 26.4-11.2 27.9-15.4 30.4-18.3 31.6-23.8 34-27.9 35.6-32.1 38-37.7 40.3 18.2 62 15.2 58.3 11.4 53 8.4 48.2 4 45.5 1.5 40.5-1.5 35.4-4 32.8-7.1 27.8-8.4 24.1-9.9 20.1-12.4 15.2-12.7 12.7-15.4 8.7-15.2 3.9-15.5 1.3-16.7-3.8-16.9-6.3-15.3-10-16.9-13.9-15.2-17.9-15.5-21.4-12.6-24-12.5-27.9-11.3-31.6-8.3-34.2-7-38-5.5-40.3-1.5-44.4v-48.1l4.3-50.5 6.8-53.2 1.5-6.2 1.4-13.9v-19l1.5-22.9-1.5-22.7v-20.1l-1.4-14-1.5-5.2-6.8-46.7-11.2-69.5-15.4-83.6-16.7-87.3-9.9-42.9-9.8-40.5-9.7-37.9-9.8-32.9-11.2-29.1-9.9-21.5-5.5-8.7-5.6-6.4-4.1-5.2-5.8-1.1v-10.3l-14-8.8-12.3-8.8-11.4-9-11.2-8.8-9.6-10-8.6-8.8-8.4-10.1-8.3-10.3-12.5-21.4-11.3-21.5-6.9-24-7.1-22.8-4-24.2-2.9-25.1-1.5-25.3v-26.5l1.5-53.2 4.1-54.4v-97.4l1.5-49.3-7.1-45.6-12.6-40.5-19.6-36.6-23.7-32.8-29.3-27.8-33.5-22.9-37.8-19-40.5-15.2-43.4-8.8-44.7-5.1h-46.1l-47.6 5.1-47.6 10-46.1 16.6-46.2 20.1-43.2 26.6-42.1 31.7-39 36.8-35 42.8-32.1 48-26.6 54.5-21 59.4-16.8 65.8-8.3 72-2.8 78.6 5.5 84.7 14 91.1 22.3 97.3 32.1 103.8 42.1 110 53.2 117.5 8.4 10.4 9.6 10 8.5 11.3 8.5 12.7 16.6 26.6 15.5 29 14 31.7 12.5 31.5 12.5 33 11.2 34.1 21 68.2 16.7 65.8 15.5 60.8 13.9 51.8 5.6 2.6 7 2.5 4.3 8.8 2.8 10.2 2.8 11.3 2.8 11.4 2.8 25.2 1.2 26.6v29.2l-1.2 29.2-1.5 31.5-2.8 30.4-6.9 63.3-7.1 60.7-2.7 28.9-1.5 26.6-1.3 25.3v22.7l7.1 62 5.5 55.8 2.8 49.3v45.5l-2.8 40.5-2.8 36.6-7 31.8-8.4 29-9.9 25.2-12.6 21.5-12.4 19-15.5 16.6-18.2 15-18 12.6-19.8 11.4-21 10.3-46.1 18.8-50.2 17.8-26.5 8.8-28.2 11.4-27.8 11.3-29.4 12.7-29.3 15.3-29.5 16.4-30.6 19-30.9 22.7-30.7 25.2-30.8 28-30.7 32.8-32.1 35.6 8.3 21.4 11.1 18.9 12.7 17.8 13.9 17.6 15.5 15.1 18.2 15.3 18 14 19.8 12.6 4.1 46.7 4.2 44.4 5.6 42.9 6.8 41.8 5.9 20.2 5.5 20.3 6.9 20.2 9.8 18.9 9.9 19 12.5 17.6 13.9 17.8 16.9 17.8 85.2-22.9 81.2-29 79.6-35.4 75.5-40.5 74.2-45.4 69.8-50.6 68.5-55.8 67.1-58.1 64.3-63.3 63-65.8 60-68.2 60.1-71 58.8-73.3 57.3-74.6 57.4-75.9 55.9-77.2 111.8-154.2 110.4-153.1 57.5-75.9 55.7-73.3 57.5-72.1 58.7-69.6 58.6-66.9 61.5-63.3 61.6-60.7 64.3-57.1 65.8-51.8 68.4-48.1 69.9-42.9 72.7-37.9 12.7-19 11.2-19 11-21.6 8.5-21.4 7-22.7 6.9-24.1 7.1-24 5.6-24.1 9.8-49.3 8.3-47.9 9.9-48.3 11.1-45.5 6.9-3.8 5.6-2.4v-10.3l77-12.7 79.8-16.3 38.9-8.8 39.3-10.3 40.5-10 39.1-11.4 39.2-11.3 40.6-12.7 39.2-13.9 37.7-15.2 39-15.1 37.8-15.2 37.7-17.8 36.5-17.5 34.9-19.1 35-18.9 34.9-21.7 32.2-21.4 32.2-22.7 32.2-22.8 29.3-25.3 27.9-25.3 26.6-26.6 26.6-27.8 23.8-29 22.3-30.4 21-31.7 18.2-31.6 16.7-34.1 15.4-34.1 28-12.7 26.6-12.6 26.6-12.6 26.5-11.6 27.9-1.1h26.6l26.6-1.3h26.6l34.9-14 35-16.4 33.4-21.5 33.7-24 32.2-27.9 30.6-30.4 29.4-34.1 29.4-35.4 27.8-38 26.6-39.2 25.1-41.6 23.8-43.1 21-44.1 21.1-45.7 18.1-46.8 15.3-45.4 14.2-47 12.4-46.7 9.8-46.8 7.1-46.7 5.6-45.7 1.3-44.2v-43.1l-2.8-41.6-7.1-40.5-8.4-38-12.4-35.4-15.4-34.2-18.2-30.3-22.4-29.2-26.6-24-29.3-21.4-1.3-54.5-2.8-64.5-1.5-34.1v-72l1.5-36.8 2.8-35.3 4-34.3 2.9-16.3 4.2-16.5 4.1-16.5 4.4-15.1 5.4-13.9 7-13.9 7-14 7.1-11.3 9.6-11.4 9.9-11.4 9.9-8.9 11.2-7.5 12.3 32.7 9.9 33 8.4 31.6 5.6 31.8 5.6 30.1 2.7 30.5 4.3 29 1.5 30.4 4.1 59.4 5.6 59.6 2.8 31.5 5.6 30.5 5.5 32.7 7.1 32.9 8.4 2.5 7 2.6 8.4 2.6 8.3 1.3 16.8 1.1 18.2-1.1 35-5.1 34.9-5.1 29.3-91 28-87.2 25.2-83.7 23.7-80.8 9.8-39.3 8.3-38 7.1-36.6 5.6-35.4 4.1-34 1.5-33.1v-31.5l-1.5-30.5-4.1-27.9-7.1-27.6-9.6-25.3-11.4-24-15.2-23-18.2-21.4-19.6-18.9-25.2-17.8-26.6-15.3-30.7-13.9-34.9-11.3-39.3-8.8-41.8-7.5-47.6-6.4-50.4-2.6-55.7-1.3zm5642.7-172v-1.3l2.7-1 5.6-1.4h11.1l44.9-1.2h50.2m-5028.8 341.4V53383.7l1.2 4.9 1.6 13.9 1.3 19.1v42.9l-1.3 19.1-1.6 13.9-1.2 5zm-5.6-118.8 1.3 45.4 1.5 44.4 1.3 45.4 1.5 45.6-1.5 79.7-4.1 80.9-4.3 79.7-4.3 81-2.7 80.9-1.4 79.7 1.4 40.4v40.6l2.7 39.1 4.3 40.5 19.6 11.4 16.9 12.7 13.9 11.3 12.4 12.7 12.7 12.7 11.2 13.9 11.1 16.5 14.1 18.9H41320.9l11.1-14 11.2-13.9 12.6-12.6 12.4-12.7 25.4-21.5 26.6-21.4 27.8-17.7 29.5-17.6 29.3-17.8 27.9-16.6 29.4-17.5 29.3-17.9 29.4-18.8 26.6-21.7 13.9-11.4 13.9-12.6 12.7-12.6 12.7-14 12.4-13.8 12.7-15.1 11.1-16.6 11.1-16.4h11.2l5.8-8.8 6.9-6.3 5.6-6.4 7-5.1 6.9-3.7 7.1-3.9 8.3-3.8 9.8-3.7v-15.2l-21-10-18.1-10.2-16.8-10.3-15.4-11.3-15.3-11.4-12.6-11.3-11.1-12.6-10-14-9.8-12.6-8.3-15.3-6.9-15-8.4-15.2-11.3-34.1-11.2-38h-11.2l-13.9-30.4-11.1-30.2-7.1-29.2-4.1-27.9-1.5-26.6 1.5-26.6 5.6-25.2 6.9-22.8 8.3-22.8 12.7-20.1 13.9-20.4 15.4-16.3 16.8-16.4 19.7-14 20.8-11.4 21-10 23.9-7.8 23.7-6.2 25.1-3.8h25.4l26.3 1.2 26.6 3.9 28.1 7.5 26.6 8.8 27.9 12.7 26.6 15.2 26.5 19 26.6 21.5 25.1 25.3 25.1 27.9 23.8 31.5 22.5 35.4 20.8 9 19.7 6.2 19.5 3.8h19.6l21-2.5 19.5-5.1 18.2-7.5 19.5-8.8 19.7-11.4 18-14 19.8-15.2 18-16.5 16.9-17.6 18.1-20.3 16.9-20.2 16.7-20.2 15.4-22.9 15.2-21.4 15.5-24.1 14-22.7 28.1-45.4 23.5-45.7 21.1-42.9 18.1-40.5 15.5-34.2 11.1-29.1h11.2l15.4-16.5 15.4-15 16.8-15.3 15.2-13.9 15.5-11.3 16.7-11.4 15.4-11.3 15.5-9 13.9-7.6 15.5-7.5 13.9-5.1 13.9-3.9 13.9-3.7 12.7-1.2h11.2l11.1 1.2 11.4 2.4 9.7 3.9 8.3 6.4 8.4 6.3 7 8.8 5.6 10.2 5.6 11.3 2.8 14 2.8 15 1.5 16.6-1.5 17.8-1.4 20.1-2.7 22.7-5.6 24.1-5.6 25.2-8.5 27.9v44.2l-1.3 44.3v44.2l-1.5 44.4-2.8 25.4-4.1 28.8-2.8 30.5-1.5 30.3v30.4l1.5 15.2 2.8 14 4.1 12.6 5.6 12.7 7 11.3 8.4 11.4 32.2-5.1 30.9-7.6 29.1-8.7 29.3-11.6 28.1-13.7 26.6-15.3 26.6-16.5 26.4-18.9 23.8-20.3 25.4-22.7 22.2-22.8 22.3-25.2 21-25.4 21-26.6 19.5-27.8 19.5-29 18.3-30.4 16.8-29.2 16.9-31.5 16.7-30.5 14-31.5 13.9-31.5 14.2-33 12.4-31.5 22.5-63.4 19.5-63.2 15.4-60.6 13.9-57.1 9.7-6.2 7.1-6.5 5.6-7.5 5.5-7.6 7.1-16.4 6.8-20.3 8.5-3.6 7-5.2 4.3-6.2 4.1-7.8 5.6-16.2 2.7-16.6-34.9 6.3-86.7 17.7-125.9 26.6-146.5 30.3-155.3 31.7-146.9 29.2-64.4 11.3-57.2 11.4-47.6 7.5-36.2 3.8h-88.2l-16.6 19-21.1 17.8-21.1 16.4-23.7 15.1-25.1 12.6-25.1 12.6-28.1 11.4-29.3 10.3-29.4 10-30.7 7.6-32.2 7.7-32.2 6.2-33.4 6.5-33.7 4.9-34.9 3.9-33.5 3.8-71.3 6.2-71.2 3.9-69.9 2.3-70 1.4h-67.1l-64.3 1.2-61.5 1.3-57.5 1.4h-96.2l-33.7 7.4-37.8 10.3-39.3 11.4-41.7 12.6-42.1 15.2-40.5 17.6-21 8.8-19.5 10.3-19.5 10.1-18.3 11.3-18.2 11.4-16.7 12.7-15.4 12.6-13.9 12.6-14 15.3-11.2 14-11.1 14.9-8.4 16.6-7.1 16.5-5.5 16.2-2.8 19.2-1.6 17.6 1.6 20.3 2.8 20.2 6.8 20.3 8.6 21.5zm6863.2 260.5h-148.2l-28.1-5.2-27.8-1.2h-28.1l-29.3 1.2H47206.7l-21 1.3h-20.8l-22.5-1.3-23.8-4.9-22.3-5.1-23.8-7.5-25.1-7.7-23.8-10.2-96.4-42.8-93.8-43.1-22.3-8.8-22.3-7.8-21-6.1-19.5-5.2-19.8-2.4-18-1.2-18.1 1.2-15.6 3.7-15.4 6.4-13.9 8.8-12.4 12.6-11.3 15.3-9.7 18.9-8.4 22.7-7.1 26.6-5.5 30.5 29.3 58.1 30.7 50.5 33.7 46.8 34.9 40.6 37.8 35.3 39 31.8 40.7 26.6 43.3 21.3 43.3 17.6 44.6 14 47.6 10.3 47.6 6.2 48.9 2.6h49l50.3-2.6 50.4-6.2 51.6-7.7 51.8-10.1 53.1-12.7 51.8-15.1 53.1-16.4 51.6-17.8 53.2-19 51.7-20.2 51.8-20.1 50.3-21.7 50.3-22.7 50.5-22.8 95-44.1 92.2-43.2v-8.8l-1.3-7.7-29.4-11.3-19.8-7.6-20.7-5.1-32.2-7.5zm-1252.7 772.8 41.8-21.4 30.9-22.8 21-26.5 11.2-29.2 2.8-30.5-5.6-32.8-14.2-34.1-19.5-35.4-27.9-36.6-32.2-37.9-39.1-38-41.9-39.3-47.6-39.2-50.3-39.2-54.5-39.3-56-39.3-57.2-39-58.8-37.9-60.1-36.9-58.7-36.6-117.5-67-108.9-60.6-96.5-53.2-81.2-41.8-58.6-30.2-33.7-16.6-67.1 2.6-53.2 8.8-40.5 12.6-27.9 17.8-15.5 21.4-5.5 25.4 5.5 29.1 15.5 32.9 23.8 35.4 30.7 36.6 39.3 40.5 46 40.5 50.4 43 56 44.4 60 44.1 62.9 45.5 65.7 44.4 67.2 45.4 68.4 43.1 68.6 42.9 68.4 41.8 67.1 40.6 64.3 36.6 62.9 35.4 111.9 62 90.9 46.7 36.2 17.8 28.1 13.9 21.1 7.5 11.1 2.6zm-522.9 198.6 34.9-21.5 19.5-27.8 5.8-31.5-8.6-38.1-20.8-40.5-32.2-45.6-43.2-48.1-53.2-50.6-61.6-52.9-69.9-54.5-77-54.4-83.8-55.6-88.2-55.7-92.1-54.3-96.6-54.5-97.7-51.8-99.3-49.3-100.8-48.1-99.3-43.1-99.2-40.3-96.3-35.6-92.4-30.3-89.5-25.2-83.8-19.1-78.3-12.4-71.3-5.2-62.9 1.3-54.7 11.3-44.6 17.6-35 29.2-22.4 36.6-11.2 48.1 18.2 10.3 48.9 24 74.2 35.3 97.8 45.6 117.5 54.4 132.7 60.6 142.6 65.9 151.2 70.8 153.7 72 153.8 72 148.1 72.3 141.3 69.5 127.2 64.6 112 59.4 48.8 26.5 41.8 25.3 37.8 21.4 29.3 20.5 18.3 7.5 15.4 6.2 15.5 5.1 13.9 3.9 14 3.6 15.4 1.3 16.8 2.6 19.5 1.3zm-4241.9 179.6v1.1l1.5 1.3h5.6l8.3 1.3h35l68.4 1.3 14.2 1.3 11.1 2.5 9.7 2.7 9.8 3.6 19.5 9 21 11.3 1.6 1.3 1.2 1.4 7.1 1h12.5l53.2 1.2h100.7l95 9.1 92.2 8.8 88.2 8.7 88.1 10.1 85.3 11.4 82.4 11.6 81 12.6 79.7 12.7 78.3 13.7 77 13.9 75.5 16.5 74.2 16.6 74 16.3 71.3 19.1 72.7 18.8 71.3 19.1 71.3 21.4 71.2 21.5 69.9 24 71.5 24.1 71.2 24.2 71.3 26.3 72.7 27.9 72.8 27.8 72.7 29.2 75.4 31.6 75.5 31.7 76.9 32.8 157.9 70.7 163.6 74.7 47.6 15.2 42 14 39 8.8 33.7 7.6 29.4 4.9 26.4 2.7 22.5-1.3 18.2-1.4 14-4.9 12.4-5.1 8.6-8.8 5.6-9 1.2-11.3v-11.4l-2.8-14-4-13.7-8.6-15.2-8.4-16.5-12.5-16.5-12.5-16.4-15.6-17.8-16.6-16.4-16.8-17.6-19.7-17.8-19.5-16.3-21.1-16.6-22.2-16.4-22.3-15.3-22.6-13.7-23.5-13.9-22.5-12.7-23.8-10.3-89.4-28.9-100.6-29.2-51.9-16.5-50.1-16.2-25.4-10.2-23.6-9-23.8-10-23.8-10.1-22.3-11.4-21-12.7-19.7-11.3-18.1-13.9-18.2-13.9-15.4-15.3-14-15.2-12.6-16.3-9.6-17.8-8.4-17.6-5.8-20.3-4.1-20.2-1.5-21.5 1.5-22.9 4.1-24 7.1-26.6 22.3 1.2 28 2.7 35 6.4 40.5 8.8 44.6 10 49.1 12.7 51.7 13.9 56 16.5 117.3 34.2 123.1 35.4 123 36.6 116.1 33 55.9 15.1 51.7 13.9 48.9 12.6 44.8 10.1 39.2 7.8 33.5 4.9 28.1 2.5h20.8l13.9-4.9 5.9-7.8-2.9-11.3-11.3-15.2-20.9-20.2-32.1-25.3-43.3-30.4-54.7-35.4-60-24.1-103.6-40.5-141.1-51.7-172-63.2-197-71-215.5-75.9-227.8-78.2-235-78.6-117.2-39.1-117.6-36.8-114.7-36.6-113.2-35.4-110.4-32.8-106.2-30.4-102-27.9-96.5-25.3-91-22.7-83.8-17.9-75.5-14.9-67.1-11.4-58.7-6.4-49-1.4-37.9 3.9-25.1 8.8-18.2 19.1-14 17.5-9.6 16.6-8.5 15.2-4.1 14-2.8 13.7v12.7l2.8 12.5 4.1 11.7 7 11.3 8.4 10.1 9.8 10.1 9.7 8.8 12.7 10 12.6 9 14 8.8 29.3 17.8 30.7 17.6 29.3 20.4 28.1 20.1 12.5 11.4 11.4 11.3 11.1 12.7 8.4 12.7 6.8 13.9 5.5 15.3 2.9 15.2 1.5 17.6-18.3 5.1-22.3 3.7H42642l-32.2-2.4-34.9-5.2-37.8-5.1-39-6.2-84-15.3-89.4-17.6-91-17.8-92.2-15.1-46.1-7.6-44.8-5.1-44.6-4.9-42-3.9-40.6-1.3h-39.2l-37.8 2.6-34.9 3.8-30.6 7.6-29.5 8.8-25.2 12.6-22.4 15.2-18.1 18.9-14 21.6-9.7 26.6-4.3 29 9.9 31.8 11.2 26.5 9.6 22.8 11.4 20.1 11.1 16.5 12.4 13.9 12.7 12.7 13.9 10.1 17 8.7 18 6.5 21 6.2 22.3 6.4 54.7 11.4 68.4 13.9zm3835.1 189.6 15.4-6.2 13.9-7.7 13.9-8.8 12.7-8.8 11.2-10.1 11.2-10.1 9.8-12.6 8.3-12.7 1.4-34.3-12.5-38-28-41.5-40.6-44.4-51.7-48.1-63-50.5-72.7-53.2-82.4-54.3-90.9-54.4-98-56.9-104.8-55.8-108.9-56.7-114.7-55.8-118.9-54.2-120.3-54.5-122.8-51.9-124.6-49.3-124.4-46.7-123.1-44.4-121.6-40.3-118.7-36.8-114.7-33-110.5-27.8-104.8-22.7-99.3-16.4-92.3-11.5-82.5-5-75.4 2.6-64.4 8.8-53.2 17.8-41.8 25.3-29.3 32.8 2.7 21.5 9.7 20.3 16.9 21.5 21 18.8 26.4 20.4 32.2 18.9 34.9 19 40.5 19 44.9 17.8 47.6 17.5 50.1 17.8 53.2 16.5 54.7 17.6 57.3 15.3 58.7 16.4 60 15.1 121.7 30.3 120.2 28 118.8 26.6 112 25.2 102 24.1 90.9 21.4 40.5 10.1 35.1 10.1 30.6 10 26.5 9 60.1 34.2 65.8 39.2 69.9 44.2 74 49.3 77 50.6 79.7 51.9 81.2 53.2 81 51.8 82.5 50.6 82.3 48.1 40.6 22.7 40.7 21.4 40.5 20.5 39.1 18.8 39.2 16.6 39.1 16.2 37.7 13.9 36.5 11.4 36.2 10.3 34.9 7.5 33.7 5.2 32.2 2.3zm-4599.8 31.8h-43.3l-39.2 1.2h-9.8l-4.1 1.3-1.5 1.4-1.3 1-23.8 6.4-19.6 6.3-15.4 7.6-11.2 8.8-7 8.8-2.8 9 1.5 8.8 4.1 10.1 7.1 10.1 9.6 10.3 12.7 11.4 13.9 10 34.9 22.7 40.5 22.8 89.7 46.8 83.8 45.6 19.6 11.3 16.7 11.4 15.4 10.1 12.7 10.1 9.8 10.3 8.4 10.1 5.6 8.8 1.2 8.7-16.6 19.1-15.5 18.9-11.1 17.8-11.2 17.5-8.4 19.2-8.3 18.8-8.4 21.7-7.1 24-47.6-1.3-46-3.8-46.1-6.3-46.2-6.4-95.2-1.3h-61.3l-5.8 1.3-2.8 1.3v1.3l-29.1 2.5-28.1 4.9-25.1 3.9-22.5 5.2-20.8 6.2-18.3 5.2-16.7 7.5-15.4 6.4-12.7 7.5-12.5 8.8-9.8 9-7.1 10.1-6.8 10-5.6 10.2-4.3 11.3-2.8 11.4-1.5 12.6v27.9l3 15.2 5.6 31.5 8.3 34.4 25.1 78.2 29.4 91.2-48.9 25.2-40.5 22.8-32.2 20.1-26.6 16.6-22.2 13.9-21 11.3-8.4 3.9-9.9 3.6-9.8 3.9-9.7 2.6-9.8 1.3-10 1.2h-25l-29.4-2.5-35-5.2-97.7-16.2-139.8-25.4H39872.4l-21 6.3-34.9 10.1-44.9 12.6-52.9 16.5-58.8 17.8-58.7 20.2-57.3 21.4-53.2 22.7-23.7 11.6-22.4 11.4-18.2 11.3-16.7 11.4-12.7 11.3-8.3 11.4-4.3 10.1v11.4l4.3 10 11.1 9 15.4 8.8 22.3 8.8 28 9 35.1 6.2 43.3 7.8 50.2 4.9v7.5h908.8v-7.5l26.6-2.5 26.5-2.4 26.6-2.6 25.1-2.6 26.5-2.6 26.6-2.5 26.6-2.4 25.1-2.5h387.4l9.8 8.8 8.3 6.4 12.7 6.2 19.5 8.8 4.3 1.3 1.3 1.2 30.8 1.3h29.5l29.3 1.4h30.7l29.3 1.2h29.4l30.7 1.3h29.3l11.2 4.9 11.4 3.9 12.5 5.1 9.8 5h153.7l61.6 6.4 61.5 7.6 58.8 8.7 60 10.3 117.5 21.5 114.5 25.2 116.2 25.4 114.6 25.3 58.7 12.6 58.7 11.4 58.8 10 60.1 10.2 4.2 10 8.4 9 11.1 10.1 13.9 8.8 15.6 10 19.5 9 21 8.8 23.7 10.2 51.7 17.7 58.8 18.9 62.8 19.1 65.9 18.8 67.1 20.2 67.1 21.7 65.5 21.4 63.2 22.8 29.1 12.5 28 12.7 27.9 12.7 25.3 12.7 22.3 13.9 21.1 13.9 19.5 13.9 16.7 15.3 40.5 30.2 39.3 26.6 39 25.3 37.7 22.7 38 21.5 36.2 17.8 35 15.2 32.1 13.9 32.2 10.1 29.3 8.8 28 6.4 26.6 3.7 23.7 1.2 21.1-1.2 19.5-3.7 15.4-6.4 13.9-8.8 11.2-11.4 7.1-13.9 4.1-16.5 1.5-18.9-2.8-21.7-5.6-23.9-9.9-27.7-13.9-29.2-18.2-31.5-21.1-35.6-26.5-36.6-30.7-40.3-36.4-41.9-40.6-45.5-44.6-48.1-11.1-22.9-14.2-28.8-15.2-34.4-15.5-35.4-5.5-18.8-4.3-17.8-4.1-17.8-1.5-16.4v-15.1l2.8-14 2.8-6.2 2.7-6.4 4.4-4.9 4.1-5.2 79.8-1.2h40.5l9.8-1.4h4.1l2.8-1.3v-1.2l14.1-6.3 12.4-7.7 9.9-8.7 11.2-11.5 47.6 15.2 64.3 22.9 75.5 26.5 82.5 26.5 43.4 11.5 41.8 10 40.5 8.8 39.3 6.5 19.5 1.3 18.1 1.2h18.3l16.8-1.2 15.4-1.3 15.2-2.6 14.1-3.9 13.9-4.9 8.4-3.9 5.6-3.8 5.6-3.6 4.3-5.3 8.3-10 9.7-12.7v-17.8l-4.1-17.6-5.6-16.4-7-15.3-8.4-13.9-11.2-13.7-11.1-12.7-14-12.7-15.4-10.2-15.4-11.4-18.3-8.7-18-8.8-19.7-9-19.5-7.6-21.1-7.5-21-6.4-43.2-12.7-44.7-10-44.7-8.8-43.4-7.8-81-12.6-67.2-12.7-4.2-41.6-4.1-43.1-1.5-20.1-1.3-21.7v-41.5l1.3-20.5 4.3-18.8 4.1-20.2 7-19.1 8.4-20.1 11.2-17.8 12.6-18.9 15.2-17.8 21 6.5 22.5 6.1 23.6 8.8 26.6 10.3 54.7 22.8 60 26.6 62.8 26.4 65.9 27.9 67.1 27.8 65.6 24 33.7 11.4 32.2 10 32.1 9.1 30.7 7.5 30.8 6.2 29.2 3.8 29.4 2.7h26.6l26.6-1.4 23.8-3.8 22.3-7.5 21-8.8 18.2-12.7 16.7-15.2 15.5-17.8 12.6-21.4-4.2-26.6-12.7-26.6-19.5-27.6-25.1-26.6-33.7-27.9-39-26.6-44.8-26.6-48.8-26.6-54.7-26.6-58.6-26.3-61.5-25.4-65.9-25.3-68.4-25.3-69.9-24-72.7-23-74.2-22.7-75.5-22.7-75.4-21.5-75.5-20.3-75.4-18.8-74.2-17.8-72.8-17.6-71.2-16.6-69.8-13.9-65.9-13.9-64.3-11.4-58.8-11.3-55.8-8.8-51.8-7.6-46.1-6.4-40.5-5.2-35-2.3v-1.3l-1.3-1.3h-4.3l-8.3-1.3h-32.2l-61.5-1.2-103.4-17.8-103.6-17.6-103.3-19.1-103.6-17.6-104.8-19.1-103.4-17.6-104.8-19.1-104.9-17.5-104.9-17.8-104.8-17.6-104.9-16.6-104.8-16.4-103.6-16.6-104.8-14.9-103.4-14-102.1-12.6h-32.2l-32.1 1.2-33.6 1.3-33.5 2.4m12.5 1215.6h-381.8l16.9-1.3 43.4-1.3 60.1-1.3h139.7l61.6 1.3 43.3 1.3 16.8 1.3zm-335.4 339-7.1-1.3-19.5-1.3-26.6-1.3h-60.1l-26.5 1.3-18.3 1.3-7.1 1.3-16.7 1.2-16.7 1.4h-92.5l-69.9 1h-82.3l-19.5 1.3h-11.4l-2.7 1.4-1.3 1.2-12.7 2.5-15.5 2.7h-355l-89.5-1.3h-179l-89.4-1.4h-227.9l-50.2 1.4-49.1 1.3h-50.2l-29.4-3.9-29.3-1.3h-30.9l-29.2 1.3-29.4 3.9-29.3 4.9-29.4 6.4-29.4 7.5-28.1 7.7-26.6 10.1-26.4 11.4-25.3 11.3-23.7 12.7-20.8 12.7-21 13.9-18.3 15.2-16.8 15-13.9 14-12.6 16.5-9.9 15.2-6.8 15.2-4.4 15-1.2 15.2 1.2 15.3 5.6 13.9 8.5 14 11 13.9 15.5 12.7 19.7 12.6 23.6 10.1 28.1 10 32.2 8.8 5.6 2.6 13.9 1.3h85.3l13.9-1.3 5.6-2.6 29.5-6.2 29.3-3.8 27.8-2.6h28.1l27.9 2.6 27.9 3.8 25.3 6.2 26.6 6.5 23.8 8.8 23.5 10.1 22.6 11.3 19.6 12.6 19.5 14 18.1 13.9 16.8 15.3 13.9 16.3 12.7 16.4 11.1 17.8 8.4 16.4 5.7 17.8 4.1 17.8 1.5 17.6-1.5 17.8-4.1 17.5-5.7 16.5-9.7 16.5-12.6 16.4-15.5 15.1-19.5 14-21 12.6-26.6 12.7-29.1 11.3-75.8 1.4h-37.6l-9.7 1.2h-5.6l-1.5 1.3v1.4h-60.1l-28-2.7-27.9-2.6-26.6-3.8-26.6-5-26.6-5.1-25.1-6.2-51.6-15.2-51.9-16.5-53-18.9-54.7-19.1-9.6-2.5h-28.1l-37.7-1.2h-87.9l-37.8 1.2h-26.6l-11.1 2.5-22.6 3.9-22.2 5.1-22.3 6.3-22.6 6.4-22.3 7.5-21 7.5-21 9-19.5 8.8-19.5 8.8-18.3 10.1-16.6 10.2-15.6 10.1-15.4 11.4-12.4 10.1-11.3 11.4-8.5 11.3-6.8 10.1-5.6 11.3-2.7 10.3-1.5 11.4 1.5 10.1 4.1 10 7 8.8 9.6 10.4 12.7 8.8 15.4 7.4 19.5 7.8 22.4 7.5 25.2 6.4 29.5 4.9 33.4 5.1 36.4 3.7h53l26.6 1.3H38489.6l26.6 1.3h26.5l33.7 5.1 33.4 6.2 32.2 6.5 32.2 6.2 32.2 7.7 30.8 10.1 30.7 10 32.2 12.7 2.7 32.9 1.3 30.3-2.7 29.3-5.6 25.3-8.4 24-11.2 21.4-12.6 18.9-15.2 19-16.9 15.3-19.5 13.9-22.4 12.7-22.3 11.3-25.3 8.8-25.1 8.8-28.1 6.5-27.8 6.2-27.9 3.9-30.9 3.8-30.6 2.3-31 1.4-62.7 1.2-63.1-1.2-120-7.5-106.4-7.6h-188.7l-34.9 7.6-36.6 10-34.9 11.4-34.9 12.7-30.7 13.9-29.4 15.2-12.6 7.5-12.5 7.7-9.8 8.8-9.9 7.5-6.9 9-7.1 8.8-4 10.1-2.8 8.7-1.5 9.1v10.1l2.8 10.1 5.5 10 7.1 10.1 9.7 10.3 12.7 10.1 13.9 10 18.2 10.1 19.5 11.4 22.6 10 26.5 11.7v7.5h153.7v-7.5l47.6-10.3 47.5-7.5 47.6-8.8 47.6-7.8 47.4-6.2 47.6-6.4 47.6-6.2 47.4-6.4 33.6-1.4h32.2l32.1-1h33.5l43.3 1 44.9 1.4 43.2 1.2 43.3 1.3H38713.5l72.7-2.5 73.9-2.4 72.6-1.3 74.2-1.3 72.7 1.3 72.8 2.3 36.4 2.6 36.3 2.6 36.4 3.8 36.3 5V58035.7h443.2l36.2-1.3h18.3l7-1.3 1.3-2.5h44.9l43.2 1.2 43.3 2.6 42.1 3.7 83.8 11.5 82.5 12.7 82.4 12.7 84.1 11.3 43.3 3.6 43.3 3.9 43.3 1.3h69.9l25.1 1.3h23.8l23.8 1.3 25.1 1.2 26.5 1.3 25.4 2.4 23.6 2.6 49.1 6.4 47.4 8.8 46.3 10.1 44.5 12.6 44.9 12.7 44.6 12.7 88.1 29.1 89.7 29 46.1 13.9 46.1 12.7 47.6 11.3 48.8 10.1h131.5l43.3 5.2 46.1 5.1 47.6 6.2 47.4 7.7 50.4 8.8 48.9 8.8 50.3 11.4 49 12.6 48.9 12.6 47.6 15.3 46.1 16.5 43.3 18.9 21 8.8 21 10.3 19.5 11.3 19.5 10.1 18.3 12.6 16.7 11.4 16.9 12.7 16.8 12.7 26.5-2.7 28-1.2 26.6-2.6 26.5-1.1 8.4 20.1 13.9 17.6 16.9 17.8 20.8 15.3 23.8 13.9 26.6 12.7 29.4 11.3 30.7 10.1 32.2 7.5 32.1 7.7 33.6 4.9 33.5 5.2 32.2 2.6 32.1 1.3h30.9l29.4-1.3 26.4-1.3 25.3-3.8 21-5 18-6.4 14.1-7.6 9.7-9 4.3-10v-11.3l-5.6-11.5-12.6-13.9-18.3-15.2-25.1-15-32.1-17.8-42.1-17.8-48.8-18.9-57.2-21.4-43.4-7.8-40.5-11.3-36.5-13.9-32.1-15.1-27.9-16.4-23.8-17.8-21.1-20.2-16.6-20.1-14-21.7-9.9-22.7-7.1-21.5-4.1-22.7v-23l2.9-22.7 4.1-21.4 8.6-21.5 12.4-21.7 12.6-18.8 16.7-17.8 19.6-16.3 21-15.2 23.8-12.7 26.5-11.4 28-7.4 29.3-6.5 32.2-2.6h34.9l35 2.6 37.7 7.5 39.3 10.3 40.5 13.7 42 19.1 27.9 21.5 27.8 17.7 26.6 16.3 25.4 11.7 25.1 10 23.7 7.5 22.3 5.2 22.6 2.5h19.5l19.5-1.3 18.2-3.8 16.8-5.2 15.4-7.5 13.9-8.8 12.7-9 11.2-11.3 9.5-12.7 8.6-13.9 5.6-13.7 4.1-15.3 2.8-15.2 1.4-15.2-1.4-16.3-2.8-16.6-5.6-16.4-6.8-16.5-9.9-16.4-11.1-15.2-14-16.5-17-13.9-17.9-13.7-21.1-14h-107.6l-32.1-20.4-28.1-21.4-23.9-22.8-18-25.2-13.9-26.6-9.9-26.6-7-27.8-2.9-27.8v-27.8l4.4-27.9 6.8-27.8 9.8-26.6 12.7-26.4 13.9-25.3 16.8-24.2 18.3-22.8 19.5-21.4 22.5-17.8 22.2-17.6 25.1-13.9 23.8-11.4 25.1-8.8 26.6-5.2 26.6-1.2 25.3 1.2 26.4 5.2 25.2 10 25.1 14 23.9 18.9 22.3 22.7 21 29.1 21 34.1 23.8 10.1 26.6 11.6 26.6 11.3 29.1 10.2 28.1 10 29.5 6.4 13.9 1.2 13.9 1.2h13.9l12.7-1.2 11.1-36.8 2.8-36.6-5.6-35.4-12.6-35.4-18.1-34-25.2-33.1-32.2-32.8-36.3-31.5-42-31.7-46.1-30.5-50.3-29-53-29.1-57.4-27.9-60.1-27.7-62.9-26.5-64.2-25.3-65.9-25.3-67.1-24-68.4-22.7-68.6-23-134.2-41.6-130-39.3-123.1-35.3-111.8-31.8-96.4-27.7-78.3-25.2-32.1 1h-32.2l-32.2 1.3-33.6 1.3-23.8-1.3-23.8-1.3h-25.2l-23.7-1-62.9-12.7-61.5-12.6-61.6-12.7-61.5-12.7-60-12.6-61.5-11.3-60.1-12.7-60.3-12.7-60-11.5-61.5-12.7-60.1-11.4-61.5-11.3-61.5-11.4-63.1-10.1-62.8-11.4-62.8-10zm-1398.1 10v5.2h-49.1l-50.2-1.3-49.1-1.2m-3920.2 10v-7.5h-65.7l-33.6 1.1h-8.4l-4.2 1.3-1.4 1.2V56598.8h113.3zm-5.6 0h-26.6l-26.6-1.3h-26.5l-28-1.2m4718.6-7.5-89.5 1.2h-179l-89.4 1.3h-178.8m-4275.6 684.3-1.2-23-1.5-22.7-1.3-22.8-1.5-21.4v51.9l1.5 26.6v6.2l1.3 3.8 1.5 1.4h1.2zm1093.5 48 21-2.6 22.2-2.6 21-2.5 21.1-2.4 9.6-21.7 7.1-28.9 4.1-34.3 1.5-40.3-1.5-44.4-4.1-49.3-7.1-53.2-8.3-55.5-11.2-58.1-13.9-61-15.4-62-16.8-63.2-18.2-64.3-21.1-63.2-21-62-22.2-62-25.1-59.6-23.8-56.8-26.6-53.2-26.6-50.6-26.6-46.8-27.8-41.7-28.1-36.7-28-30.2-29.3-24.1-27.9-17.8-28.1-10.1-26.6-1.2-27.8 6.4-26.6 15-25.1 25.3-25.3 36.7-6.9 39.2-5.6 41.9-1.5 22.7-1.2 21.4v22.7l1.2 23 1.5 22.7 2.9 21.5 4 21.4 5.6 21.6 7 20.2 8.4 19.1 8.4 18.8 11.1 17.8 30.9 21.5 26.6 22.7 25.1 25.3 21 26.6 18.2 27.9 16.8 29 13.9 30.3 11.2 31.6 9.8 31.7 9.9 32.9 6.9 32.9 7 34.2 9.6 66.9 8.4 67.1 9.9 64.5 11.2 62 7.1 29.2 8.3 27.6 9.8 26.6 11.2 25.3 12.4 24 15.4 21.5 16.8 20.3 21 17.6 22.5 15.3 25.1 12.6 29.4 10.1 32.2 7.7zm-579-63.3-1.3-2.5-4.3-13.9-2.7-12.7-1.4-29v-30.4l-1.5-29.2v-29l-5.6-33-6.8-34.1-9.9-36.6-9.9-36.7-12.3-36.6-12.7-38-16.8-37.9-16.6-36.7-19.8-35.4-21-34.3-11.2-16.3-11.1-16.5-12.6-15.3-12.5-14.9-12.6-14-14-13.9-13.9-12.7-14.1-11.4-15.3-11.3-15.4-10.3-15.5-10.1-16.7-8.8m-113.3 0-19.5 8.8-21 9-18.1 10.1-18.3 11.4-18 12.6-15.4 14-14 14.9-12.6 17.8v145.5l-1.5 36.6v73.5l-1.3 36.8 5.5 23.9 5.6 25.4 4.3 23.9 5.6 24.1 4 24 5.6 25.3 4.3 24 5.6 25.3m5.5 89.9 11.2 72 18.3 111.3 12.6 64.5 12.5 69.5 15.4 72.1 16.7 71 17 70.7 19.5 67.1 9.6 31.5 11.4 31.8 11.1 27.6 9.7 26.6 12.6 25.3 11.2 22.8 11.1 19 12.7 17.6 12.6 13.9 12.5 10.3 12.6 7.5 14 2.7v40.3l1.5 40.5v121.3l1.2 40.5v81.1l4.3 34.1 8.4 32.8 9.8 30.5 12.5 29.2 14.1 26.3 15.3 26.6 18.2 26.6 18.2 24 39 46.7 42.1 47 42 45.5 39 46.8 18.3 23.9 18.2 24 15.2 26.6 14.2 26.6 12.4 27.9 9.8 30.4 8.4 30.3 5.6 32.7 2.8 34.4-1.3 36.6-4.3 39.3-6.8 41.6-11.4 43.1-15.2 46.8-21 49.3-23.9 51.8-7.1 2.7-8.3 2.5-8.3 34.1-2.9 27.9 1.5 20.2 5.6 13.9 9.7 7.5 12.7 1.3 16.6-3.9 19.8-10 22.2-14 23.9-18.9 27.8-21.5 28.1-26.5 30.7-29.2 32.2-31.5 33.5-34.3 33.6-36.7 69.9-76.9 68.4-79.8 67.1-79.8 63-75.9 56-69.4 46.2-60.7 34.9-46.8 22.3-30.4h11.1v-16.6l-26.6-17.5-26.6-16.6-23.6-13.9-21-11.3-21-10.2-19.5-6.4-18.2-6.1-16.7-3.9-15.5-2.6-13.9-1.1-13.9-1.3-12.7 1.3-12.6 2.3-12.5 2.6-11.4 3.9-11.1 3.7-21 7.6-20.9 8.8-21 7.8-23.7 6.2-12.7 2.6h-26.6l-15.2-1.3-15.5-2.6-16.7-4.9-18.2-5.2-19.5-7.5v-11.5l-36.4-16.4-35-16.5-34.9-16.4-35-16.4-6.9-23.9-8.6-24.1-9.6-23-8.4-23.9-21-45.5-21-45.5v-65.8l1.5-67.1v-65.6l1.3-67.1v-265.8l4.3-12.6 4.1-11.3 19.7-3.7 18-5.1 18.2-5.2 18.3-3.6 27.8 14.9 28.1 12.7 29.4 12.7 29.2 11.6 30.8 10.1 29.4 10 30.6 10.1 31 7.5H36156.2l19.7-10.1 15.2-11.4 8.6-11.3 5.6-11.4v-11.3l-4.4-12.7-8.3-12.6-11.2-14-15.4-13.9-18.2-13.9-21.1-14-23.5-15-51.9-31.7-58.6-34.2-61.5-35.4-63-37.9-30.7-20.4-30.9-20.1-29.4-21.4-27.8-21.7-26.6-21.5-23.8-22.7-22.3-24-21.1-24-16.6-25.3-14-25.3-9.9-26.6-6.8-26.6-1.5-30.3v-30.3l-1.5-30.3m0 0v-29.2 29.2zm-679.3 501.9v-63.2l-1.5-48.1v-56.7l-1.4-13.9v-7.8l-1.4-2.4h-1.3l-14.2-45.6-13.9-37.9-15.2-32.9-17-25.2-16.6-20.2-18.3-15.2-16.8-8.8-18.1-3.9-18.3 1.3-18 4.9-18.2 11.4-16.8 13.9-16.9 19.1-15.2 24-14 26.5-14.1 29-11.1 34.4-9.7 36.6-8.6 39.3-6.8 41.5-4.4 44.5-1.2 46.6v48.1l2.7 50.6 6.9 51.9 8.6 54.5 12.5 54.2 15.4 55.8 19.5 55.5 23.8 57 26.6 56.9 30.7 57.1 26.6-3.9 25.2-6.5 22.4-6.2 21-8.8 18.2-10.3 15.2-10.1 15.4-12.6 12.7-12.6 11.2-14 8.3-15 8.4-15.2 7-16.6 4.1-17.5 4.3-17.8 2.8-19.1 1.3-18.9 1.5-20.2v-20.3l-1.5-20.2-1.3-20.3-4.3-42.9-6.9-41.8-15.4-83.4-13.9-78.6zm434.7 624.9v-305.9l1.4 101.1 1.5 75.7 1.3 54.5v58.1l-1.3 11.6-1.5 4.9h-1.4zm2852 44.4h-29.1l-30.9 1.1-29.4 1.3-29.3 2.5-29.5 5.2-29.3 10.1-30.7 10-32.1 11.4-30.7 10.1-30.8 7.8-15.5 3.5-14 2.6H37690l-33.7-2.6-34.9-1-33.5-2.5-33.6-2.7-34.8-2.6-33.7-3.6h-148.2l-47.6 15-46.1 16.6-44.7 16.4-46.2 13.9v10.2l-15.1 4.9-18.3 3.9-34.9 3.9-64.4 7.4-13.9 29.2-4.4 22.7 7.1 16.5 15.3 12.6 23.7 7.6 32.2 3.8 37.8 1.3 44.8-2.5 48.9-3.9 54.5-6.3 57.4-7.6 60-7.6 61.6-8.7 62.9-7.8 63-6.2 62.8-6.4 61.6-3.8 60-1.2 56 2.4 53.2 5.2 48.8 8.7 43.3 14 36.5 19 30.6 24.1 22.6 31.5 13.9 36.7 4 44.4-5.5 51.7-16.7 60.8-27.9 69.5-40.5 78.5-53.2 87.3h-11.2v11.3l-30.8 10.1-29.5 11.3-29.3 8.8-29.3 9.1-29.5 8.7-30.6 7.6-30.7 7.7-30.8 6.2-1.4 62v67.1l-1.5 35.4-2.7 35.4-4.1 35.4-5.8 35.6-2.8 17.5-4.1 16.5-5.6 16.3-5.5 16.6-5.6 16.4-7 15.3-8.5 13.9-8.3 15-9.8 13.9-9.9 12.7-12.5 11.4-12.6 11.3-12.6 11.4-15.3 9-16.9 8.8-16.8 7.5 8.5 16.5 11.3 15.3 13.9 12.5 16.8 12.7 19.5 11.4 21 8.8 23.7 8.8 25.1 7.7 28.1 6.2 28 5.2 30.6 5.1 30.9 3.7 32.1 2.6 32.2 2.5 33.4 1.3 33.7 1.3 67.1 1.3 67.1-1.3 62.9-2.6 60.2-2.5 103.4-6.3 68.4-3.9 96.4 7.6 124.7 10 148.2 12.7 166.4 16.5 181.6 19.1 192.9 22.7 97.8 12.7 99.3 12.6 100.8 15.2 100.6 16.3 99.2 16.6 98.1 17.6 96.4 20.3 95 20.2 91 21.5 87.9 24.2 85.3 23.9 79.7 26.6 75.6 26.4 69.8 29.2 62.8 30.4 57.6 32.9 50.1 32.7 42.1 35.6 34.9 36.7 25.1 39 44.8 13.9 62.9 24.1 75.4 26.6 81.3 26.6 40.5 11.3 37.7 10.1 36.3 7.7 33.7 4.9H41218.8l13.9-1.2 11.2-1.1 9.8-3.8 9.7-3.9 7.1-6.3 5.6-7.6-4.3-45.5-2.8-45.5-2.8-46.9v-68.2l2.8-22.8 2.8-22.9 4.3-22.8 5.6-21.4 5.5-21.4 9.9-21.7 9.6-20.2H41318.1l11.2-16.4 9.6-13.8 11.4-12.6 11.1-11.6 11.2-8.8 11.1-8.8 11.1-6.4 12.7-6.3 13.9-6.4 13.9-3.6 14.2-5.1 16.8-3.9 33.4-8.8 39.3-10.1-1.5-101.2-2.8-89.8 1.4-40.3 2.9-38 1.2-19.1 4.4-16.5 4-17.5 5.8-15.3 5.6-15.2 8.3-15.3 9.7-13.7 9.8-12.7 12.7-12.5 13.9-11.4 15.5-11.6 16.7-10.1 19.5-10.1 21.1-8.8 23.7-7.7 25.1-7.5 28.1-6.2 30.7-6.4 33.4-5.2 35-5 33.6 10.2 35 8.8 18.2 2.5h25.1l8.4-2.5 8.3-2.4 8.4-3.9-18-59.4-12.6-53.2-8.4-46.7-5.6-41.8v-36.7l2.8-31.7 5.6-26.4 9.8-22.9 12.4-17.6 15.5-15.2 16.7-11.4 21-7.5 21-5.2 25.1-2.5h25.1l28.1 2.5 27.9 3.9 30.9 4.9 30.6 7.8 30.9 7.5 64.3 16.5 64.2 16.3 32.1 7.7 30.9 6.2 30.7 6.4 29.3 3.6 28.1 3.9h27.9l25.1-1.2 23.8-3.7 4.2-39.2-5.5-38-16.7-39.2-26.6-38-36.4-37.9-44.9-38-53-36.7-60.2-36.6-67.1-35.4-71.2-35.4-77-34.2-82.3-32.9-84-31.7-88-30.3-90.9-29.1-91-27.9-92.1-26.4-92.5-24-90.7-23-90.9-20.1-86.8-18.9-85.2-16.4-81-14-77-11.4-72.7-8.8-65.8-6.4-60.1-3.8-51.6-1.4-44.8 1.4-36.2 5.1-26.6 8.8-15.5 11.3-78.2-1.3-77.1-1-75.4-2.6-76.8-3.9-75.5-5.1-77-4.9-75.4-6.4-75.5-7.6-151-13.9-149.6-15.2-149.7-16.3-151-15.3-150.9-12.6-151-11.4-75.5-5.1-75.4-2.6-77-3.7-75.5-1.2h-77l-76.8 1.2-78.2 2.6-77 3.7-78.2 5.1-79.8 7.6-78.3 8.8-79.8 11.5zm-3658.7 881.6h102l44.8 18.8 37.8 19.1 8.3 2.6 9.9 1.2h6.9l8.3-1.2 8.6-2.6 8.3-5.2 7-7.5 8.3-10.1 1.5-23.9 1.5-23 1.2-22.7 1.6-22.8v-50.6l-1.6-24-1.2-22.7v-24.1l-3-20.3-4.1-20.2-5.6-18.8-5.6-19.1-7-17.6-8.4-17.8-9.8-17.8-11.2-16.3-11.2-16.5-12.6-16.5-12.4-16.3-14.2-15.2-29.2-29.2-32.2-29.1-33.5-26.4-35.1-26.6-36.2-26.6-36.4-25.3-71.2-48.1-68.6-48-9.9-16.5-6.9-17.8-7.1-17.6-6.8-17.8-9.8-36.6-8.5-36.7-13.9-73.3-11.1-73.3-8.5-36.8-8.5-34-5.6-17.8-6.8-16.6-7.1-16.3-7.1-16.4-8.3-15.3-9.6-15.2-11.4-15-12.5-14-12.6-13.9-15.4-12.6-15.2-12.7-18.3-11.4h-7.1l-6.8 1.3-8.3 2.4-8.7 2.6-17.9 9-17 10.1-16.7 12.6-12.5 11.3-5.8 6.3-4.1 6.4-4.2 6.2-1.4 5.2-5.5 1.3-5.6 1.2-22.4 49.4-19.6 44.1-13.9 41.8-11.2 39.3-7 36.6-2.9 32.9-1.3 31.7 2.9 28.9 4 28 7.1 26.6 9.7 23.9 11.3 22.8 13.9 22.7 15.3 20.4 15.4 21.5 18.3 18.8 36.2 40.5 39.2 39.3 21 21.4 19.5 20.4 18.3 22.7 19.5 24 16.7 24 17 26.6 15.2 27.9 14.1 30.2 12.5 31.8 11.2 34.1 8.5 36.6 5.6 40.6 12.4 60.6 15.5 58.2 8.3 26.5 9.8 25.3 5.6 11.4 5.6 11.3 7.1 10.2 6.8 8.9 7.1 8.8 8.4 8.8 6.9 6.5 9.8 6.2 9.8 5.1 9.7 3.9 9.9 3.6 11.1 1.3h25.4l13.9-2.5 13.9-3.7 15.5-5.1 15.1-6.3 17-7.7 18.1-8.7zm383.2 391.9v23l-1.6 22.7v21.5l-1.3 23.9 1.3 29.2v30.2l1.6 30.5v30.2l-2.9 15.2-5.6 15.3-8.3 15.2-11.4 17.6-13.9 16.5-15.2 17.8-16.9 18.9-18.1 17.8-84.1 77.1-83.8 78.3-19.5 20.4-18.2 18.9-16.7 19.1-13.9 17.5-12.7 19.1-11.2 17.6-7.1 16.5-4.1 16.5-2.7 16.3 2.7 15.2 4.1 14 9.9 13.9 14 12.6 18.1 12.7 22.4 10.1 28.1 10.1 11.1-15.3 11.1-13.9 12.7-13.7 12.5-14 28-26.6 30.7-26.6 33.7-23.9 33.5-25.4 36.4-24 34.9-24 34.9-24 35.1-24 33.4-24.1 30.6-24.2 29.5-25.1 26.6-25.3 12.5-12.6 11.2-12.6 9.8-14 8.5-12.6h12.6l9.6-33 14-44.2 14.1-54.6 12.5-60.6 7-31.5 5.6-33.1 4.3-34 4.1-34.1 4.3-34.2 1.2-34.2 1.5-34.1-1.5-32.8-1.2-31.7-4.3-29-5.6-29.1-7.1-26.6-9.6-24.1-12.7-22.7-13.9-19.1-16.8-15.2-19.6-12.7-22.4-8.7-26.6-5h-27.8l-32.2 3.7-36.4 8.9-37.8 13.8-43.3 19.1v15.2l1.5 18.9 1.3 24 2.8 29.1 2.7 38 2.9 45.4 4.2 55.8 2.9 66.9zm-1128.4 335.4 15.4-26.6 12.7-31.7 12.4-36.8 9.9-40.5 9.7-42.8 8.5-48.1 6.9-49.3 5.6-51.9 4.3-53.2 2.7-54.4 1.3-55.5v-55.8l-2.8-55.5-4.1-54.5-5.5-51.9-7.1-51.7-9.8-48.2-11.2-45.5-12.5-43.1-15.4-39-18.2-34.4-19.6-28.8-22.2-24.1-23.9-17.8-26.5-12.6-29.4-5.1-30.6 2.5-33.7 10-36.3 19.2-39.2 26.5-42.1 36.7-43.2 46.7-8.4 31.8-5.5 30.2-4.4 30.5-4.1 30.2-1.5 29.2v29.2l1.5 28.9 1.4 29.2 4.2 27.8 4.3 27.7 5.6 27.9 5.6 27.9 6.9 27.8 8.3 26.6 8.6 27.6 9.7 26.6 21 54.5 22.2 53.2 25.4 54.2 25 55.8 26.6 55.5 25.1 57.1 25.3 58.1 25.1 58.1 29.4 2.6 29.3 2.5 29.5 2.6 27.8 3.9zm-729.7 698.2 30.7-6.4 28-8.8 26.4-11.4 23.9-14 21-15.2 18.1-17.8 16.8-20.2 15.4-21.4 12.5-24 9.9-24.1 9.8-26.5 6.9-26.6 4.3-29.2 4-28.9 1.5-29.2 1.3-30.5-1.3-30.2-2.8-30.4-2.7-31.5-5.6-30.5-5.6-30.2-7.1-30.5-8.3-29.1-9.9-29-9.6-27.8-10-26.6-12.6-26.6-11.1-24-12.4-22.8-14.2-21.4-13.9-19.2-14-17.5h-16.7l-19.8 1.1-22.2 2.5-21 3.9-9.7 2.6-9.9 3.7-9.8 3.7-8.4 3.9-6.9 6.3-7 5.1-5.6 6.2-2.8 7.8h-12.7l-11.1 15.2-12.6 17.5-12.4 19.2-11.2 20.1-12.7 22.7-11.2 24.1-9.8 25.2-9.8 26.6-9.7 26.6-8.4 29.2-7 27.7-7.1 30.4-5.6 29.1-4.1 29-4.2 30.5-1.4 29.1-1.5 29v29.1l2.9 27.9 4.2 27.7 4.1 25.2 7.1 25.4 9.8 24 9.7 21.6 13.9 20.2 14.2 19.1 16.7 16.3 19.5 14 22.6 12.6 23.5 10.1 25.3 6.4 29.4 3.9zm517.2 596.9 15.5-9 16.7-7.5 18.2-7.5 21-5.2 20.8-5.1 22.5-3.7 22.4-3.8 23.7-2.6 46.1-4.9 46.1-5.1 22.5-2.6 20.8-2.6 19.7-3.6 19.6-3.9 8.3-15.3 7.1-11.3 4.1-4.9 5.6-5.1 5.6-5.3 8.3-4.9v-10l19.8-6.4 19.5-6.3 18.1-5.1 18.3-3.9 37.8-7.5 40.5-6.4v-15l-22.5-3.9-23.6-5.1-25.4-6.3-25.1-8.8-54.4-20.3-54.7-25.3-55.9-25.4-54.5-25.2-26.6-10.1-25.1-10.1-25.1-8.8-25.2-7.6-22.4-5.1-21-3.7h-21l-18.2 1.2-16.7 4.9-15.2 9.1-12.7 12.6-9.9 15-8.4 20.4-5.6 24-2.7 29.2v32.8l2.7 39.2 7.1 45.5 9.7 49.3 12.7 57h11.1zm-1293.2 777.7-27.9 1.3-25.3 3.9-26.6 4.9-27.9 6.5-4.3 11.3-4 13.9-9.9 91.2-8.4 112.6-4.2 60.7-2.6 63.2v65.7l1.2 64.5 1.4 33 3 31.5 2.7 31.6 4.1 30.4 4.4 30.4 5.4 30.3 5.6 27.8 8.4 27.9 8.4 25.3 9.8 25.4 9.7 22.7 12.7 21.4 12.6 20.1 13.9 17.8 15.5 16.6 16.7 13.9 25.1-20.4 23.8-21.4 23.8-24 22.3-24 21-25.4 21.1-26.5 21-27.9 21-29 78.2-117.7 79.5-121.3 39.3-59.6 41.8-56.9 22.6-26.6 22.2-26.6 22.3-25.3 23.9-22.7 23.7-22.7 25.1-21.5 26.6-19 26.6-17.6 28.1-15.2 29.4-14 30.6-12.6 32.2-8.8 47.6-24.1 41.8-27.8 36.5-30.5 32.1-32.8 28-34.1 22.2-36.6 18.3-38 13.9-39.2 9.8-40.5 7.1-40.6 2.9-40.4-1.6-41.7-2.8-40.6-6.8-40.5-8.6-39-12.4-37.9-14.2-36.8-15.3-34.2-18.1-32.8-19.5-30.5-21.1-27.7-22.3-24.2-23.8-20.1-23.8-17.6-25.1-14-25.3-8.9-25.1-5h-25.3l-25 6.2-23.9 10.1-23.7 16.5-23.6 22.8-2.8 20.3-1.6 18.9v40.5l2.9 20.1 4.2 20.5 5.6 18.8 8.3 19.1 8.5 17.5 11 16.6 14.1 16.5 15.4 13.7 8.3 6.4 8.4 5.2 9.9 6.2 9.8 3.8 11.2 5 11.1 3.9 12.6 2.5 12.5 2.7 8.4 22.7 4.2 22.7 1.3 22.7-1.3 24-4.2 22.7-6.9 24.1-8.4 24.2-11.1 24-14.2 24-15.2 24-16.9 24.1-19.5 25.2-19.5 24.1-22.5 24-22.4 24.1-23.7 23.9-49 46.7-50.3 47-51.7 45.5-48.9 42.9-47.6 41.8-43.4 39.2-19.4 18.9-18.3 19-16.7 17.6-15.4 16.6-26.6-8.8-27.9-10.1-28.1-9-26.3-8.8-11.5-35.4-11-35.3-11.2-34.2-12.7-35.6-12.4-34-14-34.1-15.4-33-18.2-34.2zm7677 241.7 2.7-3.9 2.8-4.9v-6.4l1.3-11.4-19.5-10-21-9.1-20.8-10-21-8.8-1.5-8.8-2.8-9h-11.1l-1.4-66.9-2.9-58.3-5.6-48.1-4.1-41.6-2.8-34.3v-39l1.3-11.6 2.8-10.1 4.2-8.8 4.2-7.4 7-6.5 8.4-7.6 9.9-5.1 11.1-6.2 13.9-5.1 15.5-5.1 18.2-5 96.5-22.8 141.1-31.7V61870.5h12.7v-10h11.1l2.8-11.4 2.8-9h11.1l8.4-36.7 9.8-32.7 11.2-29.3 12.7-26.3 13.9-23 15.4-20.1 16.8-17.8 16.6-15 18.3-12.7 18.3-11.3 18-9 18.2-8.8 19.7-6.4 18-5 19.8-5.2 17.9-3.6 35-7.7 33.7-7.5 13.9-5.1 14-4.9 12.6-6.5 9.9-7.5 9.6-9 7.1-11.4 5.5-11.3 4.1-15.3 1.5-16.3-1.5-19.1-2.7-22.7-6.9-25.3 1.3-27.9 2.7-26.4 2.9-24.2 2.7-22.7 4.4-18.9 4.2-19.1 5.6-16.2 5.6-14 5.6-14 6.8-11.3 7.1-10.1 8.3-10.3 9.9-7.4 9.6-6.3 9.9-6.4 11.2-5.1 11.1-5 12.7-3.8 13.9-2.6 14-3.7 30.8-5.1 33.4-3.9 37.8-4.9 40.8-7.8 44.6-7.4 48.8-11.4-11.1-35.4-16.7-33-25.1-31.5-30.9-30.5-36.2-27.6-43.5-28-46.1-25.2-51.8-25.3-55.9-24-58.8-21.5-61.3-21.7-63-21.4-65.6-18.8-68.6-19.1-67.1-18.9-68.5-17.8-137-32.8-131.5-31.8-124.3-30.2-112-30.4-48.8-15.3-46.2-15.2-40.5-15-34.9-15.2-28.1-15.2-22.3-15.3-15.5-16.3-7.1-16.4-29.1-8.8-29.4-7.8-28.1-6.2-29.3-7.7-15.2-15-28.1-15.3-40.6-13.9-51.6-12.7-62.9-12.6-71.4-11.3-81-11.4-88.1-10.1-95-9-102.2-7.5-106.3-7.5-111.7-6.5-116.2-6.1-117.3-5.2-120.4-5.1-121.5-3.7-123.1-2.6-121.6-1.2-120.3-2.7h-345.2l-107.8 2.7-101.8 1.2-95.3 3.9-88.2 2.4-81 5.1-72.6 3.8-61.7 6.3-52.9 6.4-40.7 6.2-29.2 7.7-21 27.7-22.5 26.6-26.4 22.7-28 20.4-30.7 17.5-32.2 15.3-35 14-36.4 11.3-37.8 10.1-40.5 7.7-40.5 6.2-43.3 3.9-43.3 3.8-44.9 2.4-46 1.3h-46.1l-95.2-2.6-96.6-3.6-96.2-5.2-96.5-3.8-95.3-3.7-92.1-1.2h-44.9l-43.2 2.5-41.9 2.4-42 3.8-4.1 27.9-3 27.9-2.7 27.6-2.9 27.9-1.3 27.9-1.4 27.8-1.3 27.9v29l6.9 3.9 8.5 3.8 11.2 2.3 11.1 1.3 13.9 1.4h13.9l14.1-1.4 15.4-1.3 30.8-3.6 29.4-6.4 25.1-6.3 18.2-6.4V60698l34.9-8.8 68.5-15.2 95.2-20.1 117.3-21.6 64.3-10.2 68.6-11.3 69.9-10.1 72.7-10.1 74-9 74.2-7.4 74-5.2 72.7-5 71.4-2.5h68.4l65.8 1.2 61.6 5.2 57.2 7.5 51.7 11.4 46.1 13.9 39.2 17.6 32.2 21.6 23.8 26.6 15.4 29 5.6 35.4-4.3 39.2-16.7 45.7-26.6 49.3-40.5 55.5-58.8 15.3-50.3 8.8-44.7 9-40.5 10-18.3 6.2-18.1 7.8-16.8 8.8-16.7 11.4-17 12.5-16.6 16.6-16.8 18.8-15.4 22.8-44.7 6.4-33.6 6.2-14 2.6-11.1 3.9-8.4 3.9-8.5 6.2-5.6 6.4-4.1 7.5-4.3 10-2.8 11.4-2.8 31.8-2.7 42.9 53.1 6.4 47.6 8.8 11.2 3.9 11.2 3.6 9.6 5.1 9.9 5.2 9.8 7.5 8.3 7.4 8.5 10.4 7 11.3 8.4 30.3 4.1 27.8v26.6l-1.4 22.7-5.5 21.5-9.9 20.4-11.2 17.6-13.9 15.2-15.4 13.9-18.3 12.7-21 11.4-22.2 10-23.9 8.8-25 6.4-26.6 7.6-26.6 5.1-57.3 8.8-57.4 7.8-58.6 4.9-57.4 5.1-52.9 6.2-49.2 7.7-22.3 3.7-21 5.1-18.3 6.3-16.6 7.6v10.1l-43.4 20.2-46.1 19.1-46 16.5-49 13.7-50.3 11.6-50.5 11.4-53.2 8.7-52.9 7.6-54.7 6.4-56 4.9-55.7 3.9-57.5 2.6-116 5.1-117.2 3.7-117.6 3.8-118.8 3.8-58.7 3.7-58.8 3.9-58.7 3.8-57.2 6.2-57.6 7.8-55.7 7.5-55.9 10-56.1 12.7-53.1 13.9-53 15.2-51.8 17.6-50.3 20.4-2.9 7.6-5.6 7.6-5.6 6.3-5.6 5.1-6.9 4.9-8.3 3.9-8.6 3.9-8.3 3.6-37.8 10.1-37.7 10.3-8.4 2.4-8.3 3.8-7.1 3.8-5.6 5-5.6 5.2-5.6 5.1-4 6.2-1.5 7.7-1.3 8.8v8.8l1.3 11.3 2.8 11.4 4.3 12.7 6.9 13.9 7 16.6 11.1 17.5H34134.5l43.4-35.3 57.4-32.9 71.2-30.4 81-29 93.8-25.3 103.5-24 111.7-22.9 121.8-18.9 128.5-17.8 134.2-16.3 141.3-13.9 145.4-11.4 148.2-10.1 152.4-7.7 153.8-7.5 155.2-3.8 156.5-3.9 153.8-1.3 153.9 1.3 151.1 1.2 148.1 3.9 142.6 5.2 138.2 6.2 133 7.5 125.9 9 117.3 11.4 109.1 11.3 99.3 12.7 88.1 13.9 78.3 16.3 64.3 16.6 51.7 16.4 76.8 8.8 93.7 10.1 110.4 14 121.8 15.2 131.5 18.8 138.3 21.7 141 22.7 144.2 26.6 71.4 13.9 69.8 13.9 68.5 15.1 68.6 15.2 65.6 16.5 64.3 16.4 61.5 17.8 58.8 17.7 54.5 17.7 51.7 19 47.6 18.9 43.2 20.2 39.3 20.3 33.5 21.4 27.8 20.4 23.9 22.7 34.9 11.4 34.9 10 35 10.2 35 8.8 34.9 7.6 35 6.3 36.4 3.9 37.8 2.5zm-5909.9 146.7v-1.3l-2.8-1.3h-6.9l-13.9-1.3h-57.4l-111.8-1.3h-193l-32.1 3.9-33.7 5.2-32.2 7.5-33.4 7.6-32.2 10.1-32.2 11.4-30.6 13.9-30.9 14-30.6 15-29.4 16.5-28.1 17.8-27.9 18.9-26.6 19.1-23.8 20.1-23.8 21.4-20.8 21.7 11.1 11.4 15.3 8.8 18.2 6.2 21.1 5.1 23.7 2.6 26.6 1.3 27.9-1.3 30.9-2.6 33.5-3.8 34.9-5 36.4-6.4 37.8-7.5 78.3-17.8 81-20.2 82.6-24 82.3-22.7 79.8-24 76.9-24.3 71.2-20.1 63-18.9 55.8-13.9 44.8-10.1v-10.3l-44.8-8.7-43.3-6.3-44.5-3.8-46.4-2.6zm1353.5 2025.1-32.2 1.3-30.8 1-30.7 1.3-32.2 2.6-43.3 2.6-44.8 2.5-44.7 2.6-44.7 2.3-44.9 3.9-44.6 3.9-44.8 4.9-43.3 7.7 2.8 5 2.8 5.1 4.3 3.9 5.6 3.6 9.6 7.7 12.6 5h118.9l50.3 10 50.5 9.1 52.9 8.7 53.1 7.6 107.7 15.2 110.4 13.9 109.2 12.7 108.9 12.6 106.4 11.3 103.3 12.7 28.2 1.3h29.3l27.8 1.3 28.1 2.5 95 12.7 95.1 11.4 97.9 11.3 99.3 10.1 97.8 11.4 99.3 12.7 99.3 13.9 97.7 16.5 49.2 8.8 47.3 8.8 48.9 10.1 47.6 11.5 46.1 12.7 47.6 12.6 46.1 13.7 44.8 15.3 44.6 16.5 44.9 17.5 43.2 19.2 43.4 20.1 42 21.7 40.5 22.7 40.6 25.3 39.2 25.3 37.7 1.3h67.1l29.5-2.6 27.8-2.6 25.1-3.8 25.3-6.2 23.8-6.4 22.3-8.8 22.3-11.4 22.3-11.4 22.5-15.2 22.4-16.5 23.7-18.9 25.1-20.1 25.3-24.3 27.9-1.1 26.6-1.2 27.9-1.3 26.6-1.3 12.6-19.1 11.1-15 7.1-11.4 4.1-10.2v-10.1l-1.3-5-2.8-5.1-8.3-11.4-12.7-16.5-47.6-1.3-37.7-2.6-16.8-2.3-15.4-2.6-13.9-2.5-11.2-3.9-11.2-3.6-9.8-5.2-8.3-3.9-8.5-4.9-13.9-10.1-9.8-12.6-19.5-26.6-21-27.9-14-15.2-17-15.2-9.6-7.5-11.1-7.6-12.7-7.6-13.9-7.6-86.7-10-85.3-10.2-83.8-9-84.1-10-82.4-8.8-81-9-81.3-8.8-82.3-7.5-81-7.7-82.6-7.5-82.5-6.3-82.6-6.4-83.8-5.1-85.2-3.7-88.1-3.9-88.1-1.2h-220.9l-44.9-3.9-43.2-4.9-44.9-3.9-43.3-3.9h-114.5l-63-3.6-62.9-1.3-63-1.3-64.3 1.3-62.8 2.6-62.8 3.7-63.1 3.8-62.8 5.2zm-3812.6 146.6 18-3.8 16.9-5 16.8-5.2 16.7-7.4 33.7-16.5 30.7-19.1 30.7-20.2 30.8-20.1 29.3-20.4 32.2-17.6 36.3-5.1 37.7-2.6 37.8-2.3 39.2-1.3 79.7-2.6 79.6-2.6 39.2-1.3 40.6-2.5 39-3.7 37.8-5.1 37.7-6.3 38-7.6 34.9-10.2 34.9-11.3v-10.1l64.2-22.8 64.2-21.5 67.2-20.2 68.6-20.2 69.9-19.1 71.3-18.8 71.3-19.1 74-16.6 74.2-16.3 75.4-16.4 75.6-15.3 76.9-13.9 76.8-13.7 78.5-14 76.8-12.6 78.2-11.4 78.3-10.3 76.9-11.3 78.3-8.8 77-8.8 76.8-9 75.4-7.6 75.7-6.1 75.5-6.5 74-5.2 72.7-4.9 71.4-3.9 69.9-2.5 68.4-2.4 67.1-2.6 65.8-1.2h64.4l15.2-3.9 15.4-3.9 12.7-4.9 12.4-5.1 11.4-6.2 9.6-6.5 9.9-7.4 9.6-7.8 36.5-32.8 43.3-39.2 153.8-24.1 150.9-21.4 75.7-8.8 74-10.3 72.7-7.5 72.7-7.5 72.7-6.4 71.3-6.3 71.3-5.1 69.8-3.9 71.5-2.3 68.4-1.3h69.9l68.6 1.3 68.4 2.3 67.1 3.9 68.6 5.1 67.1 6.3 65.7 7.7 67.1 10 65.8 11.4 67.1 13.9 65.6 15.3 65.6 16.3 64.4 19 65.8 21.5 65.6 22.7 64.4 25.3 64.3 26.6 65.8 29.2 95 14 91 14.9 87.9 16.6 84 17.8 82.4 18.8 78.2 20.2 78.5 21.6 76.7 22.7 75.5 24.1 77 25.2 75.5 26.6 76.9 29 78.3 29.1 81.1 31.8 82.5 34.1 85.2 34.1h11.1l9.9-1.2 9.9-2.7 9.6-3.6 9.9-5.1 8.3-5.2 5.6-7.5 4.3-7.5h11.1l12.7-15.2 11.1-14 11.2-10 12.6-8.8 12.5-9 14.1-7.5 16.7-7.6 19.5-9 1.6-8.8 2.8-8.8-50.5-15.2-44.7-17.8-40.6-17.5-37.7-19.1-72.8-38-69.8-36.7-36.2-18.8-39.3-16.5-42-16.6-46.1-13.9-23.8-7.4-26.6-6.3-26.4-5.2-29.4-6.1-29.3-5.2-32.2-3.8-33.7-3.7-34.9-3.9-16.8-22.7-18.2-21.7-19.5-21.4-21-20.1-22.3-19.2-22.3-18.8-25.3-19.1-23.8-17.6-102.1-67.1-99.2-67.1-22.4-16.3-21-16.5-20.8-17.6-19.7-17.8-16.7-19.1-16.8-18.9-13.9-19-11.4-20.2-9.6-21.4-7.1-21.5-4.1-22.9-2.7-24.1 1.2-25.2 4.4-25.4 8.3-27.6 11.2-29.2h11.1v-10h11.2V63484.6l18.2-9 19.5-7.5 21-6.4 22.3-5 22.5-3.8 23.8-2.6 23.6-1.3 25.3-1.1h26.6l25.1 1.1 27.9 1.3 26.6 2.6 54.6 7.4 55.8 10.3 56 11.4 55.9 13.9 53.2 13.9 51.6 15.1 50.5 16.5 46.1 15.2 41.8 15.2 38 13.7 1.2 12.7 2.8 11.6 1.5 12.5 2.8 12.5 47.4 19.2 47.6 17.8 47.6 17.6 47.4 16.4 47.6 15.3 47.6 15 47.3 13.9 47.6 13.9 96.6 25.4 97.7 24 99.3 24 100.8 22.7 4.1-12.6 2.8-8.8v-26.6l-22.3-3.7-22.4-5.1-21-6.2-22.2-7.7-44.9-16.6-44.7-20.1-89.5-45.5-93.7-49.3-47.4-24-47.6-22.9-23.8-10.1-25.1-10.1-25.3-8.8-25-8.9-25.1-7.6-25.4-7.5-25.1-5.1-26.6-5.2-25-3.6-26.6-2.6-28.1-1.3-26.6 1.3-1.3-8.8-2.8-7.7-28-12.7-23.7-11.4-19.7-12.6-15.2-12.6-14.2-13.9-9.6-13.8-8.4-15.2-5.6-15.2-2.7-17.8-3-19-1.4-19v-21.5l1.4-47.9 1.5-54.6 4.2-18.8 5.6-16.6 8.4-15.2 6.9-12.6 9.8-12.7 9.8-10 11.2-8.8 11.2-7.6 12.7-7.6 13.9-4.9 13.9-5.3 14-2.5 15.4-2.6 15.4-2.3 16.8-1.4h50.3l35 2.7 35 2.4 36.2 3.7 36.5 2.7 34.9 1.2h33.5l32.1-1.2 1.5-12.7v-15.2l-1.5-16.6-1.3-18.8-5.5-44.4-5.8-48-6.9-51.9-4.3-52.9-1.3-26.6v-50.7l2.8-24 4.1-22.7 4.3-20.4 8.4-20.1 8.3-16.6 11.2-15.2 14.1-12.6 16.7-10.1 19.5-6.3 22.4-2.5h25.2l27.9 3.8 32.2 8.8 34.9 12.7 40.5 17.8 43.4 21.4 47.6 27.9 8.3 8.8 7.1 11.4 8.3 10 7 10.1h11.3v10.4l12.4 6.1 14.2 5.2 15.2 4.9 16.8 2.6 33.6 5.1 35 4.9 16.7 2.7 15.4 3.8 15.5 5 13.9 6.4 12.7 7.5 11.1 8.8 4 5.1 4.4 6.4 4.1 6.3 2.7 6.4H39264.3l6.9 15 12.7 15.2 15.4 15.2 18 15.3 22.5 13.9 25.1 13.7 26.6 12.7 29.3 12.7 30.7 11.3 32.1 11.6 33.7 10.1 33.4 8.7 35 7.6 33.6 6.4 35.1 6.2 33.4 3.8 32.1 2.6 30.9 1.3 29.2-1.3 28.1-2.6 25-3.8 23.9-6.2 19.5-7.6 15.4-10.2 14-12.7 8.3-15 4.3-16.5v-20.1l-4.3-21.7-9.6-25.3-16.8-27.9-21-30.2-15.4-11.3-16.8-10.2-16.6-8.9-17-8.9-18-7.4-17-7.8-17.9-6.2-19.7-6.4-37.8-11.4-39.1-10.1-39.2-8.8-40.6-8.9-39.1-7.5-39.1-8.8-37.7-9-37.7-10.1-36.5-12.7-33.5-13.9-16.6-7.5-15.6-7.6-15.4-10.2-13.9-8.8v-10.1l-28.1-10.1-26.4-7.7-26.5-6.2-26.6-5.2-25.4-3.6-26.3-2.6-25.3-1.3-23.8-1.3h-96.3l-89.7 1.3h-22.2l-22.3-1.3-21-1.2-21-2.7-21.1-3.6-21-3.8-20.8-6.5-21-6.2-21-8.7-19.5-10.3-21-11.4-19.6-14-19.7-15-20.8-17.7-19.7-20.2-19.5-22.7-27.9-14-33.7-12.6-37.8-14-43.2-12.6-46.1-12.7-50.4-12.7-54.5-12.6-57.5-11.3-60-11.4-62.8-11.4-64.4-11.4-65.8-10.2-137-18.9-141.1-17.8-139.8-16.3-138.5-12.7-134.2-10.3-125.7-8.7-58.8-2.6-55.9-2.4-53.2-1.2H36879l-41.8 1.2-36.4 1.1-30.7 2.6h-78.3l-77-2.6-78.3-3.7-78.2-5.1-78.3-4.9-76.9-3.9-78.3-3.9-78.3-3.8-78.2-1.1-77.1 1.1-39.2 1.3-39 1.3-37.7 2.6-39.3 3.8-39 3.6-37.7 5.2-39.3 6.4-37.8 7.6-37.6 7.4-39.3 9-37.8 11.4-37.7 11.3-6.8 15.3-8.5 16.3-74.1 1.3-72.7 3.9-72.7 6.2-71.4 7.7-72.7 8.8-71.2 10.1-72.7 11.4-72.7 12.5-1.5 21.7v17.6l2.8 22.7 4.3 35.4h25.1l28.1-1 26.6-2.7 29.1-3.8 60.3-7.5 61.5-10.2 64.4-8.8 64.3-10.2 65.6-7.5 64.4-6.4 30.6-1.3 30.9-1.2h30.6l29.4 2.5 29.4 2.6 28.1 3.8 26.3 6.3 26.6 7.5 25.4 9 23.7 11.3 20.9 13.9 21 15.3 19.5 17.6 16.9 20.3 15.2 22.8 14.2 25.3-1.5 58.1-8.4 50.6-15.4 45.5-23.8 39.2-29.4 35.4-34.9 29.2-41.9 26.6-46.1 21.4-50.3 17.7-56 14.1-58.8 12.5-61.5 8.8-65.6 6.3-67.1 5.1-69.9 2.6-70 2.6-144 1-143.9 1.3-71.4 1.3-69.9 2.6-68.5 2.5-65.7 5-62.9 6.5-60.1 10-55.9 11.3-53.2 14-47.6 17.8-41.8 21.4-37.7 25.3-32.2 30.3-33.7 9-37.7 10.1-44.6 10-49.1 10.2-110.4 20.3-124.4 22.7-135.5 25.3-141.3 26.6-146.9 28.9-145.4 30.5-72.7 16.5-71.2 17.6-68.6 17.8-68.4 18.9-64.3 20.4-63 20.1-58.6 20.2-54.7 22.9-51.7 22.7-46.1 24-42 25.4-36.2 25.3-29.4 26.5-23.8 27.7-18.3 29.1-9.6 30.5 20.8 16.3 29.4 11.3 36.5 9.1 43.3 6.2 48.8 3.9h56.1l60-2.6 65.8-3.9 69.9-6.2 74-8.8 76.9-10.3 79.8-11.3 82.3-14 83.9-13.7 85.3-15.3 86.9-16.4 173.2-34.1 170.5-35.4 165.1-34.4 155.3-31.5 139.8-29.1 121.6-24.1 53.2-8.8 47.3-7.6 39.3-6.3 33.5-2.5 75.4-12.7 75.5-15.2 75.6-15 75.5-15.2 76.8-15.3 77-16.4 76.8-15.1 75.7-13.9 76.7-14 77-11.4 76.7-10 77.1-7.8 37.6-2.5 39.3-2.4 37.8-1.2h75.4l37.8 1.2 37.7 1.4 37.8 3.5 13.9 7.8 13.9 10 11.2 10.2 11.3 11.3 11.2 12.7 8.3 13.9 8.4 13.9 7.1 15.3 6.9 16.2 5.5 16.6 4.3 16.5 4.1 17.6 1.5 17.8 2.8 17.6v35.6l-1.5 18.8-1.3 17.8-2.8 17.6-2.8 17.8-4.3 17.6-5.5 16.5-5.6 16.5-7.1 16.3-8.4 15.2-8.3 15.3-8.4 13.9-9.9 12.6-11.1 11.4-11.2 11.4-12.6 10.1-12.5 7.7-139.7 16.2-141.3 14-143.9 12.6-144.1 10.1-145.4 11.4-146.9 11.4-146.6 11.5-146.9 13.7-72.7 7.8-72.7 7.5-72.8 10.1-71.1 9-71.4 11.3-72.7 11.4-69.9 12.7-71.5 13.9-68.3 15.2-69.9 16.3-68.6 17.8-67.1 18.8-66.9 20.5-67.1 22.7-64.4 22.7-64.3 26.6-63.1 6.2-99.3 11.4-129.9 15.2-153.8 20.4-85.2 11.3-88.2 12.7-90.9 13.9-93.5 15.1-95.2 16.4-95 17.8-96.6 19-94.9 20.1-92.4 21.6-90.7 21.5-88.2 24-82.5 25.3-79.8 26.6-72.7 27.9-67.1 28.9-60.1 30.4-51.6 31.5-43.3 33.1-33.7 35.4-23.7 35.4-12.5 37.9-1.5 39.3 11.1 40.5 25.3 41.5 23.6 1.4 23.8 1.3 25.4 1.2 23.7 1.3zm2221.5 475.6-26.6 7.6-27.9 6.4-26.6 7.5-28.1 7.5-40.5 2.5-40.5 5.2-37.7 6.2-37.8 7.7-36.3 8.8-37.6 10.1-37.8 11.3-40.5 11.5v11.3l78.3 15.3 79.5 13.9 81.1 11.3 81.2 10.1 82.3 7.7 83.9 4.9 84.1 3.9 85.1 2.6 85.3 1.3h173.5l86.6-2.6 174.8-5.2 176-4.9 177.6-6.4 176.3-3.7 88.1-1.2h176l88.1 2.3 86.7 3.9 86.8 5.1 86.7 6.3 85.3 9 85.1 10 83.9 14 84 15 82.3 17.7 44.9 22.8 57.3 27.9 67.1 29.1 75.5 31.5 39.2 15.3 40.5 15.2 42 15.1 41.8 13.9 43.3 13.9 42.1 12.7 43.3 11.3 42 9 41.9 8.8 42 7.5 39 5.2 39.2 2.5 37.8 1.1 34.9-1.1 33.7-5.2 30.7-6.4 29.3-10 25.1-12.7 22.5-16.3 19.5-19.1 15.4-22.7 12.5-27.8 8.4-30.3 2.8-35.4-16.7-12.6-18.3-11.6-20.7-11.4-22.6-11.4-23.8-10-25.1-10.1-26.6-10-27.8-9-58.8-16.4-62.8-15.2-64.4-14-65.8-12.6-67.1-10.1-65.6-10-64.4-7.8-63-6.2-58.5-6.4-54.7-3.6-50.1-3.9-43.4-2.6-73-15.2-72.6-13.9-73.9-12.7-74.2-12.7-74.1-12.6-75.5-10.1-75.4-10-75.7-8.8-76.8-8.8-76.9-6.5-76.8-7.4-77-5.2-76.9-5.2-76.9-4.9-78.2-2.6-77-3.8-78.2-1.3-77-1.1-78.2-1.3h-76.9l-76.9 1.3-78.3 1.1-76.9 1.3-76.9 2.5-153.9 7.7-151 10.1-151 11.4-148.1 13.9zm-1255.5 756.3-46.1 2.6-44.8 2.6-46.1 3.6-46.1 3.8h-22.5l-12.5 1.4-12.6 1.3v10l103.6 1.3 104.8 1.3h52.9l53.2-1.3 53.2-2.6 53.2-2.6 51.7-4.9 53.2-6.4 51.6-7.5 50.5-8.8 50.1-11.5 50.4-13.8 23.8-7.7 23.8-8.8 23.8-8.8 23.6-9-1.3-24.1-4.3-20.1-5.6-17.8-9.6-13.9-11.2-11.4-12.6-8.8-15.4-6.2-16.8-3.8-19.5-1.3h-19.7l-20.8 1.3-22.5 3.8-22.3 4.9-25.1 7.8-23.8 7.4-25.3 8.8-51.7 19.1-50.4 21.4-50.2 22.8-47.6 21.4-43.2 20.4-37.8 16.4-16.9 6.4-15.3 5.1-12.7 3.7-11.1 2.5zm2678.7 451.6 22.5-2.6 22.3-2.6 18.2-3.5 16.8-3.9 13.9-5.2 14.1-5 11.2-6.4 9.6-6.1 8.4-9.1 8.5-8.7 7-11.5 7-11.3 12.5-30.4 12.6-35.4-14-10.1-13.9-8.8-14.2-9-15.1-7.5-16.8-7.5-15.4-6.4-18.3-4.9-16.7-5.2-36.4-8.8-37.8-6.5-39-4.9-39.3-3.9-39-2.5-40.7-1.3-39-1.3h-114.7l-68.5-2.5-4.2 17.7-2.9 15.3-1.2 15.2 1.2 15 2.9 14 4.2 12.6 5.6 11.3 8.3 11.4 8.5 11.6 9.8 10 12.4 10.2 11.5 8.8 13.9 7.6 13.9 7.5 15.4 7.6 16.8 6.4 33.4 11.4 35 10 36.4 8.8 37.8 6.4 36.4 5.3 34.9 3.5 33.5 3.9 30.7 1.3zm-676.6 308.6 37.8-17.6 30.7-16.5 22.5-16.6 15.2-16.4 8.3-15.1 2.8-15.2-4.1-13.9-8.3-13.9-13.9-14-18.3-11.4-22.5-12.6-26.3-11.3-29.5-10.2-33.6-10-35-9.1-37.7-8.7-39-7.6-39.3-7.6-42-7.6-41.8-5.1-83.9-10-79.7-7.6-39.2-2.6-35-1.3-35-1.2h-58.5l-23.8 1.2-19.7 2.7-15.2 2.5v10l26.6 5 26.4 6.4 25.2 7.6 22.4 6.4 22.2 7.5 21 9 19.8 8.8 18 8.8 34.9 19.1 33.7 18.8 30.6 20.2 32.2 19.1 30.9 20.2 33.5 17.8 18.1 8.8 18.3 8.7 19.5 7.7 19.5 7.5 21 7.8 22.3 6.2 23.8 6.4 25.4 5 27.8 5.1 27.9 3.7 30.9 2.5 32.1 2.6zM11947.3 53166l-37.6-2.3-39.1-1.4-37.8-1.2h-39.2l-37.7-1.3-36.3-1.3-19.7-1.3-18-3.9-18.2-3.6-16.8-5.2h-144.1l-72.7-1.2h-215.3l-71.3-1.3H11033l-34.9-1.2h-33.5l-33.7-1.4-12.4-3.6-11.3-5.2-12.4-4.9-11.2-3.9 2.7-10 1.4-10.3 93.7-32.9 100.6-31.5 106.2-31.7 110.5-31.5 116-30.5 117.5-27.8 120.3-27.7 122.9-25.3 121.8-24 121.6-21.7 120.3-18.8 117.2-15.3 57.6-7.4 55.7-6.5 55.9-4.9 54.7-3.9 52.9-3.9 52-2.5 50.1-1.3 47.7-1.1 11.1 31.5 8.3 28 7.1 25.2 5.6 22.7 5.6 22.8 4.3 19.1 5.6 18.8 6.8 16.6 7.1 16.2 9.6 15.3 12.7 13.9 16.8 13.9 18.1 14 23.9 12.6 27.8 14 35 13.9h42l37.7-2.5 33.7-3.9 29.1-4.9 23.9-6.5 19.7-7.5 16.7-7.7 13.9-10 10-10.2 6.8-12.7 4.2-11.3 1.4-13.9v-13.9l-1.4-15.3-2.7-15.2-4.3-15.1-12.5-34.2-12.6-34.1-7-17.6-5.6-17.8-5.6-18.9-4.1-17.8-2.8-17.8-1.4-18.8v-17.8l1.4-17.6 5.6-17.8 6.9-16.6 9.8-16.3 13.9-16.4h37.8l40.5 2.5 40.6 3.9 43.2 4.9 44.9 6.5 44.8 7.5 46.1 8.8 46.1 10.3 46.1 11.3 47.6 13.9 46.1 13.8 46.1 16.5 46.1 17.8 44.9 17.5 43.2 20.5 42.1 22.7 41.7 22.7 39.3 24 37.8 26.6 34.9 26.6 33.5 29 29.3 30.3 28.2 31.8 25 32.8 21 34.2 18.3 36.6 13.9 36.7 9.7 39.2 7.1 40.5 1.4 40.6-2.8 44.1-7.1 44.2-18.1 7.7-16.8 5-16.7 5.1-15.5 3.9-15.4 2.5-16.7 1.1-18.2 1.3-21.1 1.3h-107.6l-32.2-1.3-27.8-6.3-23.9-8.7-21-11.6-17.9-15-15.5-16.5-14-20.2-9.8-21.7-8.3-22.7-8.5-24-5.6-25.3-4.2-26.6-5.6-54.2-4.1-54.5-2.7-26.6-3-26.6-2.8-23.9-4.1-24.1-5.5-21.5-7.1-20.3-8.5-17.6-9.8-15.2-12.4-12.6-13.9-10.2-18.3-5.1-21-3.7-23.8 1.4-26.6 4.9-30.7 10-34.9 14-9.9 9-9.6 8.8-7.1 8.8-7.1 10-5.6 9-5.5 10.2-4 10-2.9 10.1-4.2 21.4-1.6 21.7v22.7l1.6 22.8 5.5 46.8 5.6 47.9 1.4 24.3v24l-2.7 24-4.3 24-19.5 7.6-21.1 7.6-22.2 6.3-25.4 3.8-25 3.6-27.9 2.6-29.4 2.6h-60.2l-32.2-1.3-33.5-1.3-33.6-2.6-68.4-4.9-69.9-8.8-141.3-19-134.2-20.2-62.8-9-58.8-7.5-51.7-5.1-46.1-3.7h-96.5l-53.2-2.6-51.7-2.5-51.6-3.9-51.9-2.4-51.7-2.5-51.6-2.6-51.7-1.3-52-2.6zm5642.8 172 5.8-2.4h17.9l23.9-1.2h57.4l23.6 1.2h18.3l5.6 2.4 102 7.7 86.6 14 74.2 18.8 60.1 26.6 49.1 31.8 37.6 36.6 26.4 40.3 18.3 45.7 9.8 50.6 1.4 53-5.6 58.3-11.2 59.4-16.7 63.2-21 65.9-25.1 68.2-26.6 69.7-60.3 141.4-60 146.7-27.9 73.6-26.6 72.1-22.2 72-18.3 72-13.9 69.8-8.6 68.1-1.3 67.1 5.6 64.6 13.9 60.7 22.6 59.3 33.4 54.6 43.3 51.6 16.8 25.3 15.4 21.7 13.9 15 12.7 11.6 12.6 7.4 12.5 2.6h11.3l9.7-5.1 9.8-6.3 8.3-10.2 7.1-12.7 8.5-15 5.5-17.8 6.9-18.8 5.5-20.4 4.3-21.5 8.4-46.7 5.6-48 5.5-48.3 2.8-44.2 2.8-40.5 1.5-34.1v-38l-1.5-7.5-1.3-19.1-1.5-25.2v-60.7l1.5-26.6 1.3-18.8 1.5-6.5v-31.6l-1.5-25.2-1.3-26.6-1.5-25.3-1.3-25.4 1.3-26.6 1.5-27.8 1.3-26.6 1.5-26.4 22.3-89.8 23.8-89.8 22.3-87.4 25.3-83.3 14-40.5 13.9-39.3 15.4-38 15.5-36.6 17.9-34.1 18.3-33.1 19.5-30.2 21-29.1 22.3-25.4 23.8-23.9 26.6-20.2 26.6-17.8 30.9-15.2 30.7-11.4 34.9-7.5 36.3-5.1 37.7-1.4 42 3.9 43.3 6.4 46.2 11.4 50.3 15.2 51.7 20.2 56 24 58.7 30.5 37.7 7.5 33.7 8.8 15.3 3.9 13.9 6.1 11.3 5.2 11.2 7.5 9.7 7.8 8.5 8.7 6.9 11.4 5.6 11.4 4.2 13.9 4.1 15.2 1.5 16.5v18.9l2.9 7.5 1.2 19.1v26.6l1.5 30.2-1.5 31.7v26.6l-1.2 18.9-2.9 6.5-1.5 11.3-2.7 11.4-4.1 11.3-5.6 10.1-5.6 11.3-7.1 11.5-8.3 10.2-8.4 11.3-19.7 21.5-22.4 21.5-23.7 21.4-23.9 23-52.9 44.1-50.4 46.7-23.8 24.1-21 25.2-11.1 12.7-8.5 12.7-9.8 12.6-6.8 14v212.5l-1.5 40.5-2.9 40.6-5.4 39-5.6 39.2-8.5 36.7-4.2 16.5-5.6 16.5-6.8 15.2-7.1 13.7-6.9 11.4-8.5 11.6-9.7 8.8-9.9 8.8-11.1 5.2-12.7 3.6-12.4 2.5h-12.7l-15.4-2.5-15.4-5-16.8-7.7-18.2-10.1-19.5-13.9-19.5-15-21-19.1-22.4-22.7-11.1 17.7-8.5 16.3-7 14-5.5 13.9-4.3 15.3-2.7 15.2-2.9 16.3-2.7 20.3v164.3l1.4 21.7 1.3 21.4 1.5 22.7 1.4 21.5 7 40.5 8.4 36.7 11.1 33 12.6 31.6 14 27.8 16.7 25.3 16.8 22.8 19.6 18.8 18.1 16.5 21 14 21 11.3 21 7.7 21.1 5 21 2.6h22.3l21-2.6 19.5-5 19.5-9 19.5-10 16.9-14 16.8-16.5 13.9-18.8 13.9-21.5 11.5-24.1 9.6-26.6 7-29.1 4.1-31.5 1.5-34.3v-36.7l-4.3-39.2-6.9-41.6-9.8-44.4-2.8-50.6-2.8-46.8V54955.9l1.3-21.7 1.5-21.4 2.8-21.4 4.2-20.5 5.6-21.4 6.9-20.1 8.4-21.5 9.8-21.7 11.2-22.7 14-22.7 21-11.4 18.2-13.9 18.2-14 13.9-13.9 13.9-15.2 11.2-16.3 9.9-16.5 9.9-16.5 6.8-17.6 7.1-17.8 5.6-18.9 4.1-19.1 8.5-39.2 8.4-39 6.8-41.9 8.4-40.5 5.6-21.5 7-21.3 7.1-20.4 8.4-21.5 9.7-20.1 11.4-21.7 11-20.2 15.3-20.1 15.4-20.4 18.3-20.1 21-20.4 22.3-18.9 27.8-2.6 28.1-1.2h29.4l27.9-1.3 12.7-21.5 13.9-17.5 15.4-16.6 18.3-13.9 19.5-12.7 21-8.8 22.3-7.6 22.2-6.3 23.9-3.9 23.8-1.2h23.8l22.2 2.6 22.4 3.9 22.5 4.9 19.5 7.6 19.5 8.8 16.9 11.4 15.3 12.7 12.6 13.9 11.2 15.2 7 16.3 4.2 17.8 1.4 18.9-4.3 21.7-5.5 21.4-11.2 22.7-16.7 25.4-21 25.2-25.1 26.6-30.9 26.6-37.8 29.2-41.7 28.9-4.3 40.5-5.6 39.3-5.6 38-7 36.6-12.5 69.5-12.6 67.1-4.4 32.8-2.7 34.1-1.3 33.1v35.3l2.8 35.4 5.6 36.7 4.1 19 5.7 18.9 5.6 19.1 5.6 20.1 6.8 52 1.5 46.7-4.2 44.4-5.6 40.3-11.2 36.6-13.9 34.4-16.7 30.2-18.3 29.1-22.5 26.6-22.3 24.1-25 22.7-25.4 21.5-54.4 39.1-53.2 36.8-26.6 19.1-26.4 17.5-23.8 19.1-22.5 18.8-20.8 20.5-18.3 21.4-15.4 22.7-12.6 24-8.4 26.6-5.6 27.9-1.2 31.5 2.7 33.1 6.9 36.6 14.1 40.3 18.1 43.1 23.8 48.1 18.2-15.3 18.2-11.3 18.1-8.8 18.2-7.7 37.7-10.1 37.8-7.5 18.1-5.2 19.6-7.5 19.7-7.5 19.5-11.6 11.2-6.2 9.8-7.5 9.7-9 11.3-10.1 9.7-10.1 11.2-11.3 11.3-12.6 11.2-14 5.6-1.3h8.3l8.4 14 8.3 16.4 5.6 17.6 5.6 20.4 5.6 20.1 4.2 21.5 2.8 22.7 2.8 23 8.4 98.6 7.1 100 5.5 47.9 6.9 45.6 5.5 20.1 5.9 20.4 6.8 18.8 7.1 17.8 9.7 15.2 9.8 13.9 12.7 12.7 12.4 10.2 15.4 8.8 16.8 6.4 18.2 3.6 19.5 1.3 17-27.9 13.9-26.6 11.1-26.4 8.4-26.6 5.6-26.5 4.2-26.6 2.9-26.6v-27.9l-1.6-26.4-1.3-27.8-2.7-27.9-2.8-27.9-7.1-59.4-5.6-63.2V55659l2.8-31.5 2.8-32.9 1.5-35.6 1.3-37.9 1.5-79.5v-86l1.3-89.8 1.5-92.5 2.8-93.5 5.6-92.4 4-45.5 5.6-44.4 5.8-44.1 6.9-41.8 8.3-40.3 9.9-39.3 12.6-38 12.4-35.3 14-33.1 17-30.2 18-29.1 19.7-24.1 22.3-22.7 25.1-19.1 26.6-15.2 29.3-11.4 4.3-1.3 11.2-1 16.7-1.3h37.7l15.5 1.3 12.6 1 4.1 1.3 18.3 1.3 18.1 2.6 15.3 3.9 15.4 2.5 15.4 3.6 12.7 5.2 12.4 3.8 11.2 6.3 11.3 5.2 9.7 6.1 8.4 6.5 8.3 7.5 7.1 7.5 7 7.7 7 7.5 5.5 8.8 8.4 19.1 8.6 20.1 5.6 23 4 24 7.1 51.7 4.1 58.3 1.5 1.3 2.8 5v15.1l1.3 29.3v345.1H20393.3l-12.4 38.1-14.2 36.6-15.3 37.9-13.9 36.7-12.7 38-12.6 36.6-4 19.1-4.4 20.2-4.2 18.8-2.8 19.1V55550.2l-11.1 40.6-14 38-15.5 35.3-16.6 32.8-18.3 30.5-18 30.2-19.8 27.9-19.5 25.3-40.5 49.3-40.5 45.7-18.2 20.1-18.3 21.5-16.7 20.4-15.4 21.4-14 20.1-12.4 20.5-9.8 21.3-7.1 21.5-5.6 21.4-2.8 24.1 1.5 24.2 2.8 25.3 6.8 26.4 11.2 27.9 15.4 30.4 18.3 31.6 23.7 34 28 35.6 32.1 38 37.8 40.3-18.3 62-15.2 58.3-11.2 53-8.5 48.2-4.1 45.5-1.5 40.5 1.5 35.4 4.1 32.8 7 27.8 8.4 24.1 9.9 20.1 12.4 15.2 12.7 12.7 15.4 8.7 15.4 3.9 15.2 1.3 17-3.8 16.7-6.3 15.5-10 16.7-13.9 15.2-17.9 15.5-21.4 12.7-24 12.5-27.9 11.2-31.6 8.3-34.2 6.9-38 5.8-40.3 1.3-44.4v-48.1l-4.3-50.5-6.8-53.2-1.5-6.2-1.4-13.9v-19l-1.4-22.9 1.4-22.7v-20.1l1.4-14 1.5-5.2 6.8-46.7 11.3-69.5 15.3-83.6 16.9-87.3 9.7-42.9 9.9-40.5 9.9-37.9 9.6-32.9 11.2-29.1 9.8-21.5 5.6-8.7 5.6-6.4 4.2-5.2 5.6-1.1v-10.3l13.9-8.8 12.7-8.8 11.2-9 11.1-8.8 9.9-10 8.3-8.8 8.3-10.1 8.5-10.3 12.6-21.4 11.1-21.5 6.9-24 7.1-22.8 4.3-24.2 2.7-25.1 1.4-25.3v-26.5l-1.4-53.2-4.2-54.4v-97.4l-1.3-49.3 6.9-45.6 12.6-40.5 19.5-36.6 23.8-32.8 29.4-27.8 33.4-22.9 37.8-19 40.5-15.2 43.5-8.8 44.6-5.1h46.2l47.6 5.1 47.6 10 46.1 16.6 46.1 20.1 43.3 26.6 42 31.7 39 36.8 34.9 42.8 32.2 48 26.6 54.5 21 59.4 16.8 65.8 8.3 72 2.8 78.6-5.5 84.7-14 91.1-22.3 97.3-32.2 103.8-42 110-53.2 117.5-8.3 10.4-9.7 10-8.4 11.3-8.5 12.7-16.7 26.6-15.3 29-14.1 31.7-12.5 31.5-12.7 33-11 34.1-21 68.2-16.8 65.8-15.4 60.8-14 51.8-5.5 2.6-7.1 2.5-4.1 8.8-2.8 10.2-2.9 11.3-2.9 11.4-2.7 25.2-1.4 26.6v29.2l1.4 29.2 1.5 31.5 2.7 30.4 7.1 63.3 6.8 60.7 2.9 28.9 1.5 26.6 1.2 25.3v22.7l-6.8 62-5.6 55.8-2.8 49.3v45.5l2.8 40.5 2.8 36.6 6.9 31.8 8.3 29 9.8 25.2 12.7 21.5 12.4 19 15.5 16.6 18.2 15 18.3 12.6 19.5 11.4 21 10.3 46.1 18.8 50.4 17.8 26.3 8.8 28.1 11.4 28 11.3 29.3 12.7 29.3 15.3 29.5 16.4 30.6 19 30.9 22.7 30.6 25.2 30.9 28 30.7 32.8 32.1 35.6-8.3 21.4-11.2 18.9-12.6 17.8-14 17.6-15.4 15.1-18 15.3-18.2 14-19.5 12.6-4.3 46.7-4.3 44.4-5.6 42.9-6.8 41.8-5.6 20.2-5.6 20.3-7.1 20.2-9.8 18.9-9.7 19-12.7 17.6-13.9 17.8-16.7 17.8-85.3-22.9-81.1-29-79.8-35.4-75.4-40.5-74.2-45.4-70-50.6-68.4-55.8-67.1-58.1-64.3-63.3-62.9-65.8-60.2-68.2-60.1-71-58.6-73.3-57.3-74.6-57.5-75.9-55.8-77.2-111.8-154.2-110.5-153.1-57.2-75.9-56-73.3-57.5-72.1-58.5-69.6-58.7-66.9-61.7-63.3-61.5-60.7-64.3-57.1-65.6-51.8-68.6-48.1-70-42.9-72.6-37.9-12.6-19-11.2-19-11.2-21.6-8.3-21.4-7.1-22.7-6.9-24.1-7-24-5.6-24.1-9.9-49.3-8.3-47.9-9.7-48.3-11.4-45.5-6.9-3.8-5.5-2.4v-10.3l-77-12.7-79.5-16.3-39.3-8.8-39.2-10.3-40.5-10-39-11.4-39.3-11.3-40.5-12.7-39.1-13.9-37.7-15.2-39.2-15.1-37.8-15.2-37.8-17.8-36.4-17.5-34.9-19.1-34.9-18.9-35-21.7-32.2-21.4-32.1-22.7-32.2-22.8-29.2-25.3-28-25.3-26.6-26.6-26.6-27.8-23.6-29-22.5-30.4-21-31.7-18.1-31.6-16.9-34.1-15.3-34.1-28-12.7-26.6-12.6-26.4-12.6-26.6-11.6-28.1-1.1h-26.6l-26.6-1.3h-26.3l-35-14-34.9-16.4-33.7-21.5-33.4-24-32.2-27.9-30.8-30.4-29.5-34.1-29.3-35.4-27.9-38-26.6-39.2-25.1-41.6-23.8-43.1-21-44.1-21-45.7-18.2-46.8-15.3-45.4-13.9-47-12.7-46.7-9.8-46.8-6.9-46.7-5.6-45.7-1.4-44.2v-43.1l2.7-41.6 7.1-40.5 8.3-38 12.7-35.4 15.3-34.2 18.1-30.3 22.4-29.2 26.6-24 29.3-21.4 1.5-54.5 2.8-64.5 1.3-34.1v-72l-1.3-36.8-2.8-35.3-4.2-34.3-2.9-16.3-4.2-16.5-4.1-16.5-4.3-15.1-5.6-13.9-6.9-13.9-7-14-7.1-11.3-9.6-11.4-9.9-11.4-9.6-8.9-11.4-7.5-12.5 32.7-9.8 33-8.3 31.6-5.6 31.8-5.6 30.1-2.8 30.5-4.3 29-1.3 30.4-4.3 59.4-5.6 59.6-2.7 31.5-5.6 30.5-5.6 32.7-7.1 32.9-8.3 2.5-7.1 2.6-8.3 2.6-8.5 1.3-16.7 1.1-18.2-1.1-34.9-5.1-35-5.1-29.4-91-27.9-87.2-25-83.7-23.8-80.8-9.9-39.3-8.4-38-7.1-36.6-5.5-35.4-4.1-34-1.5-33.1v-31.5l1.5-30.5 4.1-27.9 7-27.6 9.9-25.3 11.2-24 15.2-23 18.3-21.4 19.5-18.9 25.2-17.8 26.6-15.3 30.7-13.9 35-11.3 39.2-8.8 41.8-7.5 47.6-6.4 50.4-2.6 55.8-1.3zm-5642.8-172v-1.3l-2.7-1-5.6-1.4h-11.2l-44.7-1.2h-50.3m5029.1 341.4V53383.7l-1.6 4.9-1.3 13.9-1.4 19.1v42.9l1.4 19.1 1.3 13.9 1.6 5zm5.5-118.8-1.5 45.4-1.3 44.4-1.4 45.4-1.3 45.6 1.3 79.7 4.2 80.9 4.1 79.7 4.3 81 2.8 80.9 1.2 79.7-1.2 40.4v40.6l-2.8 39.1-4.3 40.5-19.5 11.4-16.7 12.7-14.2 11.3-12.4 12.7-12.7 12.7-11.1 13.9-11.2 16.5-14 18.9h-107.6l-11.3-14-11.2-13.9-12.4-12.6-12.7-12.7-25.2-21.5-26.4-21.4-28.1-17.7-29.4-17.6-29.4-17.8-27.8-16.6-29.5-17.5-29.3-17.9-29.4-18.8-26.5-21.7-14-11.4-14-12.6-12.6-12.6-12.4-14-12.7-13.8-12.6-15.1-11.2-16.6-11.1-16.4h-11.2l-5.6-8.8-7.1-6.3-5.6-6.4-7-5.1-6.9-3.7-7.1-3.9-8.3-3.8-9.8-3.7v-15.2l21-10 18.1-10.2 16.8-10.3 15.4-11.3 15.4-11.4 12.5-11.3 11.2-12.6 9.8-14 9.9-12.6 8.4-15.3 6.8-15 8.6-15.2 11.1-34.1 11.2-38h11.1l13.9-30.4 11.2-30.2 7.1-29.2 4.3-27.9 1.3-26.6-1.3-26.6-5.6-25.2-7-22.8-8.4-22.8-12.6-20.1-14-20.4-15.5-16.3-16.7-16.4-19.5-14-21-11.4-21-10-23.8-7.8-23.8-6.2-25.1-3.8h-25.1l-26.6 1.2-26.6 3.9-28.1 7.5-26.3 8.8-28.1 12.7-26.6 15.2-26.6 19-26.4 21.5-25.3 25.3-25 27.9-23.9 31.5-22.2 35.4-21.1 9-19.5 6.2-19.7 3.8h-19.5l-21-2.5-19.6-5.1-18.2-7.5-19.5-8.8-19.6-11.4-18.1-14-19.5-15.2-18.3-16.5-16.7-17.6-18.2-20.3-16.8-20.2-16.9-20.2-15.2-22.9-15.5-21.4-15.4-24.1-13.9-22.7-27.9-45.4-23.8-45.7-21.1-42.9-18.1-40.5-15.5-34.2-11.1-29.1h-11.2l-15.4-16.5-15.3-15-16.9-15.3-15.2-13.9-15.5-11.3-16.7-11.4-15.4-11.3-15.5-9-13.9-7.6-15.4-7.5-14-5.1-13.9-3.9-13.9-3.7-12.7-1.2h-11.2l-11.1 1.2-11.1 2.4-10 3.9-8.3 6.4-8.3 6.3-7.1 8.8-5.6 10.2-5.6 11.3-2.7 14-2.9 15-1.5 16.6 1.5 17.8 1.4 20.1 2.7 22.7 5.8 24.1 5.6 25.2 8.4 27.9v44.2l1.2 44.3v44.2l1.5 44.4 2.9 25.4 4 28.8 2.8 30.5 1.5 30.3v30.4l-1.5 15.2-2.8 14-4 12.6-5.6 12.7-7.1 11.3-8.3 11.4-32.2-5.1-30.7-7.6-29.4-8.7-29.4-11.6-28.1-13.7-26.6-15.3-26.4-16.5-26.6-18.9-23.7-20.3-25.1-22.7-22.5-22.8-22.3-25.2-21.1-25.4-21-26.6-19.5-27.8-19.5-29-18.2-30.4-16.7-29.2-16.9-31.5-16.8-30.5-13.9-31.5-14-31.5-13.9-33-12.7-31.5-22.2-63.4-19.8-63.2-15.2-60.6-14.1-57.1-9.7-6.2-7.1-6.5-5.6-7.5-5.6-7.6-7.1-16.4-6.8-20.3-8.3-3.6-7.1-5.2-4.1-6.2-4.3-7.8-5.5-16.2-2.8-16.6 34.9 6.3 86.7 17.7 125.8 26.6 146.9 30.3 155 31.7 146.9 29.2 64.4 11.3 57.2 11.4 47.6 7.5 36.3 3.8h88.1l16.7 19 21 17.8 21 16.4 23.8 15.1 25.1 12.6 25.1 12.6 28.1 11.4 29.4 10.3 29.3 10 30.7 7.6 32.2 7.7 32.1 6.2 33.7 6.5 33.4 4.9 35 3.9 33.7 3.8 71.1 6.2 71.5 3.9 69.9 2.3 69.9 1.4h67.1l64.3 1.2 61.3 1.3 57.5 1.4h96.5l33.4 7.4 37.8 10.3 39.2 11.4 41.9 12.6 42 15.2 40.5 17.6 21 8.8 19.5 10.3 19.5 10.1 18.3 11.3 18.2 11.4 16.7 12.7 15.4 12.6 14 12.6 13.9 15.3 11.2 14 11.4 14.9 8.3 16.6 6.9 16.5 5.6 16.2 2.7 19.2 1.5 17.6-1.5 20.3-2.7 20.2-6.9 20.3-8.4 21.5zm-6863.5 260.5h148.4l28-5.2 27.8-1.2h28.1l29.4 1.2H10766.1l21 1.3h21l22.3-1.3 23.8-4.9 22.3-5.1 23.8-7.5 25.1-7.7 23.8-10.2 96.5-42.8 93.7-43.1 22.2-8.8 22.4-7.8 21-6.1 19.5-5.2 19.8-2.4 18.1-1.2 18.1 1.2 15.4 3.7 15.5 6.4 13.9 8.8 12.7 12.6 11.1 15.3 9.7 18.9 8.5 22.7 6.9 26.6 5.6 30.5-29.4 58.1-30.7 50.5-33.6 46.8-35 40.6-37.7 35.3-39.1 31.8-40.5 26.6-43.3 21.3-43.6 17.6-44.5 14-47.6 10.3-47.6 6.2-49 2.6h-48.8l-50.4-2.6-50.2-6.2-51.9-7.7-51.6-10.1-53.2-12.7-51.7-15.1-53.2-16.4-51.6-17.8-53.2-19-51.7-20.2-51.7-20.1-50.4-21.7-50.4-22.7-50.1-22.8-95.2-44.1-92.3-43.2v-8.8l1.3-7.7 29.4-11.3 19.7-7.6 20.9-5.1 32-7.5zm1252.8 772.8-41.9-21.4-30.8-22.8-20.8-26.5-11.4-29.2-2.7-30.5 5.5-32.8 14.1-34.1 19.5-35.4 28-36.6 32.1-37.9 39.2-38 41.8-39.3 47.6-39.2 50.5-39.2 54.4-39.3 56-39.3 57.3-39 58.7-37.9 60.2-36.9 58.6-36.6 117.5-67 109.2-60.6 96.4-53.2 81.1-41.8 58.8-30.2 33.4-16.6 67.1 2.6 53.2 8.8 40.5 12.6 27.9 17.8 15.4 21.4 5.6 25.4-5.6 29.1-15.4 32.9-23.8 35.4-30.7 36.6-39.2 40.5-46.1 40.5-50.2 43-56 44.4-60.2 44.1-62.9 45.5-65.8 44.4-67 45.4-68.5 43.1-68.4 42.9-68.6 41.8-67.1 40.6-64.4 36.6-62.8 35.4-112 62-90.8 46.7-36.3 17.8-28.1 13.9-20.8 7.5-11.3 2.6zm522.9 198.6-34.9-21.5-19.5-27.8-5.6-31.5 8.4-38.1 21-40.5 32-45.6 43.5-48.1 53-50.6 61.5-52.9 69.9-54.5 77-54.4 83.8-55.6 88.1-55.7 92.2-54.3 96.5-54.5 97.8-51.8 99.3-49.3 100.8-48.1 99.2-43.1 99.3-40.3 96.5-35.6 92.2-30.3 89.5-25.2 83.8-19.1 78.5-12.4 71.2-5.2 62.8 1.3 54.7 11.3 44.5 17.6 35.1 29.2 22.5 36.6 11.1 48.1-18.2 10.3-48.9 24-74.2 35.3-97.8 45.6-117.4 54.4-132.8 60.6-142.6 65.9-151 70.8-154 72-153.7 72-148.2 72.3-141.1 69.5-127.3 64.6-111.7 59.4-49.1 26.5-41.9 25.3-37.7 21.4-29.4 20.5-18.2 7.5-15.5 6.2-15.2 5.1-14.1 3.9-13.9 3.6-15.2 1.3-17 2.6-19.6 1.3zm4241.9 179.6v1.1l-1.5 1.3h-5.5l-8.5 1.3h-34.9l-68.4 1.3-13.9 1.3-11.4 2.5-9.6 2.7-9.9 3.6-19.5 9-21.1 11.3-1.5 1.3-1.2 1.4-7.1 1h-12.4l-53.2 1.2h-100.8l-95 9.1-92.2 8.8-88.1 8.7-88.2 10.1-85.1 11.4-82.6 11.6-81 12.6-79.8 12.7-78.2 13.7-77 13.9-75.5 16.5-74 16.6-74.2 16.3-71.2 19.1-72.6 18.8-71.4 19.1-71.4 21.4-71.2 21.5-70 24-71.3 24.1-71.3 24.2-71.3 26.3-72.7 27.9-72.7 27.8-72.7 29.2-75.5 31.6-75.4 31.7-77.1 32.8-157.8 70.7-163.5 74.7-47.6 15.2-41.9 14-39.3 8.8-33.4 7.6-29.4 4.9-26.6 2.7-22.5-1.3-18-1.4-14.1-4.9-12.5-5.1-8.3-8.8-5.6-9-1.5-11.3v-11.4l2.7-14 4.4-13.7 8.3-15.2 8.4-16.5 12.6-16.5 12.5-16.4 15.4-17.8 16.8-16.4 16.7-17.6 19.7-17.8 19.5-16.3 21-16.6 22.4-16.4 22.2-15.3 22.5-13.7 23.9-13.9 22.2-12.7 23.9-10.3 89.4-28.9 100.5-29.2 52-16.5 50.1-16.2 25.3-10.2 23.8-9 23.8-10 23.6-10.1 22.5-11.4 20.8-12.7 19.8-11.3 18.2-13.9 17.9-13.9 15.6-15.3 13.9-15.2 12.6-16.3 9.9-17.8 8.3-17.6 5.6-20.3 4.1-20.2 1.5-21.5-1.5-22.9-4.1-24-7.1-26.6-22.2 1.2-28.1 2.7-35.1 6.4-40.5 8.8-44.5 10-49.2 12.7-51.6 13.9-56 16.5-117.3 34.2-123 35.4-123.2 36.6-116 33-55.9 15.1-51.7 13.9-48.9 12.6-44.8 10.1-39.1 7.8-33.6 4.9-27.9 2.5h-21l-13.9-4.9-5.6-7.8 2.8-11.3 11.1-15.2 21-20.2 32.2-25.3 43.4-30.4 54.4-35.4 60.1-24.1 103.5-40.5 141.1-51.7 172-63.2 197.3-71 215.3-75.9 227.9-78.2 234.8-78.6 117.5-39.1 117.3-36.8 114.7-36.6 113.2-35.4 110.5-32.8 106.3-30.4 102.1-27.9 96.4-25.3 90.8-22.7 84-17.9 75.5-14.9 67.1-11.4 58.5-6.4 49.1-1.4 37.8 3.9 25.1 8.8 18.2 19.1 13.9 17.5 9.9 16.6 8.4 15.2 4.1 14 2.7 13.7v12.7l-2.7 12.5-4.1 11.7-7.1 11.3-8.4 10.1-9.9 10.1-9.6 8.8-12.6 10-12.7 9-13.9 8.8-29.4 17.8-30.7 17.6-29.3 20.4-27.9 20.1-12.6 11.4-11.2 11.3-11.3 12.7-8.5 12.7-6.8 13.9-5.6 15.3-2.8 15.2-1.4 17.6 18.1 5.1 22.4 3.7H15330.8l32.2-2.4 34.9-5.2 37.8-5.1 39.2-6.2 83.9-15.3 89.4-17.6 90.9-17.8 92.2-15.1 46.1-7.6 44.8-5.1 44.9-4.9 41.8-3.9 40.5-1.3h39.3l37.6 2.6 35 3.8 30.7 7.6 29.3 8.8 25.3 12.6 22.4 15.2 18.2 18.9 13.9 21.6 9.9 26.6 4 29-9.6 31.8-11.4 26.5-9.6 22.8-11.2 20.1-11.3 16.5-12.4 13.9-12.7 12.7-13.9 10.1-16.8 8.7-18.2 6.5-21 6.2-22.3 6.4-54.7 11.4-68.4 13.9zm-3835 189.6-15.3-6.2-14.2-7.7-13.9-8.8-12.4-8.8-11.4-10.1-11.1-10.1-9.6-12.6-8.7-12.7-1.3-34.3 12.7-38 27.9-41.5 40.5-44.4 51.7-48.1 63-50.5 72.7-53.2 82.3-54.3 91-54.4 97.9-56.9 104.9-55.8 108.9-56.7 114.8-55.8 118.8-54.2 120.3-54.5 123.1-51.9 124.4-49.3 124.3-46.7 123-44.4 121.6-40.3 118.8-36.8 114.8-33 110.4-27.8 104.8-22.7 99.4-16.4 92.2-11.5 82.5-5 75.5 2.6 64.3 8.8 53.2 17.8 41.8 25.3 29.4 32.8-2.8 21.5-9.7 20.3-16.9 21.5-20.8 18.8-26.6 20.4-32.1 18.9-35 19-40.5 19-44.9 17.8-47.6 17.5-50.2 17.8-53.1 16.5-54.5 17.6-57.4 15.3-58.8 16.4-60.1 15.1-121.5 30.3-120.3 28-118.8 26.6-111.9 25.2-102.1 24.1-90.7 21.4-40.8 10.1-34.9 10.1-30.6 10-26.6 9-60.1 34.2-65.8 39.2-69.9 44.2-74 49.3-77 50.6-79.8 51.9-81 53.2-81.1 51.8-82.5 50.6-82.3 48.1-40.5 22.7-40.6 21.4-40.5 20.5-39.3 18.8-39.2 16.6-39.1 16.2-37.7 13.9-36.5 11.4-36.1 10.3-35 7.5-33.6 5.2-32.2 2.3zm4599.6 31.8h43.6l39 1.2h9.9l4.1 1.3 1.5 1.4 1.2 1 23.9 6.4 19.7 6.3 15.2 7.6 11.2 8.8 7.1 8.8 2.7 9-1.5 8.8-4.1 10.1-7.1 10.1-9.6 10.3-12.6 11.4-14 10-34.9 22.7-40.6 22.8-89.6 46.8-83.8 45.6-19.5 11.3-16.8 11.4-15.4 10.1-12.7 10.1-9.6 10.3-8.4 10.1-5.7 8.8-1.4 8.7 16.8 19.1 15.4 18.9 11.2 17.8 11.2 17.5 8.3 19.2 8.3 18.8 8.6 21.7 6.8 24 47.6-1.3 46.2-3.8 46.1-6.3 46.1-6.4 95.2-1.3h61.5l5.6 1.3 2.8 1.3v1.3l29.4 2.5 27.8 4.9 25.2 3.9 22.4 5.2 21.1 6.2 18 5.2 16.9 7.5 15.3 6.4 12.6 7.5 12.6 8.8 9.7 9 7.1 10.1 6.8 10 5.9 10.2 4 11.3 2.8 11.4 1.5 12.6v27.9l-2.8 15.2-5.5 31.5-8.6 34.4-25.1 78.2-29.5 91.2 49 25.2 40.5 22.8 32.2 20.1 26.5 16.6 22.6 13.9 20.8 11.3 8.5 3.9 9.7 3.6 9.9 3.9 9.6 2.6 9.9 1.3 9.8 1.2h25.1l29.4-2.5 35-5.2 97.7-16.2 139.8-25.4h341.2l21 6.3 35 10.1 44.8 12.6 53.2 16.5 58.5 17.8 58.7 20.2 57.5 21.4 53 22.7 23.8 11.6 22.5 11.4 18 11.3 16.8 11.4 12.5 11.3 8.5 11.4 4.2 10.1v11.4l-4.2 10-11.2 9-15.4 8.8-22.4 8.8-27.8 9-35 6.2-43.3 7.8-50.4 4.9v7.5H17470v-7.5l-26.6-2.5-26.6-2.4-26.6-2.6-25.1-2.6-26.6-2.6-26.5-2.5-26.6-2.4-25.1-2.5H16873l-9.8 8.8-8.4 6.4-12.7 6.2-19.5 8.8-4.3 1.3-1.3 1.2-30.9 1.3h-29.1l-29.3 1.4h-31l-29.3 1.2h-29.5l-30.6 1.3h-29.4l-11.1 4.9-11.2 3.9-12.6 5.1-9.9 5h-153.7l-61.5 6.4-61.6 7.6-58.7 8.7-60.1 10.3-117.5 21.5-114.5 25.2-116 25.4-114.7 25.3-58.8 12.6-58.7 11.4-58.8 10-60 10.2-4.3 10-8.4 9-11.1 10.1-14 8.8-15.4 10-19.5 9-21.1 8.8-23.7 10.2-51.7 17.7-58.8 18.9-62.8 19.1-65.8 18.8-67.2 20.2-66.9 21.7-65.8 21.4-62.8 22.8-29.3 12.5-28.1 12.7-28 12.7-25 12.7-22.6 13.9-21 13.9-19.5 13.9-16.7 15.3-40.5 30.2-39.3 26.6-39 25.3-37.8 22.7-37.7 21.5-36.4 17.8-35 15.2-32.1 13.9-32.2 10.1-29.4 8.8-27.9 6.4-26.6 3.7-23.7 1.2-21-1.2-19.5-3.7-15.6-6.4-13.9-8.8-11.1-11.4-7-13.9-4.1-16.5-1.5-18.9 2.7-21.7 5.6-23.9 9.9-27.7 14-29.2 18.1-31.5 21-35.6 26.6-36.6 30.7-40.3 36.4-41.9 40.6-45.5 44.6-48.1 11.4-22.9 13.9-28.8 15.2-34.4 15.4-35.4 5.6-18.8 4.3-17.8 4-17.8 1.6-16.4v-15.1l-2.8-14-2.8-6.2-2.8-6.4-4.2-4.9-4.1-5.2-79.8-1.2h-40.6l-9.8-1.4h-4.1l-2.7-1.3v-1.2l-14-6.3-12.6-7.7-9.9-8.7-11.1-11.5-47.6 15.2-64.4 22.9-75.5 26.5-82.3 26.5-43.3 11.5-42 10-40.6 8.8-39.2 6.5-19.5 1.3-18.3 1.2h-17.9l-17-1.2-15.2-1.3-15.4-2.6-14-3.9-14.1-4.9-8.5-3.9-5.5-3.8-5.5-3.6-4.1-5.3-8.6-10-9.7-12.7v-17.8l4.1-17.6 5.6-16.4 7.1-15.3 8.3-13.9 11.2-13.7 11.1-12.7 14.1-12.7 15.3-10.2 15.4-11.4 18.3-8.7 18.1-8.8 19.6-9 19.5-7.6 21-7.5 21-6.4 43.4-12.7 44.8-10 44.5-8.8 43.4-7.8 81.3-12.6 66.9-12.7 4.2-41.6 4.3-43.1 1.3-20.1 1.5-21.7v-41.5l-1.5-20.5-4.1-18.8-4.2-20.2-7.1-19.1-8.3-20.1-11.2-17.8-12.7-18.9-15.2-17.8-21 6.5-22.4 6.1-23.7 8.8-26.6 10.3-54.5 22.8-60.2 26.6-62.9 26.4-65.8 27.9-67.1 27.8-65.6 24-33.7 11.4-32.2 10-31.9 9.1-30.9 7.5-30.7 6.2-29.3 3.8-29.4 2.7h-26.5l-26.6-1.4-23.9-3.8-22.3-7.5-21-8.8-18.2-12.7-16.8-15.2-15.4-17.8-12.5-21.4 4.2-26.6 12.6-26.6 19.5-27.6 25.3-26.6 33.4-27.9 39.3-26.6 44.6-26.6 48.9-26.6 54.7-26.6 58.7-26.3 61.3-25.4 65.9-25.3 68.4-25.3 69.9-24 72.7-23 74.1-22.7 75.6-22.7 75.5-21.5 75.4-20.3 75.5-18.8 74.2-17.8 72.7-17.6 71.2-16.6 69.9-13.9 65.8-13.9 64.3-11.4 58.8-11.3 55.7-8.8 51.9-7.6 46.1-6.4 40.6-5.2 34.9-2.3v-1.3l1.3-1.3h4.3l8.3-1.3h32.2l61.5-1.2 103.6-17.8 103.4-17.6 103.5-19.1 103.4-17.6 104.8-19.1 103.4-17.6 104.8-19.1 105.2-17.5 104.8-17.8 104.9-17.6 104.8-16.6 104.9-16.4 103.3-16.6 104.9-14.9 103.5-14 102.2-12.6h31.8l32.2 1.2 33.7 1.3 33.4 2.4m-12.4 1215.6h381.7l-16.9-1.3-43.4-1.3-60-1.3h-139.9l-61.5 1.3-43.3 1.3-16.7 1.3zm335.6 339 6.8-1.3 19.5-1.3 26.6-1.3h60.3l26.6 1.3 18 1.3 7.1 1.3 16.7 1.2 16.8 1.4h92.3l70 1h82.3l19.7 1.3h11.2l2.8 1.4 1.2 1.2 12.7 2.5 15.4 2.7h355.1l89.4-1.3h179.1l89.4-1.4H18655.5l50.5 1.4 48.8 1.3h50.2l29.4-3.9 29.3-1.3h31l29.3 1.3 29.3 3.9 29.5 4.9 29.1 6.4 29.4 7.5 28.1 7.7 26.6 10.1 26.6 11.4 25 11.3 23.9 12.7 21 12.7 20.8 13.9 18.2 15.2 16.7 15 14.1 14 12.5 16.5 9.9 15.2 6.9 15.2 4.2 15 1.6 15.2-1.6 15.3-5.5 13.9-8.4 14-11.1 13.9-15.5 12.7-19.5 12.6-23.8 10.1-28.1 10-32.2 8.8-5.6 2.6-13.9 1.3H19046.8l-13.9-1.3-5.5-2.6-29.4-6.2-29.4-3.8-27.8-2.6h-28l-28.1 2.6-27.8 3.8-25.4 6.2-26.5 6.5-23.6 8.8-23.8 10.1-22.5 11.3-19.5 12.6-19.5 14-18.2 13.9-16.8 15.3-13.9 16.3-12.7 16.4-11.2 17.8-8.3 16.4-5.6 17.8-4.2 17.8-1.4 17.6 1.4 17.8 4.2 17.5 5.6 16.5 9.7 16.5 12.7 16.4 15.4 15.1 19.5 14 21 12.6 26.6 12.7 29.3 11.3 75.5 1.4h37.8l9.6 1.2h5.8l1.2 1.3v1.4h60.1l28.2-2.7 27.8-2.6 26.6-3.8 26.6-5 26.6-5.1 25-6.2 51.7-15.2 52-16.5 52.9-18.9 54.7-19.1 9.6-2.5h28.1l37.8-1.2h88.1l37.8 1.2h26.5l11.1 2.5 22.4 3.9 22.3 5.1 22.5 6.3 22.3 6.4 22.3 7.5 21 7.5 21 9 19.5 8.8 19.5 8.8 18.3 10.1 16.7 10.2 15.4 10.1 15.5 11.4 12.6 10.1 11.1 11.4 8.4 11.3 6.9 10.1 5.8 11.3 2.8 10.3 1.3 11.4-1.3 10.1-4.3 10-7.1 8.8-9.6 10.4-12.7 8.8-15.5 7.4-19.4 7.8-22.4 7.5-25.2 6.4-29.2 4.9-33.7 5.1-36.4 3.7h-53l-26.6 1.3H19483.2l-26.6 1.3h-26.6l-33.6 5.1-33.5 6.2-32.1 6.5-32.2 6.2-32.1 7.7-30.7 10.1-30.9 10-32.2 12.7-2.7 32.9-1.4 30.3 2.9 29.3 5.6 25.3 8.3 24 11.2 21.4 12.6 18.9 15.5 19 16.6 15.3 19.6 13.9 22.3 12.7 22.5 11.3 25.1 8.8 25 8.8 28.1 6.5 28 6.2 28.1 3.9 30.6 3.8 30.7 2.3 30.8 1.4 62.9 1.2 63-1.2 120.1-7.5 106.4-7.6H20073.1l35 7.6 36.4 10 35 11.4 35 12.7 30.6 13.9 29.4 15.2 12.7 7.5 12.4 7.7 9.8 8.8 9.9 7.5 6.9 9 7.1 8.8 4.2 10.1 2.9 8.7 1.2 9.1v10.1l-2.8 10.1-5.5 10-7.1 10.1-9.7 10.3-12.7 10.1-13.9 10-18.2 10.1-19.5 11.4-22.6 10-26.3 11.7v7.5h-154v-7.5l-47.4-10.3-47.6-7.5-47.6-8.8-47.4-7.8-47.6-6.2-47.6-6.4-47.3-6.2-47.6-6.4-33.7-1.4h-32.2l-32.2-1h-33.4l-43.3 1-44.9 1.4-43.2 1.2-43.4 1.3H19259.6l-72.9-2.5-74-2.4-72.7-1.3-74.2-1.3-72.6 1.3-72.7 2.3-36.3 2.6-36.4 2.6-36.3 3.8-36.5 5V58035.7h-443.2l-36.2-1.3h-18.2l-7.1-1.3-1.3-2.5h-44.8l-43.3 1.2-43.4 2.6-42 3.7-83.8 11.5-82.6 12.7-82.3 12.7-83.8 11.3-43.6 3.6-43.3 3.9-43.3 1.3h-69.9l-25.1 1.3h-23.8l-23.8 1.3-25.1 1.2-26.6 1.3-25 2.4-23.9 2.6-49.1 6.4-47.3 8.8-46.2 10.1-44.8 12.6-44.8 12.7-44.6 12.7-88.1 29.1-89.4 29-46.3 13.9-46.2 12.7-47.3 11.3-49.1 10.1h-131.3l-43.5 5.2-46.1 5.1-47.4 6.2-47.6 7.7-50.4 8.8-48.9 8.8-50.4 11.4-48.9 12.6-48.8 12.6-47.6 15.3-46.2 16.5-43.3 18.9-21 8.8-21 10.3-19.6 11.3-19.5 10.1-18.1 12.6-16.8 11.4-16.9 12.7-16.8 12.7-26.6-2.7-27.8-1.2-26.6-2.6-26.6-1.1-8.4 20.1-13.9 17.6-16.8 17.8-21 15.3-23.7 13.9-26.6 12.7-29.4 11.3-30.6 10.1-32.2 7.5-32.2 7.7-33.7 4.9-33.4 5.2-32.1 2.6-32.2 1.3h-30.9l-29.2-1.3-26.6-1.3-25.3-3.8-21-5-18-6.4-14-7.6-9.8-9-4.3-10v-11.3l5.6-11.5 12.6-13.9 18.3-15.2 25-15 32.2-17.8 42-17.8 49-18.9 57.2-21.4 43.3-7.8 40.8-11.3 36.2-13.9 32.2-15.1 27.8-16.4 23.9-17.8 21-20.2 16.7-20.1 13.9-21.7 9.9-22.7 7.1-21.5 4-22.7v-23l-2.8-22.7-4.1-21.4-8.3-21.5-12.7-21.7-12.6-18.8-16.7-17.8-19.5-16.3-21-15.2-23.9-12.7-26.6-11.4-27.8-7.4-29.4-6.5-32.2-2.6h-34.9l-34.9 2.6-37.8 7.5-39.3 10.3-40.5 13.7-41.8 19.1-28.1 21.5-27.8 17.7-26.6 16.3-25.1 11.7-25.4 10-23.7 7.5-22.4 5.2-22.2 2.5h-19.8l-19.5-1.3-18.2-3.8-16.7-5.2-15.4-7.5-14-8.8-12.4-9-11.4-11.3-9.6-12.7-8.5-13.9-5.5-13.7-4.3-15.3-2.8-15.2-1.5-15.2 1.5-16.3 2.8-16.6 5.6-16.4 7.1-16.5 9.6-16.4 11.2-15.2 14.1-16.5 16.7-13.9 18.3-13.7 20.7-14h107.9l32-20.4 28-21.4 23.9-22.8 18-25.2 14.2-26.6 9.6-26.6 7.1-27.8 2.7-27.8v-27.8l-4.2-27.9-6.9-27.8-9.9-26.6-12.6-26.4-14-25.3-16.7-24.2-18.2-22.8-19.6-21.4-22.2-17.8-22.5-17.6-25.1-13.9-23.9-11.4-25-8.8-26.6-5.2-26.6-1.2-25.1 1.2-26.6 5.2-25.3 10-25 14-23.9 18.9-22.2 22.7-21 29.1-21.1 34.1-23.8 10.1-26.4 11.6-26.6 11.3-29.3 10.2-28.1 10-29.4 6.4-14 1.2-13.9 1.2h-13.9l-12.7-1.2-11.2-36.8-2.7-36.6 5.6-35.4 12.7-35.4 17.9-34 25.3-33.1 32.2-32.8 36.2-31.5 42.1-31.7 46-30.5 50.5-29 53.2-29.1 57.2-27.9 60-27.7 63.1-26.5 64.3-25.3 65.6-25.3 67.1-24 68.4-22.7 68.6-23 134.3-41.6 130-39.3 123-35.3 111.9-31.8 96.6-27.7 78.2-25.2 32.2 1h32.1l32.2 1.3 33.5 1.3 23.7-1.3 23.9-1.3h25.1l23.7-1 62.8-12.7 61.6-12.6 61.6-12.7 61.5-12.7 60-12.6 61.6-11.3 60.2-12.7 60.1-12.7 60-11.5 61.6-12.7 60.2-11.4 61.3-11.3 61.6-11.4 63-10.1 62.9-11.4 63-10zm1398.1 10v5.2h48.8l50.5-1.3 48.8-1.2m3920.3 10v-7.5h65.7l33.5 1.1h8.4l4.2 1.3 1.3 1.2V56598.8h-113.1zm5.5 0h26.5l26.6-1.3h26.6l27.9-1.2m-4718.5-7.5 89.4 1.2h179.1l89.4 1.3h179.1m4275.2 684.3 1.6-23 1.2-22.7 1.5-22.8 1.3-21.4v51.9l-1.3 26.6v6.2l-1.5 3.8-1.2 1.4h-1.6zm-1093.3 48-20.8-2.6-22.6-2.6-21-2.5-20.8-2.4-9.8-21.7-7.1-28.9-4.1-34.3-1.5-40.3 1.5-44.4 4.1-49.3 7.1-53.2 8.3-55.5 11.2-58.1 13.9-61 15.5-62 16.7-63.2 18.2-64.3 21-63.2 21-62 22.4-62 25.2-59.6 23.6-56.8 26.6-53.2 26.6-50.6 26.6-46.8 27.9-41.7 28-36.7 27.9-30.2 29.4-24.1 28.1-17.8 27.9-10.1 26.6-1.2 27.8 6.4 26.6 15 25.1 25.3 25.4 36.7 6.8 39.2 5.6 41.9 1.5 22.7 1.5 21.4v22.7l-1.5 23-1.5 22.7-2.8 21.5-4.1 21.4-5.5 21.6-7.1 20.2-8.4 19.1-8.4 18.8-11.2 17.8-30.8 21.5-26.6 22.7-25.1 25.3-21 26.6-18 27.9-16.9 29-14 30.3-11.1 31.6-9.9 31.7-9.7 32.9-7 32.9-7.1 34.2-9.6 66.9-8.4 67.1-9.9 64.5-11.1 62-7.1 29.2-8.4 27.6-9.7 26.6-11.3 25.3-12.4 24-15.4 21.5-16.8 20.3-21 17.6-22.3 15.3-25.3 12.6-29.3 10.1-32.2 7.7zm578.9-63.3 1.3-2.5h1.5l2.8-13.9 2.8-12.7 1.2-29v-30.4l1.6-29.2v-29l5.5-33 7.1-34.1 9.7-36.6 9.8-36.7 12.4-36.6 12.7-38 16.8-37.9 16.9-36.7 19.5-35.4 21-34.3 11.2-16.3 11.1-16.5 12.6-15.3 12.5-14.9 12.7-14 13.9-13.9 13.9-12.7 14.2-11.4 15.3-11.3 15.4-10.3 15.4-10.1 16.8-8.8m113.1 0 19.7 8.8 20.9 9 18.2 10.1 18.2 11.4 18.3 12.6 15.2 14 14.1 14.9 12.5 17.8v145.5l1.5 36.6v73.5l1.2 36.8-5.6 23.9-5.5 25.4-4.1 23.9-5.8 24.1-4.1 24-5.5 25.3-4.3 24-5.6 25.3m-5.6 89.9-11.1 72-18.2 111.3-12.7 64.5-12.5 69.5-15.4 72.1-16.7 71-16.7 70.7-19.8 67.1-9.6 31.5-11.1 31.8-11.4 27.6-9.6 26.6-12.7 25.3-11.2 22.8-11.1 19-12.6 17.6-12.7 13.9-12.5 10.3-12.6 7.5-13.9 2.7v40.3l-1.5 40.5v121.3l-1.3 40.5v81.1l-4.3 34.1-8.4 32.8-9.9 30.5-12.4 29.2-14 26.3-15.4 26.6-18.2 26.6-18.2 24-39 46.7-42 47-41.9 45.5-39.2 46.8-18.2 23.9-18.3 24-15.2 26.6-13.9 26.6-12.7 27.9-9.8 30.4-8.4 30.3-5.6 32.7-2.8 34.4 1.3 36.6 4.3 39.3 7.1 41.6 11.2 43.1 15.4 46.8 20.8 49.3 23.8 51.8 7.1 2.7 8.3 2.5 8.4 34.1 2.7 27.9-1.2 20.2-5.9 13.9-9.6 7.5-12.6 1.3-16.7-3.9-19.5-10-22.6-14-23.8-18.9-27.8-21.5-28-26.5-30.8-29.2-32.2-31.5-33.4-34.3-33.7-36.7-69.9-76.9-68.3-79.8-67.2-79.8-63.1-75.9-55.7-69.4-46.3-60.7-35-46.8-22.2-30.4h-11.2v-16.6l26.6-17.5 26.6-16.6 23.7-13.9 20.9-11.3 21-10.2 19.5-6.4 18.2-6.1 16.8-3.9 15.4-2.6 13.9-1.1 14.2-1.3 12.4 1.3 12.7 2.3 12.6 2.6 11.1 3.9 11.2 3.7 21 7.6 21 8.8 20.8 7.8 23.8 6.2 12.7 2.6h26.6l15.2-1.3 15.4-2.6 16.8-4.9 18.2-5.2 19.6-7.5v-11.5l36.4-16.4 34.9-16.5 34.9-16.4 35-16.4 7-23.9 8.5-24.1 9.6-23 8.4-23.9 21-45.5 21-45.5v-65.8l-1.3-67.1v-65.6l-1.5-67.1v-265.8l-4-12.6-4.4-11.3-19.5-3.7-18.2-5.1-18.2-5.2-18.3-3.6-27.8 14.9-27.9 12.7-29.4 12.7-29.3 11.6-31 10.1-29.3 10-30.7 10.1-30.8 7.5h-187.2l-19.8-10.1-15.2-11.4-8.3-11.3-5.6-11.4v-11.3l4-12.7 8.4-12.6 11.1-14 15.5-13.9 18.2-13.9 21-14 23.8-15 51.8-31.7 58.6-34.2 61.6-35.4 62.9-37.9 30.6-20.4 30.9-20.1 29.3-21.4 28-21.7 26.5-21.5 23.8-22.7 22.3-24 21-24 16.8-25.3 13.9-25.3 9.8-26.6 7.1-26.6 1.4-30.3v-30.3l1.4-30.3v88.4l1.3-30.3v-30.5l1.5-30.2v-29.1m-2.8 31.7v-29.2 29.2zm679.3 501.9v-63.2l1.5-48.1v-56.7l1.3-13.9v-7.8l1.6-2.4h1.5l13.9-45.6 13.9-37.9 15.4-32.9 16.8-25.2 16.7-20.2 18.2-15.2 16.7-8.8 18.3-3.9 18.2 1.3 18 4.9 18.2 11.4 16.8 13.9 16.9 19.1 15.2 24 14.1 26.5 14.1 29 11 34.4 10 36.6 8.3 39.3 6.8 41.5 4.4 44.5 1.2 46.6v48.1l-2.8 50.6-6.9 51.9-8.3 54.5-12.7 54.2-15.4 55.8-19.5 55.5-23.7 57-26.6 56.9-30.7 57.1-26.6-3.9-25.1-6.5-22.5-6.2-21-8.8-18.1-10.3-15.4-10.1-15.4-12.6-12.4-12.6-11.5-14-8.3-15-8.3-15.2-7-16.6-4.2-17.5-4.3-17.8-2.8-19.1-1.2-18.9-1.6-20.2v-20.3l1.6-20.2 1.2-20.3 4.3-42.9 7-41.8 15.3-83.4 13.9-78.6zm-434.6 624.9v-305.9l-1.5 101.1-1.3 75.7-1.5 54.5v58.1l1.5 11.6 1.3 4.9h1.5zm-2852.2 44.4h29.5l30.6 1.1 29.4 1.3 29.4 2.5 29.3 5.2 29.4 10.1 30.6 10 32.2 11.4 31 10.1 30.6 7.8 15.4 3.5 14 2.6h191.4l33.7-2.6 34.9-1 33.5-2.5 33.7-2.7 34.9-2.6 33.4-3.6h148.2l47.7 15 46 16.6 44.9 16.4 46.1 13.9v10.2l15.4 4.9 18 3.9 35 3.9 64.3 7.4 14.2 29.2 4 22.7-6.8 16.5-15.5 12.6-23.8 7.6-32.1 3.8-37.8 1.3-44.8-2.5-48.9-3.9-54.4-6.3-57.5-7.6-60-7.6-61.6-8.7-62.8-7.8-63-6.2-62.9-6.4-61.6-3.8-60-1.2-55.9 2.4-53.2 5.2-48.9 8.7-43.4 14-36.4 19-30.7 24.1-22.2 31.5-14.2 36.7-4.1 44.4 5.6 51.7 16.8 60.8 28 69.5 40.6 78.5 52.9 87.3h11.3v11.3l30.7 10.1 29.4 11.3 29.4 8.8 29.4 9.1 29.3 8.7 30.7 7.6 30.9 7.7 30.6 6.2 1.5 62v67.1l1.4 35.4 2.7 35.4 4.4 35.4 5.5 35.6 2.8 17.5 4.1 16.5 5.5 16.3 5.8 16.6 5.6 16.4 6.9 15.3 8.3 13.9 8.4 15 9.9 13.9 9.8 12.7 12.4 11.4 12.7 11.3 12.7 11.4 15.1 9 17 8.8 16.7 7.5-8.3 16.5-11.2 15.3-14.2 12.5-16.6 12.7-19.6 11.4-21 8.8-23.8 8.8-25 7.7-28 6.2-28.1 5.2-30.6 5.1-30.9 3.7-32.2 2.6-32.1 2.5-33.4 1.3-33.7 1.3-67.1 1.3-67.1-1.3-62.9-2.6-60-2.5-103.6-6.3-68.4-3.9-96.5 7.6-124.3 10-148.4 12.7-166.5 16.5-181.6 19.1-192.9 22.7-97.8 12.7-99.3 12.6-100.8 15.2-100.6 16.3-99.2 16.6-97.8 17.6-96.5 20.3-95.2 20.2-90.9 21.5-87.9 24.2-85.4 23.9-79.8 26.6-75.4 26.4-69.9 29.2-62.9 30.4-57.2 32.9-50.4 32.7-42.1 35.6-34.9 36.7-25.1 39-44.8 13.9-62.8 24.1-75.5 26.6-81 26.6-40.8 11.3-37.8 10.1-36.2 7.7-33.6 4.9h-29.1l-14.2-1.2-11.2-1.1-9.9-3.8-9.6-3.9-7.1-6.3-5.6-7.6 4.4-45.5 2.7-45.5 2.9-46.9v-68.2l-2.9-22.8-2.7-22.9-4.4-22.8-5.6-21.4-5.6-21.4-9.8-21.7-9.6-20.2h-11.2l-11.4-16.4-9.6-13.8-11.1-12.6-11.4-11.6-11.1-8.8-11.2-8.8-11.2-6.4-12.6-6.3-14-6.4-13.9-3.6-13.9-5.1-16.9-3.9-33.5-8.8-39.3-10.1 1.5-101.2 2.9-89.8-1.6-40.3-2.8-38-1.2-19.1-4.3-16.5-4.1-17.5-5.5-15.3-5.6-15.2-8.6-15.3-9.7-13.7-9.8-12.7-12.5-12.5-14.1-11.4-15.3-11.6-16.9-10.1-19.5-10.1-21-8.8-23.8-7.7-25.1-7.5-27.8-6.2-31-6.4-33.4-5.2-34.9-5-33.7 10.2-35 8.8-18.2 2.5h-25.1l-8.4-2.5-8.3-2.4-8.4-3.9 18.2-59.4 12.5-53.2 8.3-46.7 5.6-41.8v-36.7l-2.7-31.7-5.6-26.4-9.7-22.9-12.6-17.6-15.5-15.2-16.7-11.4-21-7.5-21-5.2-25.1-2.5h-25.1l-28.1 2.5-27.9 3.9-30.9 4.9-30.6 7.8-30.7 7.5-64.4 16.5-64.2 16.3-32.2 7.7-30.8 6.2-30.7 6.4-29.4 3.6-28.1 3.9h-27.9l-25-1.2-23.9-3.7-4.3-39.2 5.6-38 17-39.2 26.6-38 36.2-37.9 44.8-38 53-36.7 60.3-36.6 67-35.4 71.2-35.4 77-34.2 82.6-32.9 83.8-31.7 88.1-30.3 90.7-29.1 90.9-27.9 92.5-26.4 92.2-24 90.9-23 90.7-20.1 86.9-18.9 85-16.4 81.3-14 76.8-11.4 72.7-8.8 65.8-6.4 60-3.8 51.7-1.4 44.9 1.4 36.2 5.1 26.6 8.8 15.4 11.3 78.3-1.3 76.9-1 75.6-2.6 76.9-3.9 75.5-5.1 76.8-4.9 75.4-6.4 75.5-7.6 151.2-13.9 149.5-15.2 149.6-16.3 151-15.3 150.9-12.6 150.9-11.4 75.6-5.1 75.7-2.6 76.7-3.7 75.5-1.2h77l76.7 1.2 78.5 2.6 76.8 3.7 78.3 5.1 79.7 7.6 78.3 8.8 79.7 11.5zm3658.9 881.6h-102.1l-44.9 18.8-37.6 19.1-8.4 2.6-9.9 1.2h-6.8l-8.4-1.2-8.4-2.6-8.6-5.2-6.8-7.5-8.4-10.1-1.5-23.9-1.2-23-1.6-22.7-1.3-22.8v-50.6l1.3-24 1.6-22.7v-24.1l2.7-20.3 4.1-20.2 5.5-18.8 5.6-19.1 7.1-17.6 8.4-17.8 9.9-17.8 11.1-16.3 11.1-16.5 12.7-16.5 12.4-16.3 14.2-15.2 29.3-29.2 32.2-29.1 33.5-26.4 34.9-26.6 36.5-26.6 36.2-25.3 71.5-48.1 68.3-48 9.9-16.5 6.9-17.8 7.1-17.6 7.1-17.8 9.6-36.6 8.3-36.7 13.9-73.3 11.4-73.3 8.4-36.8 8.4-34 5.5-17.8 7.1-16.6 6.9-16.3 7-16.4 8.4-15.3 9.9-15.2 11.1-15 12.5-14 12.7-13.9 15.4-12.6 15.4-12.7 18-11.4h7.1l6.8 1.3 8.6 2.4 8.3 2.6 18.1 9 17 10.1 16.6 12.6 12.7 11.3 5.6 6.3 4.1 6.4 4.2 6.2 1.3 5.2 5.6 1.3 5.8 1.2 22.3 49.4 19.5 44.1 13.9 41.8 11.2 39.3 7.1 36.6 2.7 32.9 1.6 31.7-2.8 28.9-4.3 28-7 26.6-9.7 23.9-11.2 22.8-14.2 22.7-15.2 20.4-15.4 21.5-18.2 18.8-36.2 40.5-39.3 39.3-21 21.4-19.5 20.4-18.3 22.7-19.5 24-16.7 24-16.7 26.6-15.5 27.9-13.9 30.2-12.7 31.8-11.1 34.1-8.4 36.6-5.6 40.6-12.6 60.6-15.4 58.2-8.4 26.5-9.9 25.3-5.5 11.4-5.6 11.3-6.8 10.2-7.1 8.9-7.1 8.8-8.4 8.8-6.9 6.5-9.8 6.2-9.9 5.1-9.6 3.9-9.9 3.6-11.1 1.3h-25.1l-14.2-2.5-13.9-3.7-15.2-5.1-15.5-6.3-16.7-7.7-18.2-8.7zm-383.2 391.9v23l1.4 22.7v21.5l1.4 23.9-1.4 29.2v30.2l-1.4 30.5v30.2l2.8 15.2 5.6 15.3 8.6 15.2 11 17.6 14 16.5 15.5 17.8 16.7 18.9 18.2 17.8 83.8 77.1 83.9 78.3 19.5 20.4 18.2 18.9 16.7 19.1 14.2 17.5 12.4 19.1 11.2 17.6 7.1 16.5 4 16.5 3.1 16.3-3.1 15.2-4 14-9.9 13.9-13.9 12.6-18.3 12.7-22.3 10.1-27.8 10.1-11.4-15.3-11.1-13.9-12.5-13.7-12.6-14-27.9-26.6-30.9-26.6-33.5-23.9-33.6-25.4-36.2-24-35-24-35-24-34.9-24-33.7-24.1-30.6-24.2-29.4-25.1-26.6-25.3-12.7-12.6-11.1-12.6-9.9-14-8.3-12.6h-12.5l-9.8-33-13.9-44.2-14-54.6-12.6-60.6-7.1-31.5-5.6-33.1-4.1-34-4.2-34.1-4.1-34.2-1.5-34.2-1.5-34.1 1.5-32.8 1.5-31.7 4.1-29 5.5-29.1 7-26.6 9.7-24.1 12.7-22.7 13.9-19.1 16.9-15.2 19.5-12.7 22.4-8.7 26.6-5h27.9l32.1 3.7 36.5 8.9 37.7 13.8 43.3 19.1v15.2l-1.2 18.9-1.5 24-2.9 29.1-2.7 38-2.9 45.4-4.2 55.8-2.8 66.9zm1128.3 335.4-15.4-26.6-12.4-31.7-12.7-36.8-9.9-40.5-9.6-42.8-8.4-48.1-7-49.3-5.6-51.9-4.4-53.2-2.7-54.4-1.3-55.5v-55.8l2.8-55.5 4.1-54.5 5.6-51.9 7.1-51.7 9.8-48.2 11.2-45.5 12.4-43.1 15.4-39 18.2-34.4 19.5-28.8 22.6-24.1 23.5-17.8 26.6-12.6 29.4-5.1 30.9 2.5 33.4 10 36.5 19.2 39 26.5 42.1 36.7 43.2 46.7 8.4 31.8 5.6 30.2 4.3 30.5 4 30.2 1.6 29.2v29.2l-1.6 28.9-1.2 29.2-4.3 27.8-4.1 27.7-5.6 27.9-5.8 27.9-6.8 27.8-8.4 26.6-8.3 27.6-9.9 26.6-21 54.5-22.3 53.2-25.1 54.2-25.4 55.8-26.5 55.5-25.1 57.1-25.1 58.1-25.3 58.1-29.3 2.6-29.5 2.5-29.3 2.6-27.9 3.9zm729.9 698.2-30.8-6.4-27.9-8.8-26.6-11.4-23.8-14-21-15.2-18.3-17.8-16.7-20.2-15.4-21.4-12.4-24-10-24.1-9.8-26.5-6.8-26.6-4.4-29.2-4-28.9-1.5-29.2-1.3-30.5 1.3-30.2 2.8-30.4 2.7-31.5 5.6-30.5 5.6-30.2 7.1-30.5 8.3-29.1 10-29 9.6-27.8 9.8-26.6 12.6-26.6 11.2-24 12.7-22.8 13.9-21.4 14-19.2 13.9-17.5h16.8l19.6 1.1 22.4 2.5 21 3.9 9.8 2.6 9.7 3.7 9.8 3.7 8.4 3.9 6.9 6.3 7.1 5.1 5.5 6.2 2.8 7.8h12.7l11.1 15.2 12.6 17.5 12.5 19.2 11.4 20.1 12.4 22.7 11.1 24.1 9.9 25.2 9.8 26.6 9.7 26.6 8.4 29.2 7.1 27.7 7 30.4 5.6 29.1 4.1 29 4.3 30.5 1.2 29.1 1.6 29v29.1l-2.8 27.9-4.3 27.7-4.1 25.2-7.1 25.4-9.6 24-9.9 21.6-13.9 20.2-14.2 19.1-16.7 16.3-19.5 14-22.3 12.6-23.9 10.1-25.2 6.4-29.2 3.9zm-517.4 596.9-15.5-9-16.6-7.5-18.3-7.5-20.8-5.2-21-5.1-22.5-3.7-22.3-3.8-23.8-2.6-46.1-4.9-46.1-5.1-22.3-2.6-21.1-2.6-19.5-3.6-19.6-3.9-8.5-15.3-6.8-11.3-4.3-4.9-5.6-5.1-5.5-5.3-8.4-4.9v-10l-19.7-6.4-19.5-6.3-18.3-5.1-17.9-3.9-37.8-7.5-40.8-6.4v-15l22.5-3.9 23.9-5.1 25.1-6.3 25-8.8 54.7-20.3 54.5-25.3 56-25.4 54.4-25.2 26.6-10.1 25.1-10.1 25.3-8.8 25.1-7.6 22.2-5.1 21.1-3.7h21l18.2 1.2 16.8 4.9 15.4 9.1 12.4 12.6 9.9 15 8.4 20.4 5.6 24 2.7 29.2v32.8l-2.7 39.2-7 45.5-9.8 49.3-12.7 57h-11.1zm1293.3 777.7 28 1.3 25.1 3.9 26.6 4.9 27.9 6.5 4.2 11.3 4.1 13.9 9.9 91.2 8.4 112.6 4.2 60.7 2.9 63.2v65.7l-1.5 64.5-1.4 33-2.7 31.5-2.9 31.6-4.2 30.4-4.3 30.4-5.6 30.3-5.5 27.8-8.5 27.9-8.3 25.3-9.8 25.4-9.7 22.7-12.7 21.4-12.6 20.1-14 17.8-15.4 16.6-16.7 13.9-25.1-20.4-23.8-21.4-23.8-24-22.3-24-21-25.4-21-26.5-21-27.9-20.8-29-78.3-117.7-79.8-121.3-39.2-59.6-41.9-56.9-22.4-26.6-22.3-26.6-22.4-25.3-23.7-22.7-23.9-22.7-25-21.5-26.6-19-26.6-17.6-27.8-15.2-29.5-14-30.8-12.6-32.2-8.8-47.4-24.1-42-27.8-36.5-30.5-32.2-32.8-27.8-34.1-22.3-36.6-18.3-38-13.9-39.2-9.8-40.5-6.9-40.6-3-40.4 1.5-41.7 2.8-40.6 7.1-40.5 8.3-39 12.5-37.9 14.1-36.8 15.2-34.2 18.3-32.8 19.5-30.5 21-27.7 22.5-24.2 23.6-20.1 23.8-17.6 25.3-14 25.1-8.9 25.1-5h25.2l25.1 6.2 23.9 10.1 23.7 16.5 23.9 22.8 2.7 20.3 1.3 18.9v40.5l-2.7 20.1-4.1 20.5-5.8 18.8-8.4 19.1-8.3 17.5-11.2 16.6-13.9 16.5-15.5 13.7-8.3 6.4-8.4 5.2-9.9 6.2-9.6 3.8-11.4 5-11.1 3.9-12.5 2.5-12.6 2.7-8.4 22.7-4.2 22.7-1.4 22.7 1.4 24 4.2 22.7 6.9 24.1 8.4 24.2 11.3 24 13.9 24 15.5 24 16.7 24.1 19.5 25.2 19.6 24.1 22.4 24 22.4 24.1 23.8 23.9 48.8 46.7 50.5 47 51.7 45.5 48.8 42.9 47.6 41.8 43.3 39.2 19.5 18.9 18.3 19 16.7 17.6 15.5 16.6 26.6-8.8 27.8-10.1 28.1-9 26.6-8.8 11.2-35.4 11.1-35.3 11.1-34.2 12.7-35.6 12.5-34 14.1-34.1 15.2-33 18.3-34.2zm-7677 241.7-2.9-3.9-2.7-4.9v-6.4l-1.3-11.4 19.5-10 21-9.1 21-10 20.8-8.8 1.5-8.8 2.9-9h11l1.5-66.9 2.9-58.3 5.6-48.1 4-41.6 2.8-34.3v-39l-1.3-11.6-2.8-10.1-4.3-8.8-4-7.4-7.1-6.5-8.3-7.6-10-5.1-11.1-6.2-14-5.1-15.4-5.1-18.2-5-96.3-22.8-141.3-31.7V61870.5h-12.7v-10h-11l-2.9-11.4-2.7-9h-11.2l-8.4-36.7-9.9-32.7-11.1-29.3-12.6-26.3-14-23-15.4-20.1-16.7-17.8-16.8-15-18.2-12.7-18.2-11.3-18.1-9-18.1-8.8-19.5-6.4-18.3-5-19.5-5.2-18.3-3.6-34.9-7.7-33.7-7.5-13.9-5.1-13.9-4.9-12.7-6.5-9.6-7.5-9.9-9-7.1-11.4-5.6-11.3-4-15.3-1.5-16.3 1.5-19.1 2.7-22.7 6.9-25.3-1.3-27.9-2.7-26.4-2.9-24.2-2.7-22.7-4.3-18.9-4.1-19.1-5.5-16.2-5.8-14-5.6-14-6.9-11.3-7.1-10.1-8.3-10.3-9.9-7.4-9.6-6.3-9.9-6.4-11.1-5.1-11.2-5-12.7-3.8-13.9-2.6-13.9-3.7-30.9-5.1-33.5-3.9-37.7-4.9-40.5-7.8-44.9-7.4-48.8-11.4 11.2-35.4 16.6-33 25.4-31.5 30.6-30.5 36.5-27.6 43.3-28 46.1-25.2 51.7-25.3 55.9-24 58.8-21.5 61.5-21.7 62.8-21.4 65.6-18.8 68.7-19.1 67.1-18.9 68.3-17.8 137.1-32.8 131.4-31.8 124.7-30.2 111.6-30.4 49-15.3 46.3-15.2 40.5-15 35-15.2 27.8-15.2 22.3-15.3 15.5-16.3 7.1-16.4 29.3-8.8 29.4-7.8 27.8-6.2 29.5-7.7 15.4-15 27.8-15.3 40.6-13.9 51.7-12.7 63-12.6 71.2-11.3 81-11.4 88.2-10.1 94.9-9 102.1-7.5 106.4-7.5 112-6.5 115.9-6.1 117.4-5.2 120.2-5.1 121.6-3.7 123.1-2.6 121.6-1.2 120.3-2.7h345.4l107.7 2.7 102 1.2 95 3.9 88.1 2.4 81 5.1 72.8 3.8 61.5 6.3 53.2 6.4 40.5 6.2 29.4 7.7 20.8 27.7 22.5 26.6 26.6 22.7 27.9 20.4 30.9 17.5 32 15.3 34.9 14 36.4 11.3 37.8 10.1 40.5 7.7 40.5 6.2 43.3 3.9 43.4 3.8 44.7 2.4 46.1 1.3h46.1l95.2-2.6 96.6-3.6 96.5-5.2 96.2-3.8 95.2-3.7 92.2-1.2h44.9l43.3 2.5 42 2.4 41.9 3.8 4.2 27.9 2.8 27.9 2.8 27.6 2.7 27.9 1.4 27.9 1.5 27.8 1.2 27.9v29l-6.8 3.9-8.4 3.8-11.4 2.3-11.1 1.3-14 1.4h-13.9l-13.9-1.4-15.5-1.3-30.7-3.6-29.3-6.4-25.3-6.3-18-6.4V60698l-35.2-8.8-68.4-15.2-95-20.1-117.4-21.6-64.4-10.2-68.4-11.3-70-10.1-72.8-10.1-74-9-74.2-7.4-73.9-5.2-72.7-5-71.5-2.5h-68.4l-65.8 1.2-61.6 5.2-57.2 7.5-51.7 11.4-46.1 13.9-39.2 17.6-32.1 21.6-23.9 26.6-15.2 29-5.8 35.4 4.3 39.2 16.7 45.7 26.6 49.3 40.5 55.5 58.8 15.3 50.4 8.8 44.8 9 40.6 10 18 6.2 18.1 7.8 16.8 8.8 16.9 11.4 16.8 12.5 16.7 16.6 16.7 18.8 15.4 22.8 44.9 6.4 33.5 6.2 13.9 2.6 11.3 3.9 8.4 3.9 8.4 6.2 5.6 6.4 4 7.5 4.3 10 2.7 11.4 2.9 31.8 2.7 42.9-53.2 6.4-47.3 8.8-11.3 3.9-11.2 3.6-9.7 5.1-9.9 5.2-9.8 7.5-8.4 7.4-8.3 10.4-6.9 11.3-8.6 30.3-4.1 27.8v26.6l1.3 22.7 5.6 21.5 9.9 20.4 11.1 17.6 13.9 15.2 15.5 13.9 18.2 12.7 21 11.4 22.4 10 23.7 8.8 25.1 6.4 26.6 7.6 26.6 5.1 57.3 8.8 57.4 7.8 58.8 4.9 57.2 5.1 53.2 6.2 48.9 7.7 22.3 3.7 21 5.1 18.3 6.3 16.7 7.6v10.1l43.3 20.2 46 19.1 46.2 16.5 49 13.7 50.3 11.6 50.3 11.4 53.2 8.7 53.2 7.6 54.4 6.4 56.1 4.9 55.7 3.9 57.4 2.6 116.1 5.1 117.5 3.7 117.3 3.8 119 3.8 58.5 3.7 58.8 3.9 58.7 3.8 57.3 6.2 57.4 7.8 56 7.5 55.7 10 56 12.7 53.2 13.9 53.2 15.2 51.7 17.6 50.3 20.4 2.9 7.6 5.6 7.6 5.5 6.3 5.5 5.1 6.9 4.9 8.6 3.9 8.4 3.9 8.3 3.6 37.8 10.1 37.7 10.3 8.4 2.4 8.3 3.8 7.1 3.8 5.6 5 5.6 5.2 5.5 5.1 4.3 6.2 1.3 7.7 1.5 8.8v8.8l-1.5 11.3-2.8 11.4-4.1 12.7-7 13.9-7.1 16.6-11.2 17.5h-127.1l-43.3-35.3-57.5-32.9-71.2-30.4-81-29-93.7-25.3-103.6-24-111.7-22.9-121.8-18.9-128.4-17.8-134.3-16.3-141.3-13.9-145.4-11.4-148.2-10.1-152.4-7.7-153.7-7.5-155.3-3.8-156.6-3.9-153.7-1.3-153.7 1.3-151.2 1.2-148.2 3.9-142.6 5.2-138.3 6.2-132.9 7.5-125.7 9-117.5 11.4-109.2 11.3-99.2 12.7-88 13.9-78.2 16.3-64.3 16.6-51.9 16.4-76.8 8.8-93.7 10.1-110.4 14-121.6 15.2-131.5 18.8-138.4 21.7-141.1 22.7-144.2 26.6-71.1 13.9-70 13.9-68.6 15.1-68.4 15.2-65.8 16.5-64.3 16.4-61.6 17.8-58.7 17.7-54.4 17.7-51.8 19-47.6 18.9-43.3 20.2-39 20.3-33.6 21.4-28 20.4-23.7 22.7-35 11.4-35 10-34.9 10.2-35 8.8-34.9 7.6-34.9 6.3-36.6 3.9-37.6 2.5zm5909.8 146.7v-1.3l2.8-1.3h6.9l14.2-1.3h57.2l111.9-1.3H24288.3l32.2 3.9 33.7 5.2 32.2 7.5 33.4 7.6 32.2 10.1 32.2 11.4 30.8 13.9 30.7 14 30.6 15 29.5 16.5 28 17.8 27.9 18.9 26.6 19.1 23.8 20.1 23.8 21.4 21 21.7-11.4 11.4-15.2 8.8-18.2 6.2-21.1 5.1-23.7 2.6-26.6 1.3-27.9-1.3-30.7-2.6-33.6-3.8-35-5-36.4-6.4-37.8-7.5-78.3-17.8-81-20.2-82.3-24-82.5-22.7-79.8-24-76.8-24.3-71.4-20.1-62.9-18.9-55.9-13.9-44.8-10.1v-10.3l44.8-8.7 43.3-6.3 44.8-3.8 46.1-2.6zm-1353.5 2025.1 32.2 1.3 30.9 1 30.7 1.3 32.2 2.6 43.2 2.6 44.9 2.5 44.7 2.6 44.7 2.3 44.8 3.9 44.5 3.9 44.9 4.9 43.3 7.7-2.8 5-2.7 5.1-4.1 3.9-5.6 3.6-9.8 7.7-12.7 5h-118.8l-50.4 10-50.4 9.1-53 8.7-53.2 7.6-107.6 15.2-110.4 13.9-109.1 12.7-109 12.6-106.3 11.3-103.4 12.7-28.1 1.3h-29.4l-27.8 1.3-27.9 2.5-95.3 12.7-95 11.4-97.9 11.3-99.3 10.1-97.8 11.4-99.2 12.7-99.3 13.9-97.9 16.5-48.8 8.8-47.6 8.8-48.9 10.1-47.6 11.5-46.1 12.7-47.6 12.6-46.1 13.7-44.9 15.3-44.5 16.5-44.8 17.5-43.3 19.2-43.4 20.1-42 21.7-40.5 22.7-40.5 25.3-39.1 25.3-38 1.3h-66.9l-29.3-2.6-28.1-2.6-25.1-3.8-25.3-6.2-23.6-6.4-22.5-8.8-22.3-11.4-22.3-11.4-22.5-15.2-22.3-16.5-23.8-18.9-25.1-20.1-25.1-24.3-28.1-1.1-26.6-1.2-27.8-1.3-26.6-1.3-12.7-19.1-11.1-15-7.1-11.4-4.1-10.2v-10.1l1.3-5 2.8-5.1 8.6-11.4 12.4-16.5 47.6-1.3 37.7-2.6 16.8-2.3 15.4-2.6 13.9-2.5 11.2-3.9 11.1-3.6 9.9-5.2 8.4-3.9 8.3-4.9 14.1-10.1 9.7-12.6 19.6-26.6 21-27.9 13.9-15.2 16.9-15.2 9.7-7.5 11.4-7.6 12.4-7.6 14-7.6 86.7-10 85.2-10.2 84.1-9 83.8-10 82.5-8.8 81.1-9 81-8.8 82.7-7.5 81-7.7 82.3-7.5 82.5-6.3 82.6-6.4 83.9-5.1 85.3-3.7 87.9-3.9 88.2-1.2h220.8l44.8-3.9 43.4-4.9 44.7-3.9 43.4-3.9H22044.6l62.8-3.6 62.9-1.3 63-1.3 64.3 1.3 62.9 2.6 62.7 3.7 63.2 3.8 62.7 5.2zm3812.8 146.6-18.2-3.8-16.8-5-16.9-5.2-16.8-7.4-33.4-16.5-30.8-19.1-30.7-20.2-30.9-20.1-29.4-20.4-32.1-17.6-36.3-5.1-37.7-2.6-37.7-2.3-39.3-1.3-79.6-2.6-79.7-2.6-39.2-1.3-40.5-2.5-39.1-3.7-37.7-5.1-37.8-6.3-37.7-7.6-34.9-10.2-35-11.3v-10.1l-64.3-22.8-64.4-21.5-67.1-20.2-68.6-20.2-69.9-19.1-71.2-18.8-71.4-19.1-73.9-16.6-74.2-16.3-75.6-16.4-75.5-15.3-76.9-13.9-76.8-13.7-78.2-14-77.1-12.6-78.2-11.4-78.3-10.3-76.9-11.3-78.3-8.8-76.9-8.8-76.9-9-75.4-7.6-75.5-6.1-75.5-6.5-74.2-5.2-72.6-4.9-71.5-3.9-69.9-2.5-68.4-2.4-67.1-2.6-65.6-1.2h-64.4l-15.4-3.9-15.4-3.9-12.4-4.9-12.7-5.1-11.2-6.2-9.8-6.5-9.9-7.4-9.6-7.8-36.5-32.8-43.3-39.2-153.8-24.1-150.9-21.4-75.5-8.8-74.2-10.3-72.6-7.5-72.7-7.5-72.8-6.4-71.4-6.3-71.1-5.1-70-3.9-71.3-2.3-68.4-1.3h-70l-68.6 1.3-68.4 2.3-67.1 3.9-68.6 5.1-67.1 6.3-65.7 7.7-67.1 10-65.6 11.4-67.1 13.9-65.8 15.3-65.6 16.3-64.4 19-65.8 21.5-65.6 22.7-64.4 25.3-64.2 26.6-65.7 29.2-95.2 14-90.9 14.9-87.9 16.6-83.8 17.8-82.7 18.8-78.2 20.2-78.3 21.6-76.9 22.7-75.6 24.1-76.9 25.2-75.5 26.6-76.8 29-78.4 29.1-81 31.8-82.4 34.1-85.3 34.1h-11.2l-9.8-1.2-10-2.7-9.6-3.6-9.9-5.1-8.3-5.2-5.6-7.5-4.2-7.5h-11.2l-12.5-15.2-11.4-14-11-10-12.5-8.8-12.7-9-13.9-7.5-17-7.6-19.5-9-1.3-8.8-2.7-8.8 50.1-15.2 44.9-17.8 40.5-17.5 37.8-19.1 72.6-38 69.9-36.7 36.5-18.8 39-16.5 42-16.6 46.1-13.9 23.9-7.4 26.6-6.3 26.5-5.2 29.4-6.1 29.1-5.2 32.2-3.8 33.7-3.7 34.9-3.9 16.8-22.7 18.1-21.7 19.6-21.4 21-20.1 22.3-19.2 22.5-18.8 25.1-19.1 23.8-17.6 102.1-67.1 99.2-67.1 22.4-16.3 21-16.5 21-17.6 19.5-17.8 16.7-19.1 16.8-18.9 14.1-19 11.1-20.2 9.7-21.4 7.1-21.5 4.3-22.9 2.8-24.1-1.5-25.2-4.1-25.4-8.6-27.6-11.2-29.2h-11.1v-10h-11.1V63484.6l-18.3-9-19.5-7.5-21-6.4-22.3-5-22.5-3.8-23.6-2.6-23.8-1.3-25.3-1.1h-26.6l-25.1 1.1-27.8 1.3-26.6 2.6-54.5 7.4-56 10.3-56 11.4-55.9 13.9-53.2 13.9-51.7 15.1-50.3 16.5-46.2 15.2-41.7 15.2-37.8 13.7-1.5 12.7-2.8 11.6-1.3 12.5-3 12.5-47.4 19.2-47.6 17.8-47.6 17.6-47.3 16.4-47.6 15.3-47.6 15-47.5 13.9-47.6 13.9-96.5 25.4-97.8 24-99.2 24-100.8 22.7-4.1-12.6-2.7-8.8v-26.6l22.2-3.7 22.3-5.1 21.1-6.2 22.5-7.7 44.6-16.6 44.8-20.1 89.4-45.5 93.7-49.3 47.6-24 47.4-22.9 23.8-10.1 25.3-10.1 25.1-8.8 25-8.9 25.4-7.6 25.1-7.5 25.1-5.1 26.5-5.2 25.3-3.6 26.4-2.6 28.1-1.3 26.6 1.3 1.2-8.8 2.9-7.7 28.1-12.7 23.7-11.4 19.5-12.6 15.6-12.6 13.9-13.9 9.6-13.8 8.5-15.2 5.6-15.2 2.9-17.8 2.7-19 1.3-19v-21.5l-1.3-47.9-1.5-54.6-4.1-18.8-5.6-16.6-8.5-15.2-6.9-12.6-9.8-12.7-9.9-10-11.1-8.8-11.2-7.6-12.4-7.6-14.2-4.9-13.9-5.3-13.9-2.5-15.4-2.6-15.6-2.3-16.6-1.4h-50.5l-34.7 2.7-35.1 2.4-36.2 3.7-36.6 2.7-34.9 1.2h-33.4l-32.2-1.2-1.5-12.7v-15.2l1.5-16.6 1.5-18.8 5.6-44.4 5.5-48 6.9-51.9 4.3-52.9 1.3-26.6v-50.7l-2.8-24-4.1-22.7-4.3-20.4-8.3-20.1-8.4-16.6-11.1-15.2-14-12.6-16.9-10.1-19.5-6.3-22.4-2.5h-25.2l-28 3.8-32 8.8-35.1 12.7-40.5 17.8-43.3 21.4-47.6 27.9-8.3 8.8-7.1 11.4-8.4 10-6.9 10.1h-11v10.4l-12.7 6.1-13.9 5.2-15.6 4.9-16.6 2.6-33.7 5.1-34.9 4.9-16.8 2.7-15.4 3.8-15.2 5-14.2 6.4-12.4 7.5-11.4 8.8-4.1 5.1-4.2 6.4-4.2 6.3-2.7 6.4h-11.2l-7.1 15-12.6 15.2-15.2 15.2-18.3 15.3-22.2 13.9-25.4 13.7-26.6 12.7-29.3 12.7-30.7 11.3-32.2 11.6-33.6 10.1-33.4 8.7-35 7.6-33.7 6.4-35 6.2-33.4 3.8-32.2 2.6-30.6 1.3-29.4-1.3-28.1-2.6-25-3.8-23.9-6.2-19.5-7.6-15.4-10.2-13.9-12.7-8.5-15-4.2-16.5v-20.1l4.2-21.7 9.7-25.3 16.9-27.9 20.9-30.2 15.4-11.3 16.7-10.2 17-8.9 16.7-8.9 18.2-7.4 16.7-7.8 18.3-6.2 19.5-6.4 37.8-11.4 39.2-10.1 39-8.8 40.5-8.9 39.2-7.5 39.1-8.8 37.8-9 37.6-10.1 36.6-12.7 33.4-13.9 16.9-7.5 15.2-7.6 15.5-10.2 13.9-8.8v-10.1l28.1-10.1 26.6-7.7 26.4-6.2 26.6-5.2 25.2-3.6 26.6-2.6 25.1-1.3 23.9-1.3h96.4l89.4 1.3h22.4l22.5-1.3 20.7-1.2 21-2.7 21-3.6 21.1-3.8 21.1-6.5 20.7-6.2 21-8.7 19.6-10.3 21-11.4 19.7-14 19.5-15 21-17.7 19.6-20.2 19.5-22.7 28.1-14 33.4-12.6 37.7-14 43.3-12.6 46.2-12.7 50.3-12.7 54.5-12.6 57.5-11.3 60-11.4 63-11.4 64.2-11.4 65.7-10.2 137.1-18.9 141.1-17.8 139.8-16.3 138.5-12.7 134.3-10.3 125.9-8.7 58.5-2.6 56-2.4 53.1-1.2h93.8l41.7 1.2 36.5 1.1 30.7 2.6h78.4l76.8-2.6 78.3-3.7 78.2-5.1 78.5-4.9 76.7-3.9 78.3-3.9 78.4-3.8 78.4-1.1 76.8 1.1 39.2 1.3 39 1.3 37.8 2.6 39.2 3.8 39 3.6 37.8 5.2 39.2 6.4 37.7 7.6 37.8 7.4 39.2 9 37.7 11.4 37.8 11.3 6.8 15.3 8.4 16.3 74.2 1.3 72.7 3.9 72.7 6.2 71.4 7.7 72.7 8.8 71.2 10.1 72.7 11.4 72.7 12.5 1.5 21.7v17.6l-2.9 22.7-4.2 35.4h-25.1l-28.1-1-26.3-2.7-29.4-3.8-60.3-7.5-61.5-10.2-64.1-8.8-64.4-10.2-65.8-7.5-64.3-6.4-30.7-1.3-30.9-1.2h-30.7l-29.3 2.5-29.4 2.6-27.9 3.8-26.5 6.3-26.6 7.5-25.1 9-23.9 11.3-21 13.9-21 15.3-19.5 17.6-16.7 20.3-15.5 22.8-13.9 25.3 1.4 58.1 8.3 50.6 15.4 45.5 23.9 39.2 29.3 35.4 34.9 29.2 41.8 26.6 46.4 21.4 50.2 17.7 55.9 14.1 58.8 12.5 61.5 8.8 65.7 6.3 67.1 5.1 69.8 2.6 69.9 2.6 144.2 1 143.8 1.3 71.4 1.3 69.9 2.6 68.4 2.5 65.9 5 62.8 6.5 60.2 10 55.8 11.3 53.2 14 47.6 17.8 41.8 21.4 37.8 25.3 32.1 30.3 33.6 9 37.8 10.1 44.9 10 48.8 10.2 110.4 20.3 124.4 22.7 135.8 25.3 141 26.6 146.9 28.9 145.4 30.5 72.7 16.5 71.2 17.6 68.6 17.8 68.4 18.9 64.4 20.4 63 20.1 58.8 20.2 54.4 22.9 51.7 22.7 46 24 42.1 25.4 36.2 25.3 29.4 26.5 23.8 27.7 18.3 29.1 9.8 30.5-21 16.3-29.3 11.3-36.6 9.1-43.2 6.2-48.9 3.9h-56l-60.1-2.6-65.7-3.9-70-6.2-74-8.8-76.9-10.3-79.6-11.3-82.5-14-83.9-13.7-85.4-15.3-86.6-16.4-173.4-34.1-170.5-35.4-165.1-34.4-155-31.5-139.9-29.1-121.7-24.1-53-8.8-47.6-7.6-39.3-6.3-33.4-2.5-75.5-12.7-75.4-15.2-75.6-15-75.4-15.2-77-15.3-77-16.4-76.7-15.1-75.5-13.9-77-14-77-11.4-76.8-10-76.9-7.8-37.8-2.5-39-2.4-37.7-1.2H22353.4l-37.8 1.2-37.7 1.4-37.8 3.5-13.9 7.8-13.9 10-11.2 10.2-11.2 11.3-11.3 12.7-8.3 13.9-8.5 13.9-6.8 15.3-7.1 16.2-5.6 16.6-4.2 16.5-4.1 17.6-1.5 17.8-2.7 17.6v35.6l1.4 18.8 1.3 17.8 2.8 17.6 2.8 17.8 4.2 17.6 5.6 16.5 5.6 16.5 7.1 16.3 8.3 15.2 8.5 15.3 8.3 13.9 9.8 12.6 11.2 11.4 11.2 11.4 12.6 10.1 12.4 7.7 139.8 16.2 141.3 14 144.2 12.6 143.8 10.1 145.5 11.4 146.8 11.4 146.6 11.5 146.9 13.7 72.8 7.8 72.7 7.5 72.6 10.1 71.4 9 71.3 11.3 72.6 11.4 69.9 12.7 71.4 13.9 68.5 15.2 69.8 16.3 68.6 17.8 67.1 18.8 67.2 20.5 67.1 22.7 64.4 22.7 64 26.6 63.1 6.2 99.2 11.4 130 15.2 153.8 20.4 85.3 11.3 88.1 12.7 91 13.9 93.7 15.1 95 16.4 94.9 17.8 96.5 19 95.2 20.1 92.2 21.6 91 21.5 87.9 24 82.5 25.3 79.8 26.6 72.7 27.9 67.1 28.9 60.1 30.4 51.6 31.5 43.6 33.1 33.4 35.4 23.8 35.4 12.6 37.9 1.3 39.3-11.1 40.5-25.3 41.5-23.6 1.4-23.8 1.3-25.3 1.2-23.6 1.3zm-2221.7 475.6 26.6 7.6 27.9 6.4 26.5 7.5 28.2 7.5 40.5 2.5 40.5 5.2 37.7 6.2 37.8 7.7 36.4 8.8 37.8 10.1 37.7 11.3 40.5 11.5v11.3l-78.2 15.3-79.8 13.9-81 11.3-81.1 10.1-82.5 7.7-83.9 4.9-84 3.9-85.2 2.6-85.4 1.3h-173.1l-86.9-2.6-174.8-5.2-176-4.9-177.6-6.4-176.2-3.7-88.2-1.2h-176l-88.1 2.3-86.6 3.9-86.7 5.1-86.9 6.3-85.1 9-85.3 10-83.9 14-84 15-82.4 17.7-44.8 22.8-57.3 27.9-67.1 29.1-75.4 31.5-39.3 15.3-40.5 15.2-41.8 15.1-42 13.9-43.4 13.9-42 12.7-43.3 11.3-41.8 9-42 8.8-42.1 7.5-39 5.2-39.3 2.5-37.6 1.1-35-1.1-33.5-5.2-30.8-6.4-29.4-10-25.1-12.7-22.3-16.3-19.7-19.1-15.3-22.7-12.7-27.8-8.3-30.3-2.7-35.4 16.6-12.6 18.3-11.6 21-11.4 22.3-11.4 23.8-10 25.1-10.1 26.6-10 27.9-9 58.8-16.4 63-15.2 64.2-14 65.7-12.6 67.1-10.1 65.6-10 64.4-7.8 63-6.2 58.8-6.4 54.5-3.6 50.3-3.9 43.4-2.6 72.6-15.2 72.7-13.9 74-12.7 74.2-12.7 73.9-12.6 75.7-10.1 75.6-10 75.4-8.8 76.7-8.8 77.1-6.5 76.9-7.4 76.8-5.2 77-5.2 76.8-4.9 78.2-2.6 77-3.8 78.2-1.3 77.1-1.1 78.2-1.3h77l76.7 1.3 78.3 1.1 77 1.3 76.8 2.5 153.9 7.7 151 10.1 150.9 11.4 148.2 13.9zm1255.5 756.3 46.1 2.6 44.8 2.6 46.1 3.6 46.1 3.8h22.5l12.4 1.4 12.7 1.3v10l-103.3 1.3-104.9 1.3h-53.2l-53.1-1.3-53.2-2.6-53.2-2.6-51.7-4.9-53.2-6.4-51.7-7.5-50.1-8.8-50.5-11.5-50.3-13.8-23.8-7.7-23.8-8.8-23.6-8.8-23.8-9 1.3-24.1 4.3-20.1 5.6-17.8 9.8-13.9 11.2-11.4 12.4-8.8 15.5-6.2 16.6-3.8 19.8-1.3h19.5l21 1.3 22.4 3.8 22.2 4.9 25.4 7.8 23.7 7.4 25.1 8.8 51.7 19.1 50.4 21.4 50.4 22.8 47.4 21.4 43.3 20.4 37.7 16.4 16.9 6.4 15.3 5.1 12.6 3.7 11.2 2.5zm-2678.6 451.6-22.5-2.6-22.4-2.6-18.2-3.5-16.7-3.9-14-5.2-13.9-5-11.4-6.4-9.6-6.1-8.4-9.1-8.4-8.7-7-11.5-7.1-11.3-12.5-30.4-12.6-35.4 14-10.1 13.9-8.8 14.2-9 15.2-7.5 16.9-7.5 15.3-6.4 18.1-4.9 16.8-5.2 36.4-8.8 37.8-6.5 39-4.9 39.3-3.9 39.2-2.5 40.5-1.3 39-1.3h114.7l68.5-2.5 4.2 17.7 2.8 15.3 1.6 15.2-1.6 15-2.8 14-4.2 12.6-5.6 11.3-8.4 11.4-8.4 11.6-9.8 10-12.4 10.2-11.2 8.8-14.2 7.6-13.9 7.5-15.4 7.6-16.8 6.4-33.4 11.4-34.9 10-36.5 8.8-37.7 6.4-36.2 5.3-35.1 3.5-33.6 3.9-30.6 1.3z"></path>',10),I0=[C0];function S0(e,t){return P2(),N3("svg",x0,I0)}const r9={render:S0},A0={xmlns:"http://www.w3.org/2000/svg","xml:space":"preserve",width:"498.531",height:"459.099","shape-rendering":"geometricPrecision","text-rendering":"geometricPrecision","image-rendering":"optimizeQuality","fill-rule":"evenodd","clip-rule":"evenodd",viewBox:"0 0 131903.4 121470"},N0=l3('<defs><linearGradient id="b" gradientUnits="userSpaceOnUse" x1="59875.7" y1="23086.4" x2="81176.3" y2="94808.2"><stop offset="0" stop-color="#292A33"></stop><stop offset="1" stop-color="#1F1E25"></stop></linearGradient><mask id="c"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="188403.9" y1="41267.1" x2="189171.4" y2="40115.9"><stop offset="0" stop-color="#fff"></stop><stop offset="1" stop-opacity="0" stop-color="#fff"></stop></linearGradient><path fill="url(#a)" d="M994 5254.9h129908.5v115230.9H994z"></path></mask></defs><path fill="url(#b)" mask="url(#c)" d="M15783.5 13970.2c170.9 618.9 1614.4 2838.8 2021.8 3556.9 669.8 1180.3 1362.8 2312 2086.3 3554.6 1406.1 2414.9 2765.9 4750.8 4172.5 7114.7 1645.3 2765.4 1402.8 2089.6 762.6 3706.1-443 1118.7-4817.9 11834.1-4931.4 11982.7-176.5 231-4030.3 747.6-4605.2 848.3l-14264.9 2402-28.7 14239.1c774.5 361.5 3220.7 856.3 4173.4 1098.8l12807.4 3285.3c666.9 175.7 1481.1 342.4 2121.8 536.9 508.2 154.3 612.4 819.4 986.1 1734.8l4660.2 11450.8c-299.2 556.9-1078.9 1419.9-1501.5 1970.6-522.4 680.9-1007.8 1313.4-1551.5 1995.9-3003.4 3769.9-6267 7984.3-9212.2 11865.3 557.9 741.1 9578.8 10075.6 10431 10914.4 615.2-282.8 14884.8-10024.1 16083.2-10845.4 1073.3-735.5 564.5-681.3 3023.5 387.8l10839.9 4814.8c651.6 283.7 451.5 161.5 764.9 1505.4 1038.1 4451.4 2037.7 8951.8 3074.1 13436.9l711 3591.2c181.5 902 112.2 1140.9 414.9 1197.4l27.8 116.1c1508.4 128.4 3691.7-21.8 5277.3-33.4l1820.5-17.1 1820.5 17.1c1585.6 11.6 3768.8 161.8 5277.2 33.4l27.9-116.1c302.7-56.5 233.3-295.4 414.9-1197.4l710.9-3591.2c1036.4-4485.1 2036-8985.5 3074.1-13436.9 313.5-1343.9 113.4-1221.7 765-1505.4l10839.9-4814.8c2459-1069.1 1950.2-1123.3 3023.4-387.8 1198.4 821.3 15468 10562.6 16083.2 10845.4 852.2-838.8 9873.2-10173.3 10431-10914.4-2945.1-3881-6208.8-8095.4-9212.2-11865.3-543.6-682.5-1029.1-1315-1551.4-1995.9-422.7-550.7-1202.4-1413.7-1501.5-1970.6l4660.1-11450.8c373.8-915.4 477.9-1580.5 986.2-1734.8 640.6-194.5 1454.8-361.2 2121.7-536.9l12807.4-3285.3c952.7-242.5 3398.9-737.3 4173.4-1098.8l-28.7-14239.1-14264.8-2402c-575-100.7-4428.8-617.3-4605.3-848.3-113.5-148.6-4488.4-10864-4931.4-11982.7-640.1-1616.5-882.7-940.7 762.7-3706.1 1406.6-2363.9 2766.4-4699.8 4172.4-7114.7 723.5-1242.6 1416.5-2374.3 2086.4-3554.6 407.3-718.1 1850.8-2938 2021.8-3556.9-262.7-307.2-2166-1818-2641.1-2210.8-2088.4-1725.8-5987.9-5024.9-7943.5-6502l-5028 3139.5c-3013.1 1926.6-7163.4 4432-9954.2 6331.9-725 493.4-1204.1-39.1-2782.6-821.7-541.3-268.3-2190.1-1194.6-2688.9-1289.3l-2.9 9996.2c166.9 521.8 1013 1093.1 1303.8 1318.6 1645.3 1275 2782.9 2167.5 4301.2 3616 5423.4 5174.5 9665.6 12133.1 11118.5 20269.1 318.3 1782.1 501.6 3602.2 557.7 5424.9 18.9 487.7 31.5 977.1 31.5 1469.4 0 4497.8-800.1 8808.8-2265.4 12798.3-1953.8 5458.4-4522.5 9520-8418.1 13701.8-1184.3 1271.4-2779.8 2698.2-4182.9 3733-4855.9 3581.4-10269.6 5792.7-16203.4 6398.5-1751 287.3-3542.4 454.2-5366.5 488-1824.2-33.8-3615.5-200.7-5366.5-488-5933.8-605.8-11347.6-2817.1-16203.5-6398.5-1403.1-1034.8-2998.5-2461.6-4182.9-3733-3895.5-4181.8-6464.2-8243.4-8418.1-13701.8-1465.3-3989.5-2265.4-8300.5-2265.4-12798.3 0-492.3 12.6-981.7 31.6-1469.4 56.1-1822.7 239.3-3642.8 557.6-5424.9 1453-8136 5695.2-15094.6 11118.6-20269.1 1518.2-1448.5 2655.9-2341 4301.1-3616 290.8-225.5 1137-796.8 1303.8-1318.6l-2.8-9996.2c-498.8 94.7-2147.7 1021-2689 1289.3-1578.5 782.6-2057.6 1315.1-2782.5 821.7-2790.9-1899.9-6941.1-4405.3-9954.2-6331.9L26368 5257.4c-1955.6 1477.1-5855 4776.2-7943.4 6502-475.2 392.8-2378.5 1903.6-2641.1 2210.8z"></path><path fill="#1F1B20" d="M42953.3 9133.4h45717.5l272.5 63501.3-23428.2 17880.5-22561.8-17977.8z"></path><path fill="#E42B24" d="M50798.2 5427.6h30027.5v76393.8L65617.1 94644.6 50798.2 81821.4z"></path><path fill="#FFED00" d="M55397 1013.3h20829.9v89137.6l-10550.2 8327-10279.7-8327z"></path><path fill="#FEFEFE" d="M53406.4 42834.6h204.1l89.1 3.1 88.9 3 89 4.3 87.8 4 88.9 4.2 89 5.1 89.1 6.2 88.8 6.2 2.3 3.2 6.8 2.9 9.2 3.2 11.5 3.1 27.3 5 33 4.3 35.4 4.2 33 4 27.5 3.1 19.4 3.1v-14.4l58.1 8.2 77.6 9.2 93.4 12.5 106.3 14.5 117.3 16.4 123.2 17.6 128.9 19.6 130 21.7 127.9 22.7 123.1 23.7 58.1 12.3 57 13.5 53.7 12.4 51.3 13.5 47.9 12.2 43.4 13.5 39.9 14.5 35.3 13.3 29.7 13.4 25 13.5 19.5 14.4 13.7 13.4h-41l3.3 5.1 4.5 5.3 119.9 30.9 118.6 33.9 118.6 36.2 117.5 37.2 117.5 40.2 116.3 41.3 116.3 43.4 115.2 45.5 115.2 47.4 114.1 48.4 114 50.6 113 51.6 111.8 52.7 111.7 54.5 110.6 55.8 109.6 57.7 109.4 59 108.4 58.8 108.4 60.8 107.2 61.9 106 63 105 63.9 104.9 64 103.8 66 102.7 66.1 101.4 65.9 101.5 68.3 100.4 67 99.2 69.1 98.2 68.2 96.8 69.1 97.1 70.1V45017l16 12.4 20.4 17.4 24 20.7 25.1 20.6 13.7 9.3 12.6 9.3 12.4 8.2 12.6 7.4 11.4 6.1 11.4 4.1 10.3 2h8.1l90.1 72.2 88.8 74.4 87.8 73.2 86.8 75.3 86.8 74.4 85.5 76.4 84.3 76.3 84.5 76.4 83.1 78.4 83.3 77.3 82.2 79.4 81 79.6 81 80.5 79.7 80.5 80 82.5 78.5 82.6-5.6 3-5.7 5.2 28.5 33.1 29.7 32.8 28.6 33.1 29.4 33.1 28.6 33.9 29.7 33.1 29.6 33.1 28.5 34.1 13.8 1.9 14.8 8.4 18.3 11.2 19.4 16.6 20.5 20.7 22.7 24.6 25.2 28 25 31 27.5 33.9 27.3 36.2 28.5 39.2 29.8 40.2 60.3 86.6 61.6 91.8 61.5 94 59.4 94 58.2 90.8 53.5 87.6 47.9 80.4 42.3 70.4 35.4 59.8 26.3 45.3-7.1-1.1-6.8-2 35.4 66 35.5 65.1 35.3 65 36.4 65 35.3 66 35.5 65.1 36.5 65 36.5 64.9 3.3-6.1 3.6-6.3 20.4 40.3 25.2 46.4 28.5 51.7 31.9 54.6 34.3 58.9 34.2 61.9 35.3 62.9 35.4 64 34.1 64 32 63 29.8 61.7 25 58.9 11.3 28.9 10.4 26.8 9.1 26.9 6.8 25.8 5.8 23.7 4.5 23.7 3.3 20.6v20.7l-4.5-5.1-5.6-4.3 28.5 68.3 34.1 90.8 38.8 103 43.4 108.4 21.7 54.6 22.8 51.7 22.7 50.5 22.9 46.5 11.4 21.7 11.4 20.7 11.3 18.5 11.6 18.6 10.1 15.3 11.6 14.5 10.1 12.5 11.4 10.3 2.3-5.2 3.4-5.1 107.3 226 109.5 222.9 54.8 111.4 55.7 111.4 57.1 110.5 56 110.3 58 109.3 57.1 109.6 59.3 109.3 58.3 109.3 60.2 108.3 59.3 108.4 61.8 107.3 61.6 107.4 61.6 107.2 62.6 107.5 63.8 106.1 64.1 106.4 64.8 106.2 65.1 105.3 67.4 105.1 67.2 105.3 20.2 31.2v-5656.6c-977.3-619.4-1651.6-1906.2-1651.6-3387.4 0-181.2 10-359.2 29.5-533.7-636.2-492.7-1113-1268.1-1113-2485.6 0-2105.1 829.6-5060.8 2055.2-6695.1 81.6 88.4 159.9 178.8 235.2 271 171-418.7 372.6-800 597-1104 145.7 161 283.5 317.6 412.2 487.2 192.2-468.5 438.7-912.7 802.9-1301 346.8 358.9 574.4 824.8 756.1 1336.8 108.4-165.8 224.8-332.5 352.4-522.3 230.7 312.6 437.3 707 611.2 1139.5 71.2-104.3 144.9-206.6 221.3-306.2 1225.3 1634.5 2054.4 4589.4 2054.4 6694.1 0 1217.5-476.9 1992.9-1113 2485.6 19.4 174.5 29.6 352.5 29.6 533.7 0 1481.2-674.2 2767.8-1651.4 3387.2v5656.5l19.8-30.9 67.4-105.3 67.3-105.1 65-105.3 65.1-106.2 63.8-106.4 63.9-106.1 62.7-107.5 61.6-107.2 61.6-107.4 61.6-107.3 59.3-108.4 60.5-108.3 58.1-109.3 59.3-109.3 57-109.6 58.2-109.3 55.8-110.3 57.1-110.5 56-111.4 54.7-111.4 109.5-222.9 107.2-226 3.4 5.1 2.3 5.2 11.3-10.3 10.4-12.5 11.3-14.5 10.4-15.3 11.3-18.6 11.4-18.5 11.5-20.7 11.4-21.7 22.8-46.5 22.8-50.5 22.8-51.7 21.7-54.6 43.4-108.4 38.7-103 34.2-90.8 28.5-68.3-5.8 4.3-4.5 5.1v-20.7l3.5-20.6 4.6-23.7 5.7-23.7 6.9-25.8 9-26.9 10.2-26.8 11.5-28.9 25-58.9 29.8-61.7 31.8-63 34.3-64 35.4-64 35.2-62.9 34.4-61.9 34.1-58.9 32-54.6 28.5-51.7 25-46.4 20.7-40.3 3.3 6.3 3.5 6.1 36.3-64.9 36.6-65 35.4-65.1 35.3-66 36.6-65 35.3-65 35.3-65.1 35.4-66-6.8 2-6.9 1.1 26.3-45.3 35.3-59.8 42.2-70.4 47.9-80.4 53.7-87.6 58-90.8 59.4-94 61.6-94 61.6-91.8 60.5-86.6 29.7-40.2 28.5-39.2 27.3-36.2 27.4-33.9 25.1-31 25-28 22.9-24.6 20.5-20.7 19.4-16.6 18.2-11.2 14.9-8.4 13.6-1.9 28.5-34.1 29.7-33.1 29.6-33.1 28.6-33.9 29.7-33.1 28.5-33.1 29.6-32.8 28.5-33.1-5.6-5.2-5.8-3 78.8-82.6 79.7-82.5 79.9-80.5 81-80.5 81-79.6 82.1-79.4 83.3-77.3 83.2-78.4 84.5-76.4 84.3-76.3 85.6-76.4 86.7-74.4 86.6-75.3 87.8-73.2 89.1-74.4 90.1-72.2h8l10.1-2 11.4-4.1 11.6-6.1 12.4-7.4 12.6-8.2 12.6-9.3 13.6-9.3 25.1-20.6 23.9-20.7 20.7-17.4 15.9-12.4V44997.3l96.9-70.1 96.9-69.1 98.1-68.2 99.2-69.1 100.5-67 101.4-68.3 101.6-65.9 102.7-66.1 103.8-66 104.9-64 105-63.9 106-63 107.2-61.9 108.3-60.8 108.4-58.8 109.6-59 109.5-57.7 110.5-55.8 111.8-54.5 111.8-52.7 112.8-51.6 114.1-50.6 114.1-48.4 115.2-47.4 115.1-45.5 116.5-43.4 116.3-41.3 117.5-40.2 117.5-37.2 118.6-36.2 118.6-33.9 119.8-30.9 4.6-5.3 3.3-5.1H75610.3l13.8-13.4 19.4-14.4 25.1-13.5 29.5-13.4 35.5-13.3 39.9-14.5 43.4-13.5 47.8-12.2 51.4-13.5 53.5-12.4 57-13.5 58.2-12.3 123.3-23.7 127.7-22.7 130.1-21.7 128.7-19.6 123.2-17.6 117.6-16.4 106-14.5 93.5-12.5 77.6-9.2 58.2-8.2v14.4l19.4-3.1 27.3-3.1 33-4 35.4-4.2 33.3-4.3 27.2-5 11.4-3.1 9.1-3.2 7-2.9 2.2-3.2 88.9-6.2 89.1-6.2 88.9-5.1 89-4.2 87.8-4 88.8-4.3 89.1-3 89-3.1H78290.8l124.2 4.1 124.4 6.3 124.4 7.2 121.9 8.2 122.1 11.3 120.8 11.4 120.9 13.5 119.9 15.4 118.6 15.4 118.5 18.7 117.6 18.6 117.4 21.6 117.6 21.7 116.3 23.6 115.1 24.9 115.3 26.7 115.1 27.8 115.3 29.1 114 30.9 114.1 31.9 114.1 34.1 114 34.1 112.8 36 114.3 38.2 112.8 39.4 113 40.2 112.8 41.3 112.9 42.1 113 44.4 112.8 46.4 113 46.5 112.8 48.5 1.3 6.1v6.3l19.4 6.1 28.5 10.4 35.4 13.4 42.1 17.5 46.7 19.6 50.2 21.7 53.7 22.7 52.5 23.8 52.5 24.7 51.2 24.8 46.7 23.6 42.3 22.8 18.3 10.4 17.1 10.2 14.8 10.4 12.5 8.2 11.4 9.2 8 7.4 4.6 7.2 3.4 5-361.5 81.6-343.4 93.9-327.3 106.3-311.4 118.7-297.8 129.9-282.8 141.4-269.1 151.6-257.8 162.2-245.3 172.3-233.7 180.6-223.6 190.8-213.4 199.3-204.1 206.2-197.3 214.6-189.3 220.8-181.4 228.1-176.7 234.3-170 240.3-166.6 244.6-163 250.8-158.5 253.8-157.5 259-155.1 262-153.9 264.1-308.1 537.8-313.7 543.7-160.7 273.4-163.1 273.4-168.7 273.5-172.4 272.5-18.2 21.7-23.9 29.9-29.7 38.1-33.2 46.4-81.9 111.4-97 133.1-109.5 151.7-118.6 164.1-126.7 171.3-129.9 174.4-66.3 86.7-66.1 84.5-65 84.7-65 80.5-62.8 78.3-62.6 75.4-60.6 70.1-58.1 66.2-56 59.8-52.4 54.6-50.2 47.6-45.5 40.2-42.3 32.1-37.6 23.6-34.2 15.5-28.4 5.1-25.3 34.1-27.2 33.1-29.8 33.9-29.5 34.2-32.1 34-33 32.9-34.3 34.1-35.4 33.1-35.3 32.9-37.6 34.1-37.6 32-38.9 33.1-39.8 32.9-39.9 32-41.2 32-39.8 30.9-83.3 63-84.5 60.9-83.3 58.8-83.2 56.8-81 55.7-80.8 53.6-76.5 50.6-74.2 49.5-23.9 33.1-27.3 32-32 31.9-35.3 30.9-38.9 29.1-42.1 29.8-44.5 27.9-46.9 26.7-50.2 27-52.5 26.8-53.5 25.7-54.7 24.8-57.1 24.8-58 23.6-58.3 23.8-59.3 22.8-119.8 46.3-118.6 44.5-116.4 44.2-111.8 43.4-52.4 21.7-51.2 22.8-49.1 21.6-46.8 21.7-44.4 22.6-41.2 22.7-37.6 22.8-34.3 23.8-183.5 74.2-184.9 71.2-187 69.1-188.2 67.1-189.3 66-190.5 64-190.4 63-191.7 61.9-383.2 122.8-382 124.7-189.4 63-190.4 64-188.2 67-187.1 67.2-184.8 70.2-184.8 73.2-181.4 75.2-180.2 79.5-176.7 81.5-175.6 86.8-172.4 89.7-80.3 45.2v.2l-88.3 49.6-166.6 100.1-162 105.3-159.7 110.4-155 116.5-150.6 121.8-147.1 129.1-141.6 136.1-137.8 142.4v-.1l-5.5-30.9-5.1 31-.1-.1-138-142.3v-.1l-141.3-136-.1-.1-147-129-.1-.1-150.5-121.7-.1-.1-155.1-116.4-.1-.1-159.7-110.3v-.1l-161.8-105.2-.1-.1-166.4-100h-.1l-88.2-49.6v-.1l-80.6-45.3-172.3-89.7-175.6-86.8-176.8-81.5-180.2-79.5-181.3-75.2-184.9-73.2-184.7-70.2-187-67.2-188.2-67-190.6-64-189.2-63-382.1-124.7-383.2-122.8-191.8-61.9-190.3-63-190.5-64-189.5-66-188-67.1-187.2-69.1-184.7-71.2-183.7-74.2-34.1-23.8-37.8-22.8-40.9-22.7-44.6-22.6-46.8-21.7-48.9-21.6-51.5-22.8-52.4-21.7-111.8-43.4-116.4-44.2-118.6-44.5-119.6-46.3-59.3-22.8-58.3-23.8-58.1-23.6-56.9-24.8-54.9-24.8-53.6-25.7-52.5-26.8-50.2-27-46.7-26.7-44.5-27.9-42.1-29.8-38.9-29.1-35.3-30.9-32-31.9-27.3-32-24-33.1-74.2-49.5-76.4-50.6-81-53.6-81-55.7-83.2-56.8-83.3-58.8-84.3-60.9-83.3-63-39.9-30.9-41.1-32-39.8-32-40-32.9-38.8-33.1-37.6-32-37.6-34.1-35.5-32.9-35.4-33.1-34.1-34.1-33-32.9-32.1-34-29.7-34.2-29.6-33.9-27.2-33.1-25.2-34.1-28.6-5.1-34.2-15.5-37.6-23.6-42.2-32.1-45.6-40.2-50.3-47.6-52.4-54.6-55.8-59.8-58.3-66.2-60.3-70.1-62.9-75.4-62.6-78.3-65.1-80.5-65.1-84.7-66-84.5-66.2-86.7-129.9-174.4-126.7-171.3-118.6-164.1-109.5-151.7-96.9-133.1-82.2-111.4-33.1-46.4-29.5-38.1-24-29.9-18.2-21.7-172.3-272.5-168.9-273.5-162.9-273.4-161-273.4-313.7-543.7-307.8-537.8-154-264.1-155.2-262-157.4-259-158.5-253.8-163.2-250.8-166.5-244.6-169.9-240.3-176.9-234.3-181.2-228.1-189.4-220.8-197.4-214.6-204.1-206.2-213.3-199.3-223.5-190.8-233.9-180.6-245.1-172.3-257.8-162.2-269.2-151.6-282.9-141.4-297.6-129.9-311.3-118.7-327.6-106.3-343.1-93.9-361.7-81.6 3.6-5 4.5-7.2 7.8-7.4 11.5-9.2 12.5-8.2 14.9-10.4 17.2-10.2 18.1-10.4 42.2-22.8 46.8-23.6 51.3-24.8 52.5-24.7 52.5-23.8 53.5-22.7 50.2-21.7 46.7-19.6 42.4-17.5 35.3-13.4 28.5-10.4 19.4-6.1v-6.3l1.1-6.1 113-48.5 112.8-46.5 113.1-46.4 112.8-44.4 113-42.1 112.8-41.3 113-40.2 112.8-39.4 114.1-38.2 113-36 114.1-34.1 114-34.1 114.1-31.9 114.1-30.9 115-29.1 115.3-27.8 115.1-26.7 115.3-24.9 116.3-23.6 117.4-21.7 117.5-21.6 117.6-18.6 118.6-18.7 118.6-15.4 119.7-15.4 120.9-13.5 121-11.4 121.9-11.3 122.2-8.2 124.4-7.2 124.1-6.3 124.4-4.1zM50881.6 16799h3303.2v10430h-3496.2V16799h193zm5496.9 386.1h-.1V26843h.1v-9657.9zm8383.1 2144.7 379.2 47.4V26843h.1v-7465.8l-379.3-47.4zm-1198.9-2144.7h-.1l-1531.7 5965 1531.8-5965zm6058.9 0h-.1V26843h.1v-9657.9zm8383.1 2144.7 379.2 47.4V26843h.1v-7465.8l-379.3-47.4zm-1198.8-2144.7h-.1l-1531.8 5965 1531.9-5965zM56185.4 16799h4231.8l1427.1 5532.5L63265 16799h4410.8v10430h-2921v-6327.4L63130 27229h-2592.6l-1617-6319.1V27229h-2928V16799h193zm13243.1 0h4231.8l1427 5532.5 1420.8-5532.5h4410.8v10430h-2921v-6327.4L76373.1 27229h-2592.6l-1617-6319.2V27229h-2928V16799h193zm-4268.7 61389.7 659.3 981.2 617.7-981.2L66086 69311c67.7-3.1 135.1-7.5 202.3-12.8l551.9 8427.1 629.9-1237.9-822.8-7229c68.8-9.7 137.3-20.4 205.3-32.4l976.1 6913.1 526-1285.4-1115.3-5710.4c75-18.6 149.3-38.6 223.1-60l1257.2 5504.4 445.4-724.6 730.3 416-1780.4-5427.8c52.2-22.2 103.8-45.1 155.2-68.7l1926.8 5457.8 1105.5 840.8-2677-6476.1c61-33.1 121.1-67.6 180.7-102.7l2982.1 6696.8 1171.1 746.9-3848.7-7635.6c57-38.4 113-78.1 168.5-118.5l4276.7 7940.7 1065.8 511 34.5-1159-4926-7655.4c49.6-44.1 98.7-88.7 146.8-134.4l4891.3 7185.8-85.1-1386.3-4557.7-6050.4c46.1-49.3 91.5-99.3 135.8-150.1l4554.1 5718.3-199.1-1374.4-4112.7-4640.6c35.8-46.8 71-94.1 105.3-141.9l4216.8 4464.3 16.1-850.2 840.4-12.2-4721.4-4153.7c20.1-35.8 39.9-71.9 59.4-108.2l4855.7 4169.7 1377.4 177.5-6068.3-4679.8c26.8-58.7 52.7-117.9 77.6-177.7l6470.7 4717.7 1387.4 63.7-7738.6-5092.8c21-59.7 41.3-119.8 60.3-180.4l8288.4 5137.6 1178.7-88.4-547.9-1021.9L71579 64680c13-59.3 25.2-118.8 36.3-178.8l8542.6 4139.8-765-1159.3-7727.3-3297.3c7.9-60.6 14.8-121.5 20.9-182.7l7580.6 2996.2-857.7-1092.4-6699.2-2248.1 2.5-67.5 6640.9 2063.6-403.1-748.7 726.5-423-6975.8-1478.7c-3.5-50.8-7.7-101.5-12.5-152.1l7216.1 1409.4 1285.4-525.9-8540.7-1206c-8.4-56.1-17.7-111.9-27.6-167.5l8916.6 1014.9 1237.8-630.1-10212.7-668.8c-12.3-52.9-25.4-105.5-39.1-157.9l10715.2 423.5 981.2-617.9-981.2-659.1-919.3 35.2c50.9 242.2-20.5 485.9-134.9 595.5-557.6 569.3-1524.1 295.5-1623-511.4l-2.8-16.8-7266.1 278c-1950.3 895.8-4166.7 1765.2-6320.2 1748.2-2555.1-207.5-4868.2-970.6-6790.8-1753.8l-7595.8-290.6-6 35c-98.8 806.9-1065.5 1080.7-1623.1 511.4-117.1-112.3-189.3-365.8-130.7-613.8l-442.8-16.9-981.2 659.1 981.2 617.9 10715.3-423.5c-13.6 52.4-26.7 105.1-39 158l-10212.8 668.7 1237.7 630.1 8916.8-1014.9c-10 55.6-19.2 111.4-27.6 167.5l-8540.9 1206 1285.4 525.9 7216.2-1409.4c-4 42.7-7.7 85.4-10.9 128.2L52891 64437.7l715.5 459.9-430.5 721.8 6734.3-2060.1c.6 24.3 1.6 48.5 2.6 72.8l-6774.5 2273.4-857.8 1092.4 7654.3-3025.4c5.8 60.6 12.1 120.9 19.6 181l-7799.8 3328.2-764.9 1159.3 8612.5-4173.7c10.7 59.5 22.5 118.5 34.9 177.3L51186 69220.5l-547.9 1021.9 1178.7 88.4 8352.4-5177.2c18.5 60.2 38.1 119.9 58.4 179.2L52427 70466.4l1387.4-63.7 6529.5-4760.7c24.2 59.5 49.2 118.6 75.4 177l-6125 4723.5 1377.5-177.5 4908.2-4214.8c27.9 53.1 56.5 105.9 85.9 158.1L55941.4 70503l849.2 42.2-13.4 840.4 4238.9-4529c24.5 34.3 49.3 68.2 74.6 101.8l-4146.8 4679.4-199.3 1374.4 4584.8-5756.9c43.7 51 88.4 101.3 133.8 150.7l-4586.3 6088.4-85.2 1386.3 4916.7-7223.1c47.5 45.9 95.7 91.2 144.7 135.6l-4949.3 7691.5 34.5 1159 1065.9-511 4294.6-7974.1c54.9 40.7 110.7 80.3 167 119.1l-3865.1 7668.4 1171-746.9 2995.4-6726.8c59.1 35.7 119.1 70.2 179.5 103.8l-2689.1 6505 1105.5-840.8 1936-5483.4c62.9 29.6 126.3 58.4 190.4 85.8L61725 74280.3l753.8-393.7 413.8 731.5 1247.1-5541.3c67.4 19.8 135.2 38.9 203.5 56.4l-1117.3 5720.5 526 1285.4 977.3-6921.1c68 12.6 136.1 24.1 204.8 34.4l-823.4 7235 630 1237.9 552.1-8430.9c68.6 6.1 137.5 11.2 206.9 14.9l-339.8 8879.4zm15874.3-17077-1098.1 42c184.7 616.5 1151.7 664.2 1098.1-42zm-8292.1 126.2 6742.5-441.5c-40.1-178.5-94.1-396.3-163.9-641.6l-5651.1 643.2c-300.1 142.9-609.7 290.8-927.5 439.9zm7181.5-470.3 993.8-65.1c-21.4-46.9-45.6-95.6-73.5-146.3 91.2 36.9 167.7 83.3 231 136l701.5-45.9-1237.8-630-66.1 7.4c-297 161.2-491.6 456.2-548.9 743.9zm-5591-282.8 4880.6-689.1c-62.4-197.9-133.9-408.1-215-625.9l-93.3-38.2-1326.2 259.1c71 100.9 142.8 199.8 215.5 296.2-661.9-416.1-1899.9 68.9-3461.6 797.9zm-20502.4-1136.1-1111-217.1-657.6 269.2c-39.5 112.8-76.5 223.1-110.8 330l4890.3 690.5c-1738.9-781.8-2895.5-1282.9-3255.8-734.4 82.8-109.8 164.5-222.7 244.9-338.2zm3757.5 1407.7-5749.9-654.5c-72.9 252.8-129.5 477.9-171.9 663.4l6994.1 458.1c-374.5-158.4-732.2-315.5-1072.3-467zm-6745.3-616.4-994.6 506.3 258 16.9c55.5-40.8 119.7-77 193.9-107-21.9 39.7-41.6 78.3-59.4 115.8l972.8 63.7c-51.1-217.7-179.5-436.6-370.7-595.7zm370.2 995.5-1101.7-42.1c-72.5 732.3 929.5 681.2 1101.7 42.1zm17522.6-18215.3c-452.1 335.8-978.5 534.6-1469.9 651.2-18 776.2-156.2 1481.4-372.5 2019.7 913.7-440.6 1614.7-1441.5 1842.4-2670.9zm-1650.1 690.7c-511.1 103.4-967.3 122.1-1236.5 122.1-269.2 0-725.3-18.7-1236.4-122 348 1098.8 1120.4 1861.9 1236.4 1861.9s888.5-763.1 1236.5-1862zm-2653-39.5c-491.4-116.7-1017.9-315.4-1470-651.2 227.9 1229.4 928.8 2230.3 1842.5 2670.9-216.3-538.3-354.5-1243.5-372.5-2019.7z"></path><path fill="#B0CB1F" d="M76646.6 57286.6c187.7 403.3 401.6 797.7 633.6 1177.7 355.6-160.8 696.9-362.3 1015-616-373.2-648.6-838.8-1286.1-1413-1811.2 198.8-546 1244.9-872.9 2079.5-777.2 150.6 498.2 337.2 984 557.1 1459.3 305.5 606.1 580.1 1099.2 826.1 1505.1 360.3 566.4 768.4 1119.4 1219.9 1662.4 418.5 456 587.3 570.2 573.5 1164.1 352.6 1231-5131.7 4330-6505.3 3272.5-1340.1-1216.5-547.2-1857.9-903.8-3510.7-2238.7 955.5-5435.4 2820.8-8600.4 2749.8-3092.2-69.3-6259.5-1395.7-9688-2866.3-421.4 1739.9 440.7 2382.6-930.5 3627.2-1373.5 1057.5-6857.9-2041.5-6505.2-3272.5-14-593.9 155-708.1 573.4-1164.1 451.4-543 859.6-1096 1220-1662.4 246-405.9 520.6-899 826-1505.1 219.9-475.3 406.4-961.1 557.2-1459.3 834.6-95.7 1880.7 231.2 2079.4 777.2-574.3 525.1-1039.9 1162.6-1413.1 1811.2 388.9 310 812.2 542.3 1254.1 717.1 256.1-410.9 491.6-839.7 696.1-1278.8 310.5-712.8 558.4-1472.9 790.8-2244.4 2136.3-1183.7 4357.4 1968 10133.4 2169.6 5775.9-201.6 7996.9-3353.3 10133.3-2169.6 232.5 771.5 480.2 1531.6 790.9 2244.4z"></path><path fill="#009846" d="M65771.6 40017.9c15.6-885-64.2-2246.1-492.8-3604-288.6-914.8-735.5-1827.7-1417.8-2590.2-565.7 780.5-1043.8 1845.7-1388.9 2970.2-377.3 1229.3-595.3 2528.3-595.3 3603.7 0 1118.6 411.5 1854.5 976.8 2337.8l1.6-11.1h152.5c7.4 51 15.6 101.6 24.6 152 152.9 111.3 314 206.8 479.3 288.7 275.8 136.7 563.1 235.8 841.5 307.6l-.3-74.4c0-95.6 2-194.6 6.1-296.2 4-102.7 9.9-201 17.3-295h153.7c20.7 257.7 71.5 504.9 142.1 737.3 486.3 94.3 918.4 111.5 1176.5 111.5s690.2-17.2 1176.6-111.5c70.6-232.4 121.3-479.6 142-737.3h153.8c7.4 93.8 13.3 192.1 17.4 294.5 4 102.1 6.1 201.2 6.1 296.7l-.4 74.3c278.4-71.8 565.6-170.8 841.4-307.5 165.3-81.9 326.5-177.3 479.4-288.7 9-50.3 17.1-101 24.5-152h152.5l1.7 11.1c565.2-483.3 976.8-1219.2 976.8-2337.8 0-1075.1-218-2374-595.1-3603-343.9-1120.7-819.8-2182.3-1382.9-2962.2-584.7 787-1008.3 1728.1-1306.2 2671.7-410.5 1300-582.7 2603-610.7 3518l-153.8-3.3v-.9zm-4934.1 6630.2c0 62.1-6 138.2-9.7 191.1-2 26.9-.7 53.2-4.6 73.3-31 23.6-411 21.1-419.7 11.4 10.4-77.6 15.1-46.4 23-106 28-207.6 172-414.6 227.9-457.5 1.8-4.9 89.6-4.7 92.4 0 66.6 62.7 90.7 262.3 90.7 287.7zm9931.9 0c0 62.1 6.1 138.2 9.8 191.1 1.9 26.9.6 53.2 4.5 73.3 31.1 23.6 411 21.1 419.7 11.4-10.3-77.6-15-46.4-23-106-27.9-207.6-172-414.6-227.8-457.5-1.9-4.9-89.7-4.7-92.4 0-66.7 62.7-90.8 262.3-90.8 287.7zm-16733.1 9389c-183.3-546-1063.2-757.4-1833.4-661.8-512.3 1834.7-1672.4 3293.9-2968.6 4881.1 1228-894.8 2074.3 96.8 1998.7 770.6-96.7 880.8-1662.2 852.7-933.4-470.8-620.5 251-557.2 933.7-341.9 1140.1 557.6 569.3 1524.3 295.5 1623.1-511.4 106-632.4 740.7-3447.8 2455.5-5147.8zm11653.4 1544.6c5800.2-197.8 7856.5-3386.2 9997.1-2155.7 445.8 1535.1 1213.3 3074.7 2107.3 4260.9-1654.1-1040-6901.8 3546.2-11820.7 3507.4-6584.8-534.6-11564.9-4760.6-12388.2-3507.4 894.3-1186.2 1661.5-2725.8 2107.4-4260.9 2140.5-1230.5 4196.8 1957.9 9997.1 2155.7zm11417.1-1544.6c183.4-546 1063.5-757.4 1833.5-661.8 512.4 1834.7 1672.4 3293.9 2968.8 4881.1-1228.2-894.8-2074.3 96.8-1998.8 770.6 96.8 880.8 1662.2 852.7 933.5-470.8 620.3 251 557.2 933.7 341.7 1140.1-557.6 569.3-1524.1 295.5-1623-511.4-106.1-632.4-740.8-3447.8-2455.7-5147.8zM53406.5 42834.6H53610.6l89.1 3 88.9 3.1 89 4.2 87.8 4 88.8 4.2 89.1 5.1 89 6.2 88.9 6.2 2.2 3.2 6.9 2.9 9.1 3.2 11.5 3.2 27.4 5 33 4.2 35.4 4.2 33 4 27.5 3.2 19.4 3v-14.4l58 8.2 77.7 9.3 93.4 12.4 106.3 14.5 117.3 16.5 123.2 17.5 128.9 19.6 129.9 21.7 128 22.7 123.1 23.8 58.1 12.2 57 13.5 53.7 12.4 51.2 13.5 48 12.2 43.4 13.5 39.9 14.5 35.3 13.3 29.7 13.5 25 13.5 19.5 14.3 13.6 13.5h-41l3.4 5.1 4.5 5.2 119.8 31 118.7 33.9 118.6 36.2 117.5 37.1 117.4 40.2 116.4 41.3 116.3 43.4 115.2 45.5 115.1 47.4 114.1 48.4 114.1 50.6 113 51.6 111.7 52.7 111.8 54.6 110.6 55.7 109.5 57.8 109.5 58.9 108.3 58.8 108.4 60.8 107.3 62 106 63 105 63.8 104.9 64 103.8 66 102.6 66.1 101.5 65.9 101.4 68.3 100.5 67 99.2 69.1 98.1 68.2 96.9 69.1 97.1 70.2v19.6l16 12.4 20.4 17.5 23.9 20.6 25.2 20.7 13.7 9.2 12.6 9.3 12.4 8.3 12.6 7.3 11.4 6.1 11.4 4.2 10.3 1.9h8l90.1 72.2 88.9 74.4 87.8 73.3 86.8 75.2 86.7 74.4 85.6 76.4 84.3 76.3 84.5 76.4 83 78.4 83.3 77.3 82.3 79.4 81 79.6 80.9 80.5 79.8 80.5 80 82.5 78.5 82.6-5.6 3-5.8 5.2 28.5 33.1 29.8 32.9 28.5 33 29.5 33.1 28.6 33.9 29.7 33.1 29.6 33.1 28.5 34.1 13.8 1.9 14.7 8.4 18.3 11.2 19.5 16.6 20.5 20.7 22.7 24.6 25.2 28 25 31 27.5 33.9 27.2 36.2 28.5 39.2 29.8 40.2 60.3 86.7 61.6 91.8 61.6 93.9 59.4 94 58.2 90.8 53.5 87.6 47.9 80.5 42.3 70.3 35.4 59.8 26.2 45.3-7-1-6.8-2.1 35.4 66.1 35.5 65 35.3 65 36.4 65.1 35.3 65.9 35.5 65.1 36.5 65.1 36.5 64.8 3.3-6.1 3.5-6.3 20.5 40.3 25.2 46.5 28.5 51.6 31.8 54.6 34.3 58.9 34.3 61.9 35.3 62.9 35.4 64 34.1 64 32 63 29.7 61.8 25.1 58.9 11.3 28.8 10.4 26.8 9.1 27 6.8 25.7 5.7 23.8 4.6 23.6 3.3 20.6v20.7l-4.5-5.1-5.7-4.3 28.6 68.3 34 90.8 38.9 103.1 43.4 108.4 21.7 54.5 22.7 51.7 22.7 50.6 23 46.4 11.4 21.7 11.3 20.7 11.4 18.6 11.6 18.5 10.1 15.4 11.6 14.5 10.1 12.4 11.3 10.3 2.3-5.2 3.5-5.1 107.3 226.1 109.4 222.8 54.9 111.5 55.7 111.4 57.1 110.4 55.9 110.3 58.1 109.3 57 109.6 59.3 109.3 58.3 109.3 60.3 108.4 59.3 108.3 61.8 107.3 61.6 107.4 61.5 107.2 62.6 107.5 63.9 106.2 64.1 106.3 64.8 106.2 65.1 105.3 67.4 105.2 67.2 105.3 20.1 31.1v-5565.5c-314.1-191.7-598.5-449.8-841.8-760-547.6-697.6-887-1659.8-887-2718.4 0-116.2 4.2-232.5 12.4-348.3 3.5-50.5 7.9-100.9 13.1-151-636.2-506.1-1109.1-1294.4-1109.1-2520 0-1089.3 220.8-2404.7 602.6-3649 361.1-1176.4 867.3-2290.8 1468.3-3092.2l55.4-73.7 62.5 67.7c53.9 57.2 105.8 116.1 156.7 176.4 162.5-378.2 350.3-722.6 557.3-1003.2l55.8-75.4 63.1 69.7c117.6 129.3 228.9 255 335 388.1 187.6-431.1 426.5-840 766.9-1203.1l55.3-58.8 56.4 58.3c323.4 334.5 544.5 756.5 720.7 1220.5 42-62.6 85.3-126.1 129.9-191.7l199.4-294.4 64.8 87.8c211.2 286.2 402.1 638.5 566.7 1025.3 46.5-65.4 94.1-129.8 142.8-193.1l61.9-80.6 60.8 81.2c600.8 801.5 1106.9 1915.8 1467.7 3091.9 381.8 1244.1 602.4 2559.2 602.4 3648.3 0 1225.6-473 2013.9-1109.1 2520 5.2 50.3 9.7 100.9 13.3 151.5 8.2 115.6 12.4 231.7 12.4 347.8 0 1058.6-339.5 2020.8-886.8 2718.6-243.5 310-527.4 567.8-841.8 759.9v5565.2l19.9-30.9 67.4-105.3 67.3-105.2 64.9-105.3 65.1-106.2 63.9-106.3 63.8-106.2 62.8-107.5 61.6-107.2 61.5-107.4 61.7-107.3 59.3-108.3 60.5-108.4 58-109.3 59.3-109.3 57.1-109.6 58.2-109.3 55.8-110.3 57.1-110.4 56-111.4 54.7-111.5 109.5-222.8 107.2-226.1 3.3 5.1 2.3 5.2 11.4-10.3 10.3-12.4 11.4-14.5 10.3-15.4 11.4-18.5 11.3-18.6 11.6-20.7 11.4-21.7 22.7-46.4 22.9-50.6 22.8-51.7 21.7-54.5 43.4-108.4 38.6-103.1 34.3-90.8 28.5-68.3-5.8 4.3-4.5 5.1v-20.7l3.5-20.6 4.6-23.6 5.7-23.8 6.8-25.7 9.1-27 10.2-26.8 11.5-28.8 25-58.9 29.8-61.8 31.8-63 34.3-64 35.3-64 35.3-62.9 34.4-61.9 34-58.9 32.1-54.6 28.5-51.6 25-46.5 20.7-40.3 3.3 6.3 3.5 6.1 36.3-64.8 36.6-65.1 35.4-65.1 35.3-65.9 36.6-65.1 35.3-65 35.3-65 35.4-66.1-6.8 2.1-6.9 1 26.2-45.3 35.4-59.8 42.2-70.3 47.9-80.5 53.7-87.6 58-90.8 59.4-94 61.5-93.9 61.6-91.8 60.6-86.7 29.7-40.2 28.5-39.2 27.3-36.2 27.4-33.9 25-31 25.1-28 22.9-24.6 20.4-20.7 19.5-16.6 18.1-11.2 14.9-8.4 13.7-1.9 28.5-34.1 29.7-33.1 29.6-33.1 28.6-33.9 29.7-33.1 28.5-33 29.5-32.9 28.5-33.1-5.5-5.2-5.8-3 78.7-82.6 79.8-82.5 79.9-80.5 81-80.5 81-79.6 82-79.4 83.3-77.3 83.3-78.4 84.4-76.4 84.4-76.3 85.6-76.4 86.7-74.4 86.6-75.2 87.8-73.3 89.1-74.4 90.1-72.2h8l10.1-1.9 11.4-4.2 11.5-6.1 12.5-7.3 12.6-8.3 12.5-9.3 13.7-9.2 25-20.7 24-20.6 20.7-17.5 15.9-12.4v-19.6l96.9-70.2 96.8-69.1 98.2-68.2 99.2-69.1 100.4-67 101.5-68.3 101.6-65.9 102.7-66.1 103.7-66 105-64 105-63.8 106-63 107.2-62 108.2-60.8 108.5-58.8 109.6-58.9 109.4-57.8 110.6-55.7 111.8-54.6 111.8-52.7 112.8-51.6 114-50.6 114.1-48.4 115.3-47.4 115.1-45.5 116.5-43.4 116.3-41.3 117.4-40.2 117.5-37.1 118.7-36.2 118.6-33.9 119.8-31 4.6-5.2 3.3-5.1h-41.2l13.9-13.5 19.4-14.3 25-13.5 29.6-13.5 35.5-13.3 39.9-14.5 43.3-13.5 47.8-12.2 51.5-13.5 53.5-12.4 57-13.5 58.2-12.2 123.2-23.8 127.7-22.7 130.1-21.7 128.8-19.6 123.2-17.5 117.5-16.5 106.1-14.5 93.5-12.4 77.5-9.3 58.3-8.2v14.4l19.4-3 27.3-3.2 33-4 35.4-4.2 33.2-4.2 27.3-5 11.3-3.2 9.2-3.2 7-2.9 2.2-3.2 88.9-6.2 89.1-6.2 88.8-5.1 89.1-4.2 87.7-4 88.9-4.2 89.1-3.1 89-3h204.2l124.2 4 124.4 6.3 124.3 7.2 122 8.2 122.1 11.3 120.8 11.5 120.9 13.4 119.8 15.4 118.6 15.4 118.6 18.7 117.6 18.6 117.4 21.6 117.5 21.7 116.4 23.6 115.1 24.9 115.3 26.8 115.1 27.8 115.3 29 114 31 114 31.8 114.1 34.1 114.1 34.1 112.8 36.1 114.2 38.1 112.8 39.4 113.1 40.2 112.8 41.3 112.8 42.2 113.1 44.4 112.8 46.4 113 46.4 112.8 48.5 1.2 6.1v6.4l19.5 6.1 28.5 10.3 35.3 13.4 42.2 17.6 46.7 19.6 50.2 21.6 53.6 22.8 52.5 23.7 52.5 24.8 51.3 24.7 46.7 23.7 42.3 22.7 18.2 10.4 17.2 10.2 14.8 10.4 12.4 8.2 11.5 9.2 8 7.5 4.6 7.1 3.4 5.1-361.5 81.5-343.4 93.9-327.3 106.4-311.5 118.6-297.7 130-282.9 141.3-269 151.7-257.8 162.2-245.3 172.2-233.7 180.6-223.6 190.9-213.4 199.2-204.1 206.2-197.4 214.7-189.3 220.7-181.3 228.1-176.8 234.3-170 240.3-166.5 244.6-163.1 250.9-158.5 253.7-157.4 259-155.1 262-153.9 264.2-308.1 537.7-313.7 543.7-160.7 273.4-163.1 273.4-168.8 273.5-172.3 272.5-18.2 21.7-23.9 29.9-29.8 38.1-33.1 46.4-82 111.5-96.9 133.1-109.5 151.7-118.6 164-126.7 171.3-129.9 174.4-66.4 86.8-66 84.4-65 84.7-65.1 80.5-62.7 78.3-62.6 75.5-60.6 70.1-58.1 66.1-56 59.9-52.4 54.6-50.3 47.5-45.4 40.2-42.4 32.1-37.6 23.6-34.1 15.5-28.5 5.1-25.2 34.1-27.3 33.1-29.7 34-29.6 34.1-32 34-33 32.9-34.3 34.1-35.4 33.1-35.3 32.9-37.6 34.1-37.6 32-38.9 33.1-39.8 32.9-39.9 32-41.2 32-39.8 30.9-83.3 63-84.5 61-83.3 58.7-83.2 56.8-81 55.7-80.9 53.7-76.4 50.5-74.2 49.5-23.9 33.1-27.3 32-32 31.9-35.4 31-38.8 29-42.2 29.9-44.4 27.8-46.9 26.7-50.2 27-52.5 26.8-53.5 25.7-54.7 24.9-57.1 24.7-58 23.7-58.3 23.7-59.3 22.8-119.8 46.3-118.6 44.5-116.4 44.2-111.8 43.4-52.4 21.7-51.3 22.8-49 21.6-46.9 21.7-44.3 22.6-41.2 22.7-37.6 22.8-34.3 23.8-183.5 74.2-184.9 71.2-187 69.1-188.2 67.1-189.3 66-190.5 64-190.5 63-191.6 61.9-383.2 122.8-382.1 124.7-189.3 63-190.4 64-188.3 67-187 67.2-184.9 70.2-184.7 73.3-181.5 75.2-180.2 79.4-176.6 81.5-175.7 86.8-172.3 89.7-80.4 45.3v.2l-88.3 49.6-87.8 52.8V46994c-40.6 20.3-81.1 40.6-122.6 59.2V56336l-118.2 76.8-57.8 40v-9327.9c-48.2 17.6-98.3 34.3-149.2 49.3v9384.6l-107.7 80.9-41.6 33.7v-9460.2c-58.5 12.7-117 24.7-176 33.5v9573.5l-80.1 70.4-42.6 40.9v-9669.3c-61 5.5-123.6 9.9-185.7 11.5v9842.6l-51.1 52.8-5.5-31-5.1 31-51.1-52.8v-9842.6c-62.5-2.4-123.9-5.5-185.8-11.4v9669.3l-42.5-41-80.2-70.4v-9573.5c-59.3-8.6-118.4-20-175.9-33.5v9460.2l-41.6-33.7-107.7-80.8v-9384.7c-51-14.3-100.6-31.2-149.3-49.3v9328l-58-40.1-118-76.8v-9282.8c-41.9-18.5-82.6-38.3-122.6-59.2v9266.2l-87.7-52.8-88.3-49.6v-.2l-80.5-45.3-172.3-89.7-175.7-86.8-176.8-81.5-180.2-79.4-181.2-75.2-185-73.3-184.6-70.2-187-67.2-188.3-67-190.5-64-189.2-63-382.1-124.7-383.3-122.8-191.8-61.9-190.3-63-190.4-64-189.5-66-188.1-67.1-187.1-69.1-184.8-71.2-183.6-74.2-34.2-23.8-37.7-22.8-40.9-22.7-44.7-22.6-46.7-21.7-48.9-21.6-51.5-22.8-52.4-21.7-111.8-43.4-116.4-44.2-118.6-44.5-119.6-46.3-59.3-22.8-58.3-23.7-58.1-23.7-57-24.7-54.8-24.9-53.6-25.7-52.5-26.8-50.2-27-46.7-26.7-44.5-27.8-42.2-29.9-38.8-29-35.3-31-32-31.9-27.4-32-23.9-33.1-74.2-49.5-76.4-50.5-81-53.7-81-55.7-83.2-56.8-83.3-58.7-84.3-61-83.3-63-39.9-30.9-41.1-32-39.9-32-39.9-32.9-38.8-33.1-37.6-32-37.6-34.1-35.5-32.9-35.4-33.1-34.1-34.1-33.1-32.9-32-34-29.7-34.1-29.6-34-27.3-33.1-25.1-34.1-28.6-5.1-34.3-15.5-37.6-23.6-42.1-32.1-45.7-40.2-50.2-47.5-52.4-54.6-55.9-59.9-58.2-66.1-60.3-70.1-62.9-75.5-62.6-78.3-65.1-80.5-65.1-84.7-66.1-84.4-66.1-86.8-130-174.4-126.7-171.3-118.6-164-109.4-151.7-96.9-133.1-82.2-111.5-33.2-46.4-29.5-38.1-24-29.9-18.1-21.7-172.3-272.5-168.9-273.5-163-273.4-160.9-273.4-313.7-543.7-307.9-537.7-153.9-264.2-155.2-262-157.4-259-158.5-253.7-163.2-250.9-166.6-244.6-169.8-240.3-176.9-234.3-181.2-228.1-189.5-220.7-197.3-214.7-204.1-206.2-213.3-199.2-223.6-190.9-233.8-180.6-245.1-172.2-257.8-162.2-269.3-151.7-282.8-141.3-297.6-130-311.4-118.6-327.5-106.4-343.2-93.9-361.6-81.5 3.6-5.1 4.5-7.1 7.8-7.5 11.4-9.2 12.6-8.2 14.8-10.4 17.3-10.2 18.1-10.4 42.2-22.7 46.8-23.7 51.3-24.7 52.5-24.8 52.5-23.7 53.5-22.8 50.2-21.6 46.7-19.6 42.4-17.6 35.3-13.4 28.5-10.3 19.4-6.1v-6.4l1.1-6.1 113-48.5 112.8-46.4 113-46.4 112.8-44.4 113.1-42.2 112.8-41.3 113-40.2 112.8-39.4 114.1-38.1 113-36.1 114.1-34.1 114-34.1 114-31.8 114.1-31 115.1-29 115.3-27.8 115.1-26.8 115.3-24.9 116.3-23.6 117.4-21.7 117.5-21.6 117.6-18.6 118.6-18.7 118.6-15.4 119.7-15.4 120.9-13.4 121-11.5 121.9-11.3 122.2-8.2 124.3-7.2 124.2-6.3 124.4-4zm9670.3 259.8c114 496 307.3 949.6 561 1336.5 277.4 423.1 627.1 766.1 1023.8 997.1-87.5-253.7-159.1-537-211.1-841.8-51.2-299.7-83.7-620.3-94.1-953.9-300.7-74.9-613-180.5-912.9-329.1-125-61.9-247.8-131.2-366.7-208.8zm1650.1 617c70.1 198.3 153.6 384.3 243.2 555.2 361.5 689.1 801.2 1129 878.4 1129 77.2 0 516.9-439.8 878.5-1129 89.6-170.9 173-356.9 243.1-555.2-464.4 83.1-872.3 98.8-1121.6 98.8-249.4 0-657.1-15.7-1121.6-98.8zm2613.9-79.1c-10.4 333.6-42.9 654.1-94.1 953.9-52.1 304.8-123.6 588.1-211.1 841.8 396.7-231 746.3-574 1023.8-997.2 253.6-386.8 447-840.4 560.9-1336.4-118.9 77.6-241.7 146.9-366.8 208.8-299.8 148.6-612 254.2-912.7 329.1zm1396.1-215.4-2.1-143.2c-120.9 458-307.9 878.1-546.3 1241.6-333 507.8-767 906.3-1262.3 1145.2l-105-98c116.3-289.4 209.8-628.9 273.5-1002.2 47.8-280 78.9-579.5 90.4-891.6l-40.6 8.7c-78.3 237.5-175.6 459-281.2 660.4-388.2 740-912.7 1212.3-1014.8 1212.3-102.2 0-626.6-472.4-1014.7-1212.3-105.7-201.3-202.9-423-281.2-660.4l-40.5-8.6c11.5 312.2 42.6 611.5 90.3 891.5 63.8 373.3 157.3 712.8 273.6 1002.2l-105 98c-495.3-238.9-929.3-637.4-1262.3-1145.2-238.4-363.4-425.4-783.4-546.3-1241.3l-2.1 142.9c0 1023.4 326.7 1951.6 853.6 2623.3 522.6 666.6 1242.7 1079.8 2034.6 1079.8 791.8 0 1512-413.4 2034.7-1079.8 527-671.6 853.7-1599.9 853.7-2623.3zm-2164.2-10034.5c-166.3-460.9-371.5-881.2-670-1213.1-316 353.9-538.7 754.4-715.4 1176.6 89.2 119.9 174 246.7 254.4 386.4 172.2 299.5 322.6 656.8 447.3 1128.3 214.4-686.8 427.4-1083.7 683.7-1478.2zm962.2 617.9c-152-371.8-328-713.2-522.5-995.3l-76.9 113.2c-395.3 580.3-679.8 997.9-979.7 2058.7l-149.3-4.3c-132.8-597.2-300.8-1020.7-498.1-1363.7-180.5-313.9-387.2-562.9-614.5-816.9-191.1 274.6-364.7 606.5-515.2 968.7 586.1 729 982.6 1567.6 1247.3 2406.7 260.6 826 394 1653.2 455.5 2376.4 96.1-706.7 258.3-1497.4 507.4-2286.2 269.1-855.6 644.5-1712.1 1146-2457.3z"></path><path fill="#4A813E" stroke="#4A813E" stroke-width="76.2" stroke-miterlimit="2.613" d="M56408.2 60717.4c-1154.9-592.8-2541.6-1110.1-2846.8-830-593.2 492 1547.8 1584.4 2769.7 2511.4 10-487.1 20.1-1182.3 77.1-1681.4zm18321.4 103.2c1155-592.8 2541.7-1110.1 2846.9-830.1 593.2 492.3-1547.8 1584.6-2769.9 2511.6-9.8-487.2-19.9-1182.4-77-1681.5z"></path><path fill="#FEFEFE" d="m74976.3 56926.2-333.6-128.8 96.2-349.9 331.2 114.4-93.8 364.3zm-15390.7 3751.3c10.5-69.2 22.9-138.7 34.3-208 13.2-70.1 26.5-140.2 41.7-210.9 21.7-263.6 45-525.4 82.6-784.1 37.3-256.2 88.4-510.1 142.4-762.3 110.3-115.7 221.3-232 332.4-347.6-85.4 318.8-165.2 641.6-221.3 970.3-56 329.9-88.2 665.8-120.5 1003.6-4.9 29.2-14.2 60.2-30.4 89.6-17.2 30.2-41.7 64.4-76 102.1-57 75.1-119.7 123.6-185.2 147.3zM57917.9 58539c-91.1 49.9-181.4 98.1-271.5 147.3-77-116.5-152-231.3-225.1-346-83.6 34.8-166.2 67.7-247 102.1-68.3-109.3-133.7-217.2-198.4-324.3 88.4-48.4 176.7-95.4 267.9-143.1 69.2 115 141.5 230.5 215.6 346.9 76-40.1 154.7-81.2 234.4-121.2 74 112.1 148.2 225.4 224.1 338.3zm981 1531.8c-84.4 21-220.2 21-405.5.7-197.5-24.6-438.5-83.6-724.6-175.2-281.1-96.1-555-220.4-814.8-378.4-296.8-180.5-528.8-355.1-702.9-512.2-213.5-201.2-358.9-386.8-441.3-561.9-40-89-67.5-180.9-81.9-276-2.8-19.6-3.6-38.5-4.7-59-.9-21-2.2-42-1.9-65.1.5-22.5 3.8-41.4 5.9-58 1.8-17 7.4-33.8 14.1-52.7 10.6-25.2 22.9-50.3 34.2-75.7 37.1-56 82.8-99.4 137.7-132.3 71.2-47 161.4-72.3 269.8-77.3 4.7 3.7 13.2 16.9 23.6 42.9 5.7 14.8 12.4 29.3 20.1 44.8-43.7 4.8-92.2 30.8-146.3 72.9-53.2 42.6-85.7 79.1-96.9 110-28.7 80.5-25.7 166.9 7.5 257.1 35.2 89.7 115.8 217.8 244.2 389.6 46.6 56.8 118.6 126.2 220.3 210.2 56.8 44.9 115 89.7 172.9 134.5 51.1 37.3 104.5 72.2 156.7 107.9 152.9 94 307.7 190 464.4 281.8 129.1 74.9 256.3 139.3 380.7 192.6 37 15.4 96 38.5 173.9 65.8 91.1 31 165.9 56.1 224.2 76.4 39.7 14 81.5 28.7 123.3 43.4 42.7 11.9 87.4 23.1 132.1 35.2 168.1 44.7 307.5 71.5 418 79 162.2 18.4 277 8.4 349.2-27.2-18-58.1-35.1-116.4-52.2-174.6-20.9-65.1-54.9-144.4-102.6-233.2 7.8-4.2 41.7-40.8 97.9-107.7 56.9-69 108.2-111.5 152.8-132.7 32.4 73.7 62.9 173 86.4 293.6 3 27.4 5.7 50.5 9.7 70.8 1.7 20.3 2.6 49.7 5.6 88.4 1.9 38.5 0 70.6-6.7 98.1-3.6 28.5-7.5 58.7-11.4 88.2-15.2 69.9-43.7 131.7-88.3 181.4-53.2 57.4-133.8 102.4-243.2 133.9zm4333.3-180.1c-90.1-66-180.4-138.7-269.5-211.5 70.3-77.8 138.7-155.5 206.9-234.7 89.2 67.1 178.6 132.1 269.7 197.5-69.2 83.3-138.5 166.7-207.1 248.7zm-2635.2 614.4c-2.8 18.9-5.7 36.5-8.6 53.3-.8 10.7-2.9 20.3-3.6 29.6-6.7 8.2-8.6 15.2-10.5 18.9-3.9 23.8-9.4 44.1-19.1 59.4-10.3 21.7-18.9 42.7-28.5 63.9-52.3 120.5-123.5 219.9-213.6 297.5-42 36.6-89.2 70.4-144.5 99.6-45.5 24.5-107 47.7-187 71.5-77.8 24-163.2 31.5-256.4 24-60.7-5.8-128.1-19.6-204.2-38.8-74-20.1-153.9-50.8-238.2-89.6-29.8-13.6-59.8-27.3-90.5-41.3-94.8-43.5-216.4-124-364.6-245.2-53.2-44.1-115.8-102.2-186.1-173.1 3.8-6.4 10.5-12 14.3-17.6 11.5-16.6 21.7-25.2 34.2-25.9 36 33 97.8 79.2 188.9 141 38.1 21.5 78.1 45.4 117.7 67.8 113.1 51.8 228.2 86.3 348.7 102.9 88.3 14.2 187 16.3 296.3 8.6 68.3-6.3 131-18.9 186-37.1 65.6-22.6 129.2-49.1 189.1-80.6 53.2-26.8 107.2-63 165.1-106.6 57-43.4 119.9-101.6 184.4-169.7 46.6-58 70.1-99.3 68.2-124-24.7-19.6-48.3-40.4-71.2-61.4-22.7-19.8-42.6-43.6-58.8-72.9-31.2-59-42.1-111.2-35.1-157.7 1.5-10.5 3.9-22.3 5.7-34.4.9-7.6 6.7-19.6 15.3-33.6 6.6-9.1 11.4-20.3 18-30.8 6.6-7 14.1-14.2 21.7-21.7 14.3-17 26.5-31.6 39.8-42.1 10.5-11.8 24.9-23.1 41-35 5.6-4.2 12.2-9.1 19.9-14.7 3.7 18.9 8.6 38.6 12.3 56.9 13.3 43.3 28.7 78.3 43.7 103.5 17.2 21.8 33.3 42.7 49.5 64.5 18.1 18.9 36.9 37.9 55.8 56.7 24 22.4 58.1 46.9 102.7 76.5 34.1 16.8 67.3 32.8 101.6 50.4 77.9 28.8 155.7 58 233.6 86.9v1.4c67.5 21 120.7 35 156.7 41.3 81.7 11.3 187.2 9.1 315.2-6.3 47.7-6.3 95.2-12.6 141.8-18.2 48.2-5.6 86.2-4.9 111.9 3.3 13.3-1.2 30.6 1.3 50.4 7.2 13.5 4 23.6 7.7 27.4 8.3 33.3 11.3 50.5 24.6 52.2 39.3 1 15.6 3 31.5 5.9 46.3 20 50.4 55 94.6 102.5 131.8 61.6 48.9 140.5 86 237.4 111.4 59 15.2 117.8 32.2 176.7 46.2 20.8 4.9 41.6 9.1 61.6 13.2 2.1-19.5 3.5-38.4 4.7-57.3 1.6-19.1 3.5-38 4.9-55.5 1.4-18 2.8-30.9 5.8-40.6 2.7-10.1 11.2-28.1 21.7-55.9 21.8-67.4 46.5-122.1 75-160.6 13.3-21.7 27.6-41.3 41.8-60.2 14.2-19.6 30.5-37.3 47.5-53.2 28.4-27.5 68.4-56.1 118.7-89.2 57.9-34.8 125.5-62.9 201.4-84.6 23.7-5.7 48.4-9.8 75-13.3 24.7-9.1 51.3-15.5 74.9-21.7 50.6-14.8 107.4-21 168.3-20.3 62.6 1.9 115.8-1.4 156.7-10.7 42.5-8.2 82.4-23.8 123.3-46.2 90.3-38.5 137.7-106.3 144.3-205.9 4.8-69.4 7.7-167.4 6.7-295.1 0-30.8-.9-146.4-2.8-343.9-1-118.4-1-178.8-1-180.9-32.2-23.8-44.6-68.5-38-134.6 6.6-65 29.6-128 68.5-189 38-64.4 85.4-105.2 139.5-131.7 10.5 5.5 14.1 15.3 13.3 29.4-.2 1.4-2.8 11.9-8.5 31.6-4.8 18.9-8.5 34.8-9.5 48.1-2.8 33.1 7.6 63.2 35.1 89.9 36.1 34.8 95.9 68.6 185.1 98-18 48.3-48.3 117-88.2 206.7-12.4 32.9-32.4 76.3-57.9 131.8-10.4-10.7-20.9-19.6-31.3-30.2-4.9 178.7-8.5 357.3-12.6 535.4-3.7 68.5-20 162.5-47.2 280.2-3 19-5.8 37.1-8.6 53.9-2.1 12.1-3.8 19.6-5.8 24-.8 4-4.7 10.3-13.3 20.3-14.3 30.1-30.2 60.1-45.4 89.5-14.4 26.8-38 56-67.6 87.7 110 36.4 221.4 71.5 332.4 107.2 65.2 16.8 130 34.3 194.8 51 3.1-58.3 6.6-116.5 9.3-175-11.3-276.9-21.3-552.1-27.6-826.7-6.1-272.8-8.4-546-11.2-818.6 66.5-169.5 131.1-338.3 193.7-510.1 4.9 354.6 10 709 17.1 1062.9 7.2 356 20 713.4 33.2 1070.7-.8 32.8-6.6 68.7-17.1 107.9-12 34.6-26.9 77.2-48.5 125.1 18.3 1.7 39 3.1 59 4.4 77 3 153.8 6.4 230.8 10.1 64.7-5.1 128.2-10.8 191.8-15.6 13.4-1.4 26.7-2.1 39.9-2.8 19-1.9 33.2-2.9 46.6-3.6-61.9 124.8-123.5 249.5-185.3 372.9-9.4 1.4-19.9.7-28.3.7-44.8 0-88.5 2.1-133.1 2.7-20.9 1.4-42.9 3.5-62.9 4.2-16.9 1.5-28.3 2.2-36.9 3.6-6.6.7-21.8 4.8-43.5 11.2-20 3.4-38 6.9-57.1 10.6-22.8 7.7-45.5 14-67.5 19.6-26.6 6.3-50.1 12.6-75 18.2-100.6 15.4-185.1 34.3-252.6 57.4-73.1 24.5-148 47.6-223.2 70.7-66.5 22.5-131.9 41.4-197.5 59.6-122.5 27.3-244.9 55.5-368.5 82-24.8 3.6-43.7 7.8-57 9-31.3 6.2-64.6 12-97.7 14.8-62.7 2.2-126.4 2.2-189.1.7-37-1.4-74.9-4.9-110.1-6.9-42.6-3.5-85.6-7.8-126.3-12.6-45.7-6.4-90.3-13.3-134.8-20.5-43.7-8.9-85.6-17.4-126.3-26.6v-.7c-71.3-16.1-141.6-35.7-211.7-53.9-81.9-22.4-146.4-44.9-194.8-67.2-49.4-22.5-98.8-52.6-148.3-94.8-17.8-13.3-35.9-34.8-55.8-65.1-20.1-30.7-38-59.6-50.4-86.8-11.5-16.9-19.9-42.1-28.5-75.7-11.3-6.2-18.9-9.8-25.7-11.9-25.6-7.9-55.1-11.9-88.3-12.6-5.7-1.4-16.2-.7-29.4 1.4-15.3.7-27.5 2-40.8 3.6-42 3.5-77 13.3-106.6 25.1-99.5 39.2-203.2 53.2-305.7 42-38.8-4.7-85.4-15.4-138.6-30.6h-1c-28.3-8.6-58.1-18.9-89.2-30.3-6.8-2.4-14.4-6.2-21-8.5 0 0 1.1 0 1.1-1.3-43.6-16-86.4-32.9-128.1-48.4-15.4-5.6-30.6-11-45.7-16.7-23.7-12-39.9-21.1-49.5-27.4-12.2-9.1-23.6-17.5-36-25.9-7.5-7.7-15.2-15.4-24.7-23.2zm1244 1067.9c-106.2-87.7-210.6-175.1-316.1-267.6-70.4 56.6-138.8 113.5-208.9 170.2-102.7-89.5-204.4-177.9-304.9-266.1 70.3-68.9 138.5-136.1 209.7-205.4 110.3 93.1 222.4 185.6 334.5 278 62.4-56.6 125.3-114.1 189.8-173.7 107.4 84.9 216.6 170.4 325.8 255.7-76 69.5-152.1 140.2-229.9 208.9zm2139.8-881.5c-39.1-9.8-77-20.2-116.9-29.3-46.6-14.2-93-28.8-137.7-44.1-114.9-43.4-209.9-77.9-285.8-100.5-30.5-8.1-66.5-18.1-109.3-27.1-43.6-9.9-79.6-17.1-110.3-20.3-27.4-3.1-52.1-5.5-77.8-8.5-17 .7-34.1 2.3-51.3 3-11.3-2.3-26.5-3-41.8-1.5-16.9.8-35 3.4-53 9-59.8 10.6-115.9 30.9-169.1 61-30.4 20.3-68.4 54.1-111.1 104.4-23.8 29.4-45.6 72.1-66.5 128.1-7.5 26.8-16.1 52.1-22.7 79.2 19.9 3.7 39.8 7.7 60.7 12.1 13.3 2.7 26.7 5.6 40.1 7.5 8.3.7 16.9 1.4 25.4 2.1 31.4 1.6 63.7 3.7 94.9 4.3 36.2 2.9 73.3 4.3 109.1 6.2 41 5.1 63.9 7 67.6 5.8 17.3-2.1 36.2-3.6 55.1-5.1 40.1-2.6 79.9-8.2 118.7-12.6 16.2-1.4 31.4-4 47.4-6.2 20-5 40-9 61-13.3 90.1-17.5 180.3-35.8 268.6-53.9 72.3-14.8 144.3-29.4 216.6-49.9 61.5-16.6 124.4-32.9 188.1-50.4zm1509.8 725.1 3.9-236.3 5.7-244.2-117.5-1741.6 184.2-523.2 130.3 2251.5c0 33.8-5.1 70.5-14.5 110-10.2 40.1-26.8 87.7-50.9 143.6-40.8 105.5-87.7 185.6-141.2 240.2zm5417.8-3011.1c-110.3-20.6-220.7-42.1-329.2-63.5-27.3 108.7-53.7 217.6-81.1 326.1-109.4-27.8-217-55.1-323.5-83.6 22.6-122.6 46-247.7 70.7-372.8 107.4 26 216 50.9 324.5 74.1 27.5-109.1 55.8-220 85-330.9 99 25 200.8 49.8 301.9 70.1-16.1 128.6-31.1 255.4-48.3 380.5zm1641.8 740.9c-.9 13.6-1.9 26.7-2.6 39.7-4 15.6-8.6 30.8-10.5 45.6-13.3 33.3-23.7 66.5-36.8 100.3-35 87.1-83.2 168.2-144.4 241.9-36.9 41.3-74.6 78.7-113.2 112.6-20.9 16-40.2 30.7-58.5 43.2-12 8.3-25.5 16.5-39.6 23.7.8.5.8 1.2.8 2.4-70.7 36-141.4 72.9-213.1 107.7-13.3 7.2-26.4 13.2-38.7 19.7-75.5 36.7-132 57.6-168 64-67.1 16.6-132.1 7.8-189.7-24.8-31.1-17.9-58.4-35-79.3-53.4-31.1-23.1-56.6-48.1-74.5-74.7 15.1 97.1-16.9 193.9-94.4 288.1-79.3 94.3-199.1 174.6-360.4 243.7-10.5 4.4-18.9 8-28.2 12.4-5.5 2.3-11.5 5.3-17.9 7.7-8.5 3.5-18 7.7-26.4 10.7 0-.7 0-1.9-.9-3-57.7 23.1-116.2 46.2-173.7 67.5-81 30.8-143.5 48.1-184.9 52.7-25.6 4.2-50.1 4.7-71.7 3.7-23.7-.5-50.1-5.9-79.1-14.2-10.5-3.7-21.9-5.3-31.4-9-13.2-9-26.4-17.1-39.6-26-24.6-21.5-48-43.2-71.8-65.9-8.4-6.5-26.4-28.6-53.5-67-8.6 1.2-17.2 2.4-25.7 3.6-22.6 7.2-47.1 21.4-75.4 42-7.6 6.5-15.2 13.7-23.5 20.8-10.5 9.6-19.9 19.7-30.4 29.8-34 31.3-59.3 64.5-75.4 97.8-61.4 102.4-139.6 185.9-233.2 246.4-53.5 28.5-123.5 54.6-209.4 75.9-6.6 1.6-12.2 3.6-19.7 4.8v-4.2c-87.7 22-174.6 44.6-260.5 65.7-60.2 15.6-120.7 29.3-180 41.7-190.7 35.3-330.5 47.1-422 37.2-92.2-9.8-178.2-39.6-259.4-86.9-81 64.6-199.9 119-349.8 165.9-152.1 45.6-320 69.1-504.9 79.4-4.8.2-8.6 0-14.2 0v1.2c-148.2 7.7-298.1 9.3-446.4 6-4.6 101.2-16.8 188.9-34.8 264.8-19.8 75.9-54.8 164.2-103.8 263.8-51.9 101.8-109.5 190.3-174.5 266.8-54.8 62.7-130.4 134-229.4 208.5-50 36.9-105.6 70.1-168 95.5-62 26.1-121.5 43.9-182.9 54.4-49 7.2-104.8 10.3-168 9.1-62.2-1.2-123.4-6.1-182.9-21.5-28.4-7.2-58.6-14.8-87.8-22.4-97.3-24.9-212.3-87.2-347.3-184.9-44.4-32.7-102.8-80.7-170.8-140 4.8-13.1 8.5-20.6 11.5-26.7 13.1-17.7 25.4-32 35.6-41.3 38.7 31.3 99.2 65.1 180.4 101.8 27.3 11.2 64.2 25.5 114.1 45 102 25 210.4 32.7 329.4 16.7 90.4-16 193.3-52.8 300.8-104.9 76.5-38.5 145.3-80.7 208.6-124.5 58.6-43.8 115.9-93.1 170.9-147.7 54.6-55.6 100.7-113 136.8-172.4 38.6-58.7 67.7-120.5 93.2-185.6 11.4-27.2 19.8-52.8 27.5-81.1 9.4-27.3 14.2-53.3 18-76.6-7.7 1.2-18 1.2-30.3 1.9-14.3.5-31.1.5-53 0-19.7-.7-41.3-1.9-65.9-3.5-23.6-1.9-53.9-4.7-88.7-11.4-35.1-7-73.7-19-116-34.2-41.7-15.6-78.3-34.5-114.2-57.1-74.5-47.2-129.3-114.9-160.5-201.5-5.5-16.4-11.3-35.5-14.9-56.3-3.8-21.9-8.2-42-9.5-62.3-2.3-33.3-.9-65.2 0-96.6 3.8-31.9 6.4-58 12.4-78.9 1.8-54.9 8.2-109.5 23.5-162.3 8.5-42.7 24.4-82.9 46.1-120.3 12.2-21.2 28.4-42 46.3-62.2 17.9-20.8 36.8-41.6 54.6-62.9 25.6-30.8 51.8-53.2 80.3-68.8 26.4-15.4 58.5-22.2 96.1-22 50.2.3 97.4 14.8 141.6 43.4 44.4 29.6 87.8 76.4 131.3 141.7 26.4 39.2 52 83.4 77.3 132.8 27.5 49.6 50.9 100.7 68.8 151.1 38.6 90.1 62.4 174.9 70.8 254.3 115.1 1.6 197.2 3.7 246.3 1.6 50.9-1.9 110.4-4 180.2-8v1.2c5.6 0 10.5-.7 14.2-.7 10.5-1.2 21.7-1.8 33-1.8 8.6-.7 18.8-1.2 27.3-1.9 7.7-.5 15.2-1.2 23.6-1.2 56.7-3.5 102.9-8.8 138.7-16.5 63.2-8.9 120.9-21.3 173.6-39.1 53.9-18.2 103.9-39 146.2-62.3-35-29.6-64-74-87.6-131.1-8.6-24.8-17.2-50.3-24.7-75.7-6.7-14.4-11.2-24.9-14.8-31.5-1.1-5.8-4.4-17.7-7.8-35-17.3-86.9-13.6-200.8 6.7-339 20.3-137.5 45.3-221.1 74.6-249.6 31.9-78.2 61.2-136.3 86.7-178.3 79.2-124.3 174.4-195.5 285.9-211.7 96.3-13.9 185.9 29.1 268.8 127 55.8 68.1 106.7 163 156.7 287.8 16.1 53.6 35 107.5 50 161.5 2.9 17.7 4.8 35.5 6.7 53.9 15 122.8 14 227.5-1.9 316.4-16.1 88.5-50.1 166.8-102 232.5 38.9 2.8 76.5 4.7 110.6 6.5 34.7.5 81 0 135.7-3 54.6-3 108.8-9.1 160.5-22.5 9.7-2.5 20.6-6 31.9-8.3 5.7-1.2 13.1-4.2 20.9-4.9 78.2-20 156.5-39.5 236.8-59.1 35.7-9 73.7-17.8 109.4-26.1v1.8c68.9-19.6 117-36.8 145.3-51.6 66.1-38 149-107.2 245.2-209.2 35-36.8 69-72.4 103.1-109 36.5-38 66.8-61.3 89.6-68.3 13.1-6.6 28.3-13 41.4-21.3 9.5-1.8 18-4.9 26.4-7.7 26.4-9.6 45.4-6 57.6 10.7 8.4 16.1 16.9 30.7 25.5 45.6 36.8 42.2 84 68.3 138.8 78.8 72.5 13 149.9 4 233.8-27.3 52.9-19.6 106.8-40.3 161.3-62.1 34.1-14.4 68.9-29.3 104.8-44.5 0 .4.9 1.1.9 2.3 83.1-38.5 155.7-76.4 216.2-114.4 41.5-24.3 72.6-48.6 97.1-71.6 23.6-22.7 41.6-45 52-65.9 25.4-46.9 29.1-94.3 12.2-140.5-4.8-7.1-9.5-15.4-14.2-23.6-9.4-25-18.9-50.4-28.3-76.1-9.4-26.1-18.7-52.1-29.2-78.7-39.8-91.3-80.1-182.6-121.8-274 5.8-57.3 14.2-115.4 20.8-174.2 3.7-37.8 9.5-78.1 15.1-117.4 5.8-36 12.4-72.2 18.9-109.4 65.9 146.2 132.1 293.3 199 440.3 7.6 20.7 15.2 41.4 23.5 62.2 4 9.5 6.6 17.1 8.6 22.4 1.9 5.6 10.5 16.8 24.4 36.9 47.3 91.3 94.5 154.2 144.6 187.2 55.6 39.9 128.4 60 214.2 60.5 19.8-1.7 37.6-4.7 57.6-7 17.8-3.1 35.7-6.6 54.6-10.6 49.1-25.1 98.1-50.6 146.2-76.6 0-.6-.8-2.3-.8-3.6 27.2-15.3 54.7-30.2 84.7-45.6 82.3-43.4 154-96.6 216.1-160.7 63.2-63.4 108.4-133.4 133.2-207.3 25.3-76 47.2-192.7 65-349.1 11.4-3.1 22.6-6.1 35.9-9.6 6.4 12.5 16.1 23.7 23.6 34.5 5.6 14.6 13.3 30.1 19.8 44.4 3.7 13.6 8.4 25.4 12.2 38.5 2.8 10.1 5.8 20.1 8.4 30.1 10.5 15.5 19.8 31 30.3 45.6 5.7 8.4 12.2 16.9 18 23.8 8.4 7.9 17 15.4 25.3 21.9 14.2 11.4 31.2 22.6 46.3 32.5 17.1 7.9 34 14.9 51.9 22 18.9 4.8 42.5 4.3 72.8 0 26.4-9.4 52.8-18.8 80.1-28.8 102.8-50.5 175.4-98.5 216-144.1 20.9-21.4 40.2-48.5 58.6-81.2 18.4-33.1 31.7-69.3 43.4-107.4 16.6-53.8 22.6-111.4 20.6-171.8-4.5-26.8-16.7-74.2-38.6-143.5-4.5-13.1-8.6-27.2-14.2-40.3 17.2-49.2 32.2-97.9 47.3-147 12.2 28.5 25.5 57.6 39.6 85.9 13.2 29.2 26.5 57.5 38.7 86.6 4.6 10 10.4 20.8 15.1 31.3 9.4 13.7 18.9 27.3 29.2 40.4 14.2 18.9 28.3 36.7 41.7 55.3 14.8 17.6 31.9 34.1 48.9 50.9 18 16.5 40.6 30.8 65.9 44.9 15.2 8.8 40.8 17.7 78.4 26.8 29.4 2.3 57.6 4.7 86.8 8.8 32.2-2.3 64.2-4.1 96.2-6.5 23.8-4.2 49.2-8.9 72.8-13.6 11.2-4.3 21.7-7.7 33-12 21.7-7.1 35.9-20.1 42.6-37.2-2-10-5.8-20.8-8.6-31.5-10.5-19.4-28.3-37.3-57.6-54.6-45.3-27.2-91.5-55.6-137.7-82.9-16-107.9-34.9-215.7-54.8-324.3 20.7 1.9 41.6 9.6 62.3 22 20.7 14.9 43.4 29.1 63.2 43.2 16 12.7 29.3 24.5 44.3 37 16.1 15.3 33.1 30.5 49.1 46.1 24.6 34.5 50 69.8 74.6 105 19.8 32.5 39.5 65.7 60.3 97.1 14.2 26 27.5 52.8 39.8 79.6 14.9 41.9 26.4 77.4 33 107.7 1.9 20.1 4.6 39.1 8.4 57.4 0 22 2.8 42.2 3.8 62.4 1.9 53.4-1.9 97.8-12.2 133.4-6.6 69.2-56 119.9-146.5 152.1-29.1 10.7-58.3 18.6-85.8 24-28.2 5.3-56.5 8.8-89.6 9.3-62.1 3.6-124.5-2.5-187.7-18.9-15-5.3-32-11.2-48.1-16.5-21.9-10.3-42.5-20.3-64.2-30.4-18.9-10.6-38.7-21.8-58.4-33.3-9.6 27.4-19 55.3-27.5 83.2-15 32-31.1 63.5-44.3 95.5-27.5 49.6-56.5 93.6-90.6 132.7-15 16.5-29.2 31.4-42.5 46.3-19.7 15.3-40.6 30.7-59.4 45.1-52.9 37.8-98.9 68.4-139.7 88.1-33.7 16.5-67.9 27.4-106.5 33.8-36 5.9-70.8 5.9-103.7-1.2-32.2-5.8-66.2-20.1-99.2-41.3-33.9-21.4-60.3-47.6-81.2-76.1-20.6-30.6-37.7-60.4-50-91.8zm-6072.4 1289.2c-17-1-35.1 1.9-54.8 9.6-19.8 7.6-33.1 17.2-38.6 27.1-9.5 3.7-20 18.5-36.8 43.4-9.6 15.9-17.8 27.8-22.8 36.1 2 20.3 16.2 43.4 42.6 70.5 28.3 28 67 49.8 117.9 68.9 50 18.9 108.4 26.9 172.6 28.5 15.2.1 33.1 0 52.9-1.9 19.8-1.7 33-3 45.2-4.2-13.2-27.8-29.2-58.6-48.1-91.7-25.3-46.4-43.4-72.4-54.7-79.4-17.8-28.5-42.5-53.2-75.4-73.7-33.2-20.4-66.1-31.1-100-33.2zm1766.2-1309.4c-110.3-56.3-221.6-112.5-331.3-170.7-34.8 99-69.8 196.3-104.6 292.3-114.2-66.4-226.5-133.5-337.8-201.5 33.9-109.2 67-218.9 102-328.3 116 64 232 127.8 349 185.9 27.5-105.5 54.7-211.5 83.9-317.7 107.7 61.6 218.1 122.1 329.5 182.1-31.1 119.1-60.6 239-90.7 357.9zm40.6 693c-64.2 9.9-129.1 44.6-195.4 100.7-65.8 55.8-97.9 117.4-95.3 185.1 1.1 7.5 2.1 15.9 3.8 23.6 7.5 38.5 32.2 75.2 74.5 110.2 54.8 49.3 136 99.7 243.5 150.6 94.3-47.4 165.2-97.7 210.5-148.2 33.8-36.9 65.1-85.4 92.6-146.3-1.1-7.8-3-16.7-5-24.9-15-61.2-59.4-121.6-132.1-178.6-72.5-57.4-137.6-81.4-197.1-72.2zm1955 1669.8c-98.1-43.9-198.1-87.3-299.2-131 52-125.7 103.7-251.4 150.9-375.9 108.7 36.9 218.1 74.7 324.7 109.2-54.8 132.7-113.2 264.8-176.4 397.7zm4688.1-2493.3c-84.2 22.4-173.9 6.1-269.2-47.9-60.7-35.1-112.7-76.6-155-124.5-58.1-70.1-98.1-146.3-120-228l-571.7-1681.6 73.8-475.6 637.1 1921.5c11.4 42.9 28.2 83.4 49 119.9l6.9 25.2 23.7 30.4 48.5 50.9c79.8 64.9 142.7 90.8 188.7 78.6l36.5-9.6v-.2l5.7-1.4 27.8-7.4.2.2 127-32.2c130.9-34.9 244.4-78.3 341.1-129.7 147.5-73.5 252.5-156.1 315.6-248 19.4-28.1 34.8-59.2 47.4-93.5 11.9-34.2 14.7-63.2 8.4-87.2-6.8-25-23.4-52.8-49.5-84.1-25.9-30.6-58.6-62-98.2-94.1-8.5 37.1-22.2 77-42 118.9-3.8 13-14.6 31-31.5 54.4-9.2 17-24.2 34.9-43.3 54.5-42.7 42.3-94.9 71.3-155.7 87.4-61.4 16.5-116.9 18-166.2 5.6-38.6-8.9-63.1-19.4-74.3-32.2-37.8-28.2-69.1-56.7-91.9-85.4-36.3-50.2-64.4-110.5-82.9-179.8-14.4-54-21.8-134.3-23.2-240.5l3.4-137.9c16.5-93.7 31.2-159.5 44.3-196.5 47.1-136.9 112.6-216.8 196.1-239.2 65.1-17.3 141 3.3 228.7 60.9 48.2 33 108.1 92.2 178.2 177.3l73.3 102.2 50.3 80.7 111.5 207.8c44.6 96 78.7 187 101.8 273.5 23.3 87.2 30.1 167.6 20.1 241.3-.5 27.1-7.8 56.7-21.1 88.5l-26.6 95.3c-26.6 72.8-58.4 136-96.2 189.5-58 75.9-163.6 150.8-317.5 225.3-117.1 51.6-220.8 89.8-310.5 113.7l-128.6 34.3-70 18.7zm104.6-1366-11 30.6c4.9 17.8 18.9 38.3 41.3 60.7l29.4 23.8c6.1 3.5 26.8 9.2 62.1 16.3l31.5 1.5 32.1-2.8 50.2-13.2 43.1-19.5c44.8-19.2 81.3-47.4 108.8-82.9-11.6-15.9-31-34.5-57.1-55.8l-61.9-44.8c-14-8.1-26.9-14.5-39.7-20.3-12-5.9-26.4-10.7-43.5-15.4-16.5-4.9-33.6-7.5-52.4-9.1l-43 11.6c-14.3 7.7-24.8 15.7-30.4 23.9-9.5 6.3-21 20-33.1 41.7l-26.4 53.7z"></path><path fill-rule="nonzero" d="M50881.6 16666.7h3303.2c73 0 132.3 59.3 132.3 132.3v10430c0 73-59.3 132.3-132.3 132.3h-3496.2c-73 0-132.3-59.3-132.3-132.3V16799c0-73 59.3-132.3 132.3-132.3h193zm3170.9 264.6h-3231.6v10165.4h3231.6V16931.3zm2132.9-264.6h4231.8c66 0 120.8 48.5 130.7 111.7l1296.1 5024.7 1293.4-5036.7c15.2-59.5 68.9-99.1 127.6-99.1l4410.8-.6c73 0 132.3 59.3 132.3 132.3v10430c0 73-59.3 132.3-132.3 132.3h-2921c-73 0-132.3-59.3-132.3-132.3v-5282.7l-1364.9 5315.3c-15.2 59.5-68.9 99.1-127.6 99.1l-2592.6.6c-62.8 0-115.5-43.9-128.9-102.6l-1355.8-5298.2V27229c0 73-59.3 132.3-132.3 132.3h-2928c-73 0-132.3-59.3-132.3-132.3V16799c0-73 59.3-132.3 132.3-132.3h193zm4129.9 264.6h-4190.6v10165.4h2663.4v-6186.3c-.3-59.3 39.6-113.4 99.7-128.7 70.8-18 142.8 24.8 160.8 95.6l1591.5 6219.4H63028l1596.1-6215.5c9.8-63.4 64.6-111.9 130.7-111.9 73 0 132.3 59.3 132.3 132.3v6195.1h2656.4V16931.3H63367l-1395 5432.3c-11.7 45.6-46.9 83.2-95.1 95.5-70.4 18-142.2-24.6-160.2-95l-1401.4-5432.8zm9113.2-264.6h4231.8c66 0 120.8 48.5 130.7 111.7l1296 5024.7 1293.5-5036.7c15.2-59.5 68.9-99.1 127.6-99.1l4410.8-.6c73 0 132.3 59.3 132.3 132.3v10430c0 73-59.3 132.3-132.3 132.3h-2921c-73 0-132.3-59.3-132.3-132.3v-5282.7l-1364.9 5315.3c-15.2 59.5-68.9 99.1-127.6 99.1l-2592.6.6c-62.8 0-115.5-43.9-128.9-102.6l-1355.8-5298.3V27229c0 73-59.3 132.3-132.3 132.3h-2928c-73 0-132.3-59.3-132.3-132.3V16799c0-73 59.3-132.3 132.3-132.3h193zm4129.9 264.6h-4190.6v10165.4h2663.4v-6186.4c-.3-59.3 39.6-113.4 99.7-128.7 70.8-18 142.8 24.8 160.8 95.6l1591.5 6219.5h2387.9l1596.1-6215.5c9.8-63.4 64.6-111.9 130.7-111.9 73 0 132.3 59.3 132.3 132.3v6195.1h2656.4V16931.3h-4176.5L75215 22363.6c-11.7 45.6-46.9 83.2-95.1 95.5-70.4 18-142.2-24.6-160.2-95l-1401.3-5432.8z"></path><path fill="#FEFEFE" d="m61241 54596.6-30.8-14.3-25-13.5-18.1-13.5-12.6-13.4-6.9-12.3-2.2-12.4 3.3-11.4 6.8-11.3 11.6-11.5 14.6-9.2 18.4-10.3 21.7-9.3 23.8-8.2 27.5-8.2 28.5-7.4 30.8-7.1 32-6.2 31.8-6.2 34.3-6.2 34.1-4.2 68.6-8.2 64.9-6.1 32-2.1 28.5-1.1 28.5-1h48l19.2 1 16.1 2.2 12.4 2v8.2l-21.5 4-21.7 5.3-20.7 6.2-18.1 5.2-18.2 6.1-17.2 7.3-15.9 7.2-14.9 7.2-28.5 15.6-27.4 15.4-25.1 16.4-26.2 15.6-25 16.4-27.4 14.6-14.9 7.1-14.7 7.1-16.1 6.4-15.9 6.1-17.2 6.3-18.2 5.1-19.4 5.3-20.4 4-23 4.1-22.7 3-25.2 2.1-26.3 2.1zm18463.3-11036.7 30.9-1.9 31.8-1.1 30.8-1h32l30.7-1.1 29.8-1 15.9-1.1 14.9-3.1 14.7-3 13.8-4.2h117.4l59.3-1h175.6l58.2-1.1h90.1l28.6-1h27.3l27.4-1.1 10.3-2.9 9.1-4.3 10.2-4 9.3-3.1-2.3-8.2-1.2-8.4-76.5-26.8-82-25.7-86.8-25.9-90.1-25.7-94.6-24.9-95.8-22.7-98-22.6-100.5-20.6-99.2-19.6-99.3-17.7-97.9-15.4-95.9-12.4-46.7-6.1-45.7-5.2-45.7-4.1-44.4-3.1-43.4-3.2-42.1-2.1-41.2-1-38.8-.9-9.1 25.7-6.8 22.8-5.8 20.6-4.5 18.5-4.5 18.6-3.4 15.6-4.5 15.3-5.8 13.5-5.8 13.3-7.9 12.4-10.3 11.4-13.6 11.3-14.9 11.5-19.4 10.2-22.7 11.5-28.5 11.3h-34.3l-30.8-2.1-27.3-3.1-24-4.1-19.4-5.2-15.9-6.1-13.9-6.3-11.3-8.2-7.9-8.3-5.8-10.3-3.5-9.3-1-11.3v-11.4l1-12.4 2.3-12.4 3.5-12.3 10.3-28 10.2-27.8 5.8-14.3 4.5-14.5 4.5-15.5 3.6-14.5 2.2-14.5 1.1-15.4v-14.5l-1.1-14.4-4.5-14.5-5.8-13.5-8.1-13.3-11.3-13.4h-30.8l-33.1 2.1-33 3.2-35.4 4-36.6 5.2-36.3 6.1-37.8 7.2-37.6 8.4-37.7 9.3-38.8 11.3-37.6 11.2-37.6 13.5-37.6 14.6-36.5 14.2-35.4 16.7-34.2 18.5-34.2 18.6-32 19.6-30.8 21.7-28.5 21.7-27.3 23.6-24 24.8-22.9 25.9-20.5 26.7-17.1 27.9-14.7 29.9-11.6 29.9-7.8 32-5.7 33-1.1 33.2 2.3 35.9 5.6 36.1 14.9 6.3 13.5 4 13.7 4.2 12.6 3.2 12.6 2.1 13.6.9 14.9 1 17.2 1.1h87.8l26.2-1.1 22.8-5.1 19.4-7.1 17.1-9.5 14.9-12.2 12.4-13.5 11.4-16.5 8-17.6 6.9-18.6 6.8-19.6 4.5-20.6 3.5-21.7 4.6-44.2 3.4-44.5 2.4-21.7 2.2-21.7 2.3-19.5 3.3-19.6 4.6-17.6 5.7-16.5 6.9-14.4 8-12.4 10.1-10.3 11.6-8.3 14.7-4.1 17.1-3 19.5 1 21.7 4 25 8.2 28.5 11.5 8 7.3 8.1 7.2 5.6 7.2 5.7 8.1 4.6 7.4 4.6 8.2 3.4 8.2 2.3 8.3 3.4 17.4 1.1 17.7v18.5l-1.1 18.6-4.6 38.2-4.5 39.1-1.3 19.8v19.6l2.5 19.6 3.3 19.5 15.9 6.2 17.2 6.3 18.1 5.1 20.7 3.1 20.5 3 22.9 2.1 23.9 2.1h49l26.2-1.1 27.3-1 27.5-2.1 55.8-4 57-7.2 115.3-15.5 109.6-16.5 51.2-7.4 47.9-6.1 42.1-4.2 37.7-3H79365.5l43.4-2.1 42.1-2.1 42.3-3.1 42.2-1.9 42.2-2.1 42.2-2.1 42.3-1.1 42.1-2.1zm-4603.3 140.3-4.5-1.9h-14.9l-19.4-1h-46.7l-19.5 1h-14.8l-4.6 1.9-83.3 6.3-70.6 11.4-60.5 15.3-49.1 21.7-39.8 26-30.8 29.9-21.7 32.9-14.8 37.2-8.1 41.3-1 43.2 4.5 47.6 9 48.5 13.7 51.5 17.1 53.8 20.5 55.6 21.7 56.8 49.2 115.5 48.9 119.6 22.8 60 21.7 58.9 18.4 58.7 14.6 58.8 11.6 56.9 6.8 55.6 1.1 54.7-4.6 52.7-11.4 49.5-18.1 48.4-27.5 44.5-35.4 42.2-13.6 20.6-12.5 17.6-11.5 12.3-10.2 9.4-10.2 6.1-10.4 2.1h-9l-8.1-4.1-8-5.1-6.8-8.4-5.7-10.3-6.8-12.3-4.7-14.5-5.6-15.4-4.6-16.6-3.4-17.5-6.8-38.1-4.6-39.2-4.5-39.4-2.4-36-2.2-33.1-1.2-27.8v-31l1.2-6.1 1.1-15.6 1.1-20.6v-49.5l-1.1-21.7-1.1-15.3-1.2-5.3v-25.8l1.2-20.6 1.1-21.7 1.1-20.6 1.1-20.7-1.1-21.7-1.1-22.7-1.1-21.7-1.2-21.5-18.3-73.3-19.3-73.3-18.3-71.2-20.6-68-11.3-33.1-11.4-32-12.6-31-12.5-29.9-14.8-27.8-14.9-27-15.9-24.6-17.1-23.8-18.3-20.7-19.3-19.5-21.7-16.5-21.7-14.5-25-12.4-25.2-9.3-28.6-6.1-29.5-4.2-30.8-1.1-34.3 3.2-35.3 5.2-37.6 9.3-41.2 12.4-42.1 16.5-45.6 19.6-48 24.8-30.8 6.1-27.2 7.2-12.6 3.2-11.5 5-9.1 4.2-9.2 6.1-7.9 6.4-6.8 7.1-5.8 9.3-4.5 9.3-3.5 11.3-3.3 12.5-1.3 13.4v15.4l-2.2 6.1-1.1 15.6v21.7l-1.2 24.6 1.2 25.9v21.7l1.1 15.4 2.2 5.3 1.3 9.3 2.2 9.2 3.4 9.3 4.5 8.2 4.8 9.2 5.5 9.4 6.8 8.3 6.9 9.3 16 17.5 18.3 17.5 19.3 17.5 19.5 18.7 43.2 36 41.1 38.2 19.5 19.6 17.1 20.6 9 10.3 6.9 10.4 8 10.3 5.7 11.4v173.3l1.1 33 2.3 33.2 4.6 31.8 4.6 32 6.8 29.9 3.4 13.5 4.6 13.4 5.6 12.5 5.8 11.2 5.7 9.2 6.9 9.5 7.9 7.1 8 7.2 9.1 4.3 10.3 2.9 10.3 2.1h10.1l12.7-2.1 12.6-4 13.6-6.4 14.9-8.1 15.9-11.4 15.9-12.3 17.1-15.6 18.2-18.5 9.3 14.5 6.9 13.3 5.5 11.4 4.6 11.4 3.5 12.4 2.3 12.4 2.2 13.3 2.3 16.6V45155.2l-1 17.6-1.3 17.5-1.2 18.5-1 17.5-5.8 33.1-6.8 29.9-9.1 27-10.4 25.7-11.3 22.7-13.7 20.7-13.6 18.5-16.1 15.4-14.7 13.5-17.1 11.3-17.2 9.3-17.2 6.3-17.1 4-16.9 2.1h-18.4l-17-2.1-16.1-4-15.9-7.4-15.9-8.2-13.8-11.3-13.7-13.5-11.4-15.4-11.3-17.5-9.1-19.6-8-21.7-5.8-23.8-3.4-25.7-1.2-28v-29.9l3.5-32 5.6-33.9 8.1-36.3 2.3-41.3 2.2-38.1v-36l-1.1-17.7-1.1-17.5-2.3-17.4-3.4-16.7-4.7-17.5-5.6-16.4-6.8-17.5-8-17.7-9.1-18.5-11.4-18.6-17.1-9.2-14.9-11.4-14.9-11.4-11.4-11.4-11.3-12.4-9.1-13.3-8.1-13.4-7.8-13.5-5.8-14.4-5.8-14.5-4.6-15.4-3.3-15.5-6.8-32-7-31.9-5.6-34.1-6.8-33.1-4.5-17.5-5.8-17.4-5.7-16.6-6.9-17.6-7.9-16.4-9.1-17.7-9.3-16.4-12.4-16.5-12.6-16.6-14.9-16.4-17.1-16.6-18.2-15.5-22.7-2.1-23-1h-23.9l-22.8-1-10.2-17.6-11.5-14.2-12.6-13.6-14.6-11.3-16.2-10.4-16.9-7.1-18.3-6.3-18.3-5.1-19.3-3.1-19.5-1.1h-19.4l-18.2 2.1-18.2 3.2-18.4 4-15.9 6.3-15.9 7.1-13.7 9.3-12.6 10.4-10.3 11.3-9 12.4-5.8 13.3-3.3 14.5-1.3 15.5 3.5 17.7 4.6 17.4 9.1 18.5 13.6 20.7 17.2 20.6 20.6 21.7 25 21.7 30.8 23.8 34.3 23.6 3.3 33.1 4.6 32 4.5 31 5.8 29.9 10.3 56.7 10.2 54.7 3.4 26.8 2.3 27.8 1.1 27v28.8l-2.3 28.8-4.5 30-3.4 15.5-4.5 15.5-4.6 15.5-4.5 16.4-5.8 42.4-1.2 38.1 3.5 36.3 4.6 32.8 9 29.9 11.4 28.1 13.8 24.6 14.7 23.8 18.4 21.7 18.1 19.6 20.6 18.5 20.6 17.5 44.4 32 43.4 29.9 21.7 15.6 21.7 14.3 19.3 15.6 18.2 15.4 17.2 16.7 14.7 17.4 12.6 18.5 10.4 19.6 6.8 21.7 4.5 22.8 1.1 25.7-2.3 27-5.6 29.8-11.4 32.9-14.8 35.2-19.5 39.2-14.8-12.4-14.9-9.3-14.7-7.2-14.9-6.2-30.8-8.3-30.7-6.1-14.9-4.2-15.9-6.1-15.9-6.1-16.2-9.5-9.1-5.1-8-6.1-7.9-7.4-9.1-8.2-8-8.2-9.1-9.3-9.1-10.3-9.1-11.4-4.8-1h-6.7l-6.8 11.4-6.9 13.4-4.6 14.4-4.5 16.6-4.5 16.4-3.6 17.5-2.2 18.6-2.3 18.7-6.8 80.5-5.8 81.5-4.5 39.1-5.6 37.2-4.6 16.4-4.5 16.6-5.8 15.4-5.8 14.5-7.9 12.4-8 11.4-10.3 10.3-10.2 8.3-12.5 7.2-13.7 5.2-14.8 3-16 1-13.6-22.7-11.6-21.7-9.1-21.6-6.8-21.7-4.5-21.6-3.5-21.7-2.3-21.7v-22.8l1.2-21.5 1.1-22.7 2.2-22.8 2.5-22.7 5.5-48.5 4.6-51.5V45593.7l-2.2-25.7-2.4-26.8-1-29-1.2-31-1.1-64.9v-70.1l-1.1-73.3-1.1-75.4-2.5-76.3-4.5-75.4-3.4-37.1-4.5-36.2-4.6-36-5.7-34.1-6.9-32.9-8-32.1-10.1-30.9-10.3-28.9-11.4-26.9-13.7-24.7-14.9-23.7-16-19.6-18.2-18.6-20.5-15.6-21.7-12.4-23.9-9.3-3.5-1-9.1-.9-13.7-1h-30.8l-12.6 1-10.1.9-3.5 1-14.9 1.1-14.9 2.1-12.4 3.2-12.6 2-12.6 3-10.1 4.2-10.3 3.1-9.1 5.1-9.1 4.3-8.1 5-6.8 5.2-6.8 6.2-5.7 6.1-5.7 6.3-5.8 6.1-4.5 7.2-6.8 15.5-6.8 16.5-4.6 18.7-3.5 19.6-5.7 42.2-3.4 47.6-1.2 1-2.3 4.1v12.3l-1 23.9v281.5h6.8l10.3 31.1 11.4 29.9 12.4 30.9 11.5 29.9 10.2 31 10.4 29.9 3.4 15.6 3.3 16.4 3.5 15.4 2.3 15.6v79.4l9.1 33.1 11.4 31 12.6 28.8 13.6 26.7 14.9 24.9 14.9 24.6 15.9 22.8 15.9 20.6 33 40.2 33.1 37.3 14.9 16.5 14.9 17.5 13.6 16.6 12.6 17.5 11.4 16.4 10.3 16.7 7.9 17.4 5.7 17.6 4.6 17.4 2.3 19.6-1.1 19.8-2.5 20.7-5.5 21.4-9.1 22.8-12.6 24.9-14.9 25.7-19.4 27.8-22.8 29-26.2 31-30.8 32.8 14.9 50.6 12.4 47.6 9.3 43.2 6.8 39.4 3.3 37 1.2 33.1-1.2 28.9-3.3 26.8-5.8 22.7-6.8 19.6-8.1 16.4-10.1 12.4-10.3 10.4-12.6 7.1-12.4 3.2-12.6 1-13.7-3.1-13.8-5.1-12.4-8.2-13.9-11.4-12.3-14.5-12.7-17.5-10.2-19.6-10.2-22.7-9.3-25.8-6.8-27.9-5.6-31-4.6-32.9-1.1-36.2v-39.2l3.4-41.3 5.6-43.3 1.2-5.1 1.1-11.4v-15.4l1.2-18.7-1.2-18.5v-16.5l-1.1-11.3-1.2-4.3-5.6-38.1-9.1-56.7-12.6-68.2-13.6-71.2-8.1-35-8-33-7.9-31-8-26.8-9.1-23.8-8.1-17.5-4.5-7.1-4.5-5.3-3.4-4.2-4.7-.8v-8.5l-11.4-7.1-10.1-7.2-9.3-7.4-9.1-7.1-7.9-8.2-7-7.2-6.8-8.3-6.8-8.3-10.2-17.5-9.2-17.6-5.6-19.5-5.8-18.6-3.3-19.8-2.3-20.4-1.3-20.6v-21.7l1.3-43.4 3.3-44.4v-79.5l1.2-40.2-5.8-37.1-10.2-33.1-16-29.8-19.4-26.8-23.9-22.7-27.3-18.6-30.9-15.6-33-12.4-35.4-7.2-36.5-4.1h-37.6l-38.8 4.1-38.8 8.2-37.6 13.5-37.7 16.5-35.3 21.7-34.3 25.8-31.9 30-28.5 35-26.2 39.1-21.7 44.5-17.1 48.4-13.7 53.7-6.8 58.8-2.2 64.1 4.4 69.1 11.5 74.3 18.1 79.4 26.3 84.7 34.2 89.7 43.4 95.9 6.9 8.4 7.9 8.2 6.9 9.2 6.9 10.4 13.6 21.7 12.6 23.6 11.4 25.9 10.3 25.7 10.2 26.9 9.1 27.8 17.1 55.7 13.6 53.6 12.7 49.6 11.3 42.3 4.6 2.1 5.7 2.1 3.5 7.2 2.3 8.2 2.3 9.3 2.2 9.3 2.3 20.6 1 21.7v23.7l-1 23.9-1.2 25.7-2.3 24.8-5.6 51.6-5.8 49.5-2.2 23.7-1.2 21.7-1.1 20.6v18.5l5.8 50.6 4.5 45.4 2.3 40.3v37.1l-2.3 33-2.3 29.9-5.7 26-6.9 23.6-8 20.6-10.4 17.5-10.1 15.6-12.6 13.5-14.9 12.2-14.6 10.3-16.2 9.3-17.1 8.4-37.6 15.4-40.9 14.5-21.7 7.1-22.9 9.3-22.7 9.3-24.1 10.3-23.9 12.5-24 13.4-25 15.4-25.2 18.6-25 20.6-25.2 22.7-25 26.8-26.2 29.1 6.8 17.4 9.1 15.5 10.3 14.5 11.4 14.3 12.6 12.4 14.9 12.4 14.6 11.4 16.2 10.3 3.3 38.1 3.5 36.3 4.5 34.9 5.6 34.2 4.8 16.4 4.4 16.6 5.7 16.4 8 15.5 8 15.5 10.2 14.4 11.4 14.5 13.8 14.5 69.5-18.7 66.2-23.6 64.9-28.9 61.7-33 60.5-37.1 57-41.3 55.8-45.5 54.7-47.4 52.5-51.6 51.4-53.7 49-55.6 49-58 48-59.8 46.7-60.8 46.8-61.9 45.7-63 91.1-125.8 90.1-124.9 46.9-62 45.5-59.8 46.8-58.7 48-56.9 47.8-54.6 50.2-51.6 50.2-49.5 52.5-46.5 53.6-42.4 55.8-39.2 57.1-35 59.3-30.9 10.3-15.5 9.1-15.5 9.1-17.7 6.8-17.4 5.8-18.5 5.6-19.6 5.8-19.6 4.5-19.7 8.1-40.2 6.8-39.1 8-39.4 9.1-37.1 5.6-3.1 4.6-2v-8.4l62.8-10.3 65-13.3 31.9-7.2 32-8.4 33-8.2 31.9-9.2 32-9.3 33.1-10.4 32-11.3 30.8-12.4 31.8-12.3 30.8-12.4 30.8-14.6 29.7-14.2 28.5-15.6 28.6-15.4 28.5-17.7 26.2-17.5 26.3-18.5 26.2-18.6 23.9-20.7 22.8-20.6 21.7-21.7 21.7-22.7 19.4-23.6 18.2-24.8 17.2-25.9 14.8-25.7 13.6-27.9 12.6-27.8 22.8-10.3 21.7-10.3 21.7-10.3 21.7-9.5 22.7-.9h21.7l21.7-1h21.7l28.5-11.4 28.5-13.5 27.3-17.5 27.5-19.5 26.2-22.8 25-24.8 24-27.8 24-28.9 22.7-31 21.7-32 20.4-33.9 19.5-35.2 17.1-36 17.2-37.3 14.8-38.1 12.4-37.1 11.6-38.3 10.1-38.1 8-38.2 5.8-38.1 4.6-37.3 1.1-36v-35.2l-2.3-33.9-5.8-33.1-6.8-30.9-10.1-28.9-12.6-28-14.9-24.7-18.3-23.8-21.6-19.6-24-17.4-1.1-44.5-2.2-52.6-1.2-27.8v-58.8l1.2-29.9 2.2-28.9 3.4-28 2.3-13.2 3.4-13.6 3.4-13.4 3.5-12.3 4.5-11.3 5.6-11.4 5.8-11.4 5.7-9.3 7.9-9.2 8.1-9.3 8.1-7.3 9.1-6.1 10.1 26.7 8 26.9 6.9 25.7 4.5 26 4.6 24.6 2.2 24.9 3.5 23.6 1.2 24.8 3.4 48.5 4.5 48.6 2.3 25.7 4.6 24.9 4.5 26.7 5.7 26.8 6.9 2.1 5.7 2.1 6.9 2.1 6.8 1 13.7.9 14.8-.9 28.6-4.2 28.4-4.1 24-74.2 22.8-71.2 20.6-68.3 19.3-65.9 8-32 6.8-31 5.8-29.9 4.5-28.8 3.4-27.8 1.2-27v-25.7l-1.2-24.8-3.4-22.8-5.8-22.6-7.8-20.6-9.3-19.6-12.4-18.8-14.8-17.4-16-15.4-20.6-14.6-21.7-12.4-25.1-11.3-28.4-9.3-32.1-7.2-34.1-6.1-38.8-5.2-41.1-2.1-45.5-1.1zm4603.3-140.3v-1.1l2.3-.8 4.5-1.1h9.2l36.6-1h40.9m-4102.5 278.5V43737.5l1 4 1.2 11.4 1.1 15.6v34.9l-1.1 15.6-1.2 11.4-1 4zm-4.6-96.9 1 37.1 1.3 36.2 1 37 1.3 37.2-1.3 65-3.3 66-3.5 65.1-3.5 66-2.3 66-1 65.1 1 32.9v33.1l2.3 31.9 3.5 33.1 15.9 9.3 13.9 10.3 11.3 9.3 10.1 10.3 10.4 10.4 9.1 11.3 9.1 13.4 11.5 15.5h87.9l9-11.4 9.1-11.4 10.3-10.3 10.2-10.3 20.6-17.5 21.7-17.5 22.7-14.5 24.1-14.4 23.9-14.5 22.8-13.5 23.9-14.3 23.9-14.6 24-15.3 21.7-17.7 11.4-9.3 11.3-10.3 10.4-10.3 10.3-11.4 10.1-11.2 10.4-12.4 9.1-13.5 9-13.4h9.1l4.8-7.2 5.6-5.1 4.5-5.2 5.8-4.2 5.6-3 5.8-3.2 6.8-3.1 8-3v-12.4l-17.1-8.2-14.9-8.3-13.6-8.4-12.6-9.2-12.4-9.3-10.4-9.3-9-10.2-8.1-11.5-8.1-10.2-6.7-12.5-5.7-12.2-6.8-12.5-9.2-27.8-9.2-30.9h-9.1l-11.3-24.9-9.1-24.6-5.8-23.8-3.3-22.8-1.3-21.7 1.3-21.6 4.5-20.7 5.7-18.5 6.8-18.6 10.3-16.4 11.3-16.6 12.6-13.3 13.7-13.5 16.1-11.4 16.9-9.2 17.2-8.2 19.4-6.4 19.4-5.1 20.5-3h20.7l21.4 1 21.7 3.1 23 6.1 21.7 7.2 22.7 10.3 21.7 12.5 21.6 15.5 21.7 17.5 20.6 20.6 20.4 22.8 19.4 25.7 18.4 28.9 17 7.3 16 5.1 15.9 3.1h16l17.2-2.1 15.9-4.1 14.8-6.1 16-7.2 16-9.3 14.7-11.4 16.1-12.4 14.7-13.5 13.8-14.3 14.8-16.6 13.8-16.5 13.6-16.4 12.6-18.7 12.4-17.5 12.6-19.6 11.4-18.6 22.9-37 19.3-37.3 17.1-35 14.8-33 12.7-27.9 9-23.8h9.1l12.6-13.4 12.6-12.3 13.7-12.4 12.4-11.4 12.6-9.2 13.6-9.3 12.6-9.3 12.6-7.3 11.4-6.2 12.6-6.1 11.4-4.2 11.3-3.1 11.4-3 10.3-1h9.1l9.1 1 9.3 1.9 7.9 3.2 6.8 5.2 6.8 5.1 5.7 7.2 4.6 8.3 4.6 9.3 2.3 11.4 2.2 12.2 1.2 13.5-1.2 14.5-1.1 16.5-2.2 18.5-4.6 19.6-4.5 20.6-7 22.8v36l-1 36.2v36.1l-1.3 36.2-2.2 20.7-3.3 23.5-2.4 24.9-1.2 24.7v24.8l1.2 12.4 2.4 11.4 3.3 10.3 4.5 10.3 5.7 9.3 6.9 9.3 26.3-4.2 25.1-6.2 23.8-7.1 24-9.5 22.9-11.2 21.7-12.4 21.7-13.4 21.5-15.5 19.4-16.6 20.7-18.5 18.1-18.5 18.2-20.7 17.2-20.6 17.1-21.7 15.9-22.7 15.9-23.7 14.9-24.8 13.7-23.8 13.8-25.7 13.6-24.9 11.4-25.7 11.4-25.7 11.6-26.9 10.1-25.7 18.4-51.7 15.9-51.6 12.5-49.5 11.4-46.5 7.9-5.1 5.8-5.3 4.5-6.1 4.6-6.2 5.8-13.4 5.5-16.6 6.9-2.9 5.7-4.3 3.6-5 3.3-6.3 4.5-13.3 2.3-13.5-28.5 5.1-70.7 14.5-102.7 21.7-119.6 24.7-126.7 25.9-119.8 23.8-52.5 9.2-46.7 9.3-38.9 6.1-29.5 3.2H76913.3l-13.6 15.4-17.2 14.5-17.2 13.4-19.4 12.3-20.4 10.3-20.5 10.3-22.9 9.3-23.9 8.4-24 8.2-25.1 6.2-26.2 6.2-26.3 5.1-27.2 5.3-27.5 4-28.5 3.2-27.3 3.1-58.2 5-58.1 3.2-57 1.9-57.1 1.1h-54.7l-52.5 1-50.2 1.1-46.9 1.1h-78.5l-27.5 6.1-30.8 8.4-32 9.3-34.1 10.2-34.3 12.5-33.1 14.3-17.1 7.2-15.9 8.4-15.9 8.2-14.9 9.3-14.9 9.2-13.6 10.4-12.6 10.3-11.4 10.3-11.4 12.4-9.1 11.4-9 12.2-6.9 13.6-5.8 13.4-4.5 13.3-2.3 15.6-1.2 14.3 1.2 16.6 2.3 16.5 5.6 16.6 7 17.5zm5599.1 212.5H81168.9l-23-4.2-22.7-1h-22.9l-23.9 1H80668l-17.1 1.1h-17l-18.4-1.1-19.3-4-18.3-4.2-19.3-6.1-20.5-6.3-19.5-8.3-78.6-35-76.5-35.1-18.2-7.2-18.2-6.3-17.1-5-15.9-4.3-16.2-1.9-14.7-1-14.8 1-12.6 3-12.6 5.3-11.4 7.2-10.1 10.2-9.3 12.5-7.8 15.4-6.9 18.5-5.8 21.7-4.5 24.9 24 47.4 25 41.2 27.5 38.1 28.5 33.2 30.8 28.8 31.8 25.9 33.2 21.7 35.3 17.5 35.4 14.3 36.4 11.4 38.8 8.4 38.8 5.1 39.9 2.1h40l41-2.1 41.1-5.1 42.2-6.3 42.2-8.2 43.3-10.4 42.2-12.3 43.3-13.4 42.2-14.5 43.4-15.5 42.1-16.5 42.3-16.4 41-17.7 41.1-18.5 41.2-18.6 77.5-36 75.2-35.2v-7.2l-1.1-6.2-23.9-9.3-16.2-6.2-16.9-4.2-26.2-6.1zm-1022 630.5 34.1-17.5 25.2-18.5 17.1-21.7 9.1-23.8 2.4-24.9-4.6-26.8-11.6-27.8-15.9-28.8-22.8-29.9-26.2-31-32-30.9-34.1-32.1-38.8-32-41.1-32-44.5-32-45.6-32.1-46.7-31.8-48-30.9-49-30.1-47.9-29.9-95.8-54.6-88.9-49.5-78.8-43.4-66.2-34.1-47.8-24.6-27.5-13.6-54.7 2.1-43.4 7.2-33 10.4-22.8 14.5-12.6 17.4-4.6 20.7 4.6 23.8 12.6 26.8 19.4 28.9 25 29.8 32.1 33.1 37.6 33 41.1 35.1 45.7 36.2 48.9 36 51.3 37.1 53.6 36.2 54.9 37.1 55.7 35.2 56 34.9 55.8 34.1 54.7 33.1 52.5 29.9 51.3 28.9 91.3 50.5 74.2 38.2 29.5 14.5 23 11.3 17.1 6.1 9.1 2.2zm-426.6 162 28.4-17.5 16-22.7 4.7-25.7-7-31.1-17-33-26.2-37.2-35.3-39.3-43.4-41.3-50.3-43.1-56.9-44.5-62.9-44.4-68.4-45.3-71.9-45.5-75.2-44.2-78.7-44.5-79.8-42.3-81-40.2-82.2-39.2-81-35.2-81-32.9-78.5-29-75.4-24.7-73-20.6-68.4-15.6-63.8-10.1-58.2-4.3-51.3 1.1-44.6 9.3-36.4 14.3-28.6 23.8-18.3 29.9-9.1 39.2 14.9 8.4 39.9 19.6 60.5 28.8 79.8 37.2 95.8 44.4 108.3 49.5 116.3 53.7 123.3 57.7 125.5 58.8 125.5 58.7 120.8 59 115.3 56.7 103.7 52.7 91.4 48.4 39.8 21.7 34.1 20.7 30.8 17.4 24 16.7 14.9 6.1 12.5 5.1 12.6 4.1 11.4 3.2 11.4 2.9 12.6 1.1 13.7 2.1 15.9 1.1zm-3460.6 146.5v.9l1.3 1.1h4.5l6.8 1h28.5l55.8 1.1 11.6 1 9.1 2.1 7.9 2.2 8 2.9 15.9 7.3 17.2 9.3 1.2 1.1 1 1.1 5.8.8h10.2l43.4 1h82.1l77.5 7.4 75.3 7.2 71.9 7.1 71.9 8.3 69.6 9.2 67.2 9.5 66.1 10.3 65 10.3 63.9 11.2 62.8 11.4 61.6 13.4 60.5 13.5 60.4 13.3 58.2 15.6 59.3 15.4 58.1 15.6 58.2 17.4 58.1 17.5 57.1 19.7 58.2 19.6 58.1 19.7 58.2 21.5 59.3 22.8 59.4 22.7 59.3 23.7 61.5 25.8 61.6 25.9 62.8 26.8 128.8 57.7 133.5 60.9 38.8 12.4 34.3 11.4 31.8 7.1 27.5 6.3 23.9 4 21.5 2.2 18.4-1.1 14.8-1.1 11.5-4 10.1-4.2 7-7.2 4.6-7.3 1-9.3v-9.2l-2.3-11.5-3.3-11.1-7-12.4-6.8-13.5-10.2-13.4-10.3-13.4-12.6-14.5-13.6-13.4-13.7-14.4-16-14.5-16-13.3-17.2-13.5-18.1-13.4-18.2-12.5-18.4-11.2-19.2-11.3-18.4-10.4-19.4-8.4-72.9-23.6-82.1-23.8-42.3-13.4-40.9-13.3-20.7-8.3-19.3-7.3-19.4-8.2-19.4-8.2-18.2-9.3-17.2-10.4-16-9.2-14.8-11.4-14.8-11.3-12.6-12.4-11.4-12.5-10.3-13.3-7.8-14.5-6.9-14.3-4.7-16.6-3.3-16.5-1.3-17.5 1.3-18.7 3.3-19.6 5.8-21.7 18.2 1 22.8 2.2 28.6 5.2 33.1 7.2 36.3 8.2 40.1 10.3 42.1 11.4 45.7 13.4 95.7 27.9 100.5 28.9 100.3 29.8 94.7 27 45.6 12.3 42.2 11.3 39.9 10.3 36.5 8.2 32 6.4 27.4 4 22.8 2.1h17l11.4-4 4.7-6.4-2.3-9.2-9.2-12.5-17-16.4-26.3-20.6-35.3-24.9-44.6-28.9-48.9-19.6-84.6-33-115.1-42.2-140.3-51.5-160.7-57.9-175.8-62-185.8-63.8-191.8-64.1-95.6-32-95.9-29.9-93.6-29.9-92.3-28.9-90.1-26.8-86.6-24.7-83.3-22.8-78.7-20.6-74.2-18.6-68.4-14.6-61.5-12.2-54.8-9.2-47.9-5.3-39.9-1.1-31 3.2-20.5 7.2-14.8 15.6-11.4 14.3-7.9 13.5-6.9 12.4-3.4 11.4-2.3 11.2v10.3l2.3 10.3 3.4 9.5 5.7 9.2 6.8 8.2 8.1 8.3 7.8 7.2 10.4 8.1 10.3 7.4 11.4 7.2 23.9 14.5 25 14.3 24 16.6 22.9 16.5 10.2 9.2 9.3 9.3 9.1 10.4 6.8 10.3 5.5 11.3 4.6 12.5 2.3 12.4 1.2 14.4-14.9 4.1-18.2 3H76944.1l-26.3-1.9-28.5-4.2-30.8-4.2-31.8-5.1-68.5-12.4-73-14.4-74.2-14.5-75.2-12.4-37.6-6.1-36.6-4.2-36.3-4-34.3-3.2-33.2-1.1h-31.9l-30.8 2.2-28.5 3.1-25 6.2-24 7.1-20.6 10.3-18.3 12.4-14.8 15.5-11.4 17.6-7.9 21.7-3.5 23.6 8.1 26 9.1 21.6 7.8 18.6 9.3 16.4 9.1 13.5 10.1 11.3 10.4 10.3 11.3 8.3 13.9 7.1 14.7 5.3 17.1 5.1 18.2 5.2 44.6 9.3 55.8 11.3zm3128.7 154.7 12.6-5.1 11.4-6.3 11.3-7.2 10.4-7.1 9.1-8.2 9.1-8.3 8-10.3 6.8-10.3 1.1-28-10.2-31-22.9-33.9-33.1-36.2-42.1-39.2-51.5-41.2-59.3-43.4-67.1-44.3-74.2-44.4-79.9-46.4-85.6-45.5-88.8-46.3-93.6-45.5-97-44.3-98.1-44.4-100.2-42.3-101.6-40.3-101.6-38.1-100.3-36.2-99.2-32.9-96.9-30-93.6-26.9-90.1-22.7-85.5-18.5-81-13.4-75.3-9.4-67.3-4-61.6 2.1-52.5 7.2-43.4 14.5-34.1 20.6-23.9 26.8 2.2 17.5 7.9 16.6 13.8 17.5 17.2 15.4 21.5 16.6 26.3 15.4 28.4 15.5 33.1 15.5 36.6 14.5 38.8 14.3 40.9 14.6 43.4 13.4 44.7 14.4 46.7 12.4 47.9 13.4 49 12.3 99.2 24.8 98.1 22.8 96.9 21.7 91.3 20.6 83.2 19.6 74.2 17.5 33.1 8.2 28.6 8.3 25 8.1 21.6 7.4 49 27.8 53.7 32 57 36.1 60.4 40.2 62.8 41.3 65.1 42.3 66.1 43.4 66.1 42.3 67.3 41.3 67.2 39.2 33.1 18.6 33.2 17.4 33.1 16.7 31.9 15.3 31.9 13.6 31.9 13.2 30.8 11.4 29.7 9.3 29.6 8.4 28.5 6.1 27.5 4.2 26.2 1.9zm-3752.5 25.9h-35.4l-31.9 1h-8.1l-3.3 1.1-1.2 1.1-1.1.8-19.4 5.3-15.9 5.1-12.6 6.2-9.1 7.2-5.8 7.2-2.3 7.3 1.3 7.2 3.3 8.2 5.8 8.2 7.8 8.5 10.4 9.2 11.3 8.2 28.5 18.5 33.1 18.6 73.1 38.2 68.4 37.2 16 9.3 13.6 9.2 12.5 8.3 10.4 8.2 8 8.4 6.9 8.2 4.5 7.2 1.1 7.1-13.6 15.6-12.7 15.4-9 14.6-9.1 14.3-6.9 15.6-6.8 15.3-6.8 17.7-5.8 19.6-38.8-1.1-37.6-3.1-37.6-5-37.7-5.3-77.7-1.1h-50l-4.7 1.1-2.2 1.1v1l-23.8 2.1-23 4-20.4 3.1-18.4 4.3-17 5-14.9 4.3-13.6 6.1-12.6 5.2-10.3 6.1-10.2 7.2-8 7.3-5.8 8.3-5.6 8.2-4.5 8.2-3.5 9.3-2.3 9.3-1.2 10.3V45586.5l2.4 12.4 4.6 25.7 6.8 28.1 20.4 63.8 24 74.4-39.9 20.6-33 18.5-26.3 16.5-21.7 13.5-18.1 11.3-17.1 9.3-6.9 3.1-8 3-8.1 3.1-7.9 2.1-8 1.1-8.1 1h-20.4l-24-2.1-28.5-4.1-79.8-13.3-114-20.7h-278.4l-17.1 5.1-28.5 8.2-36.6 10.3-43.1 13.5-48 14.5-47.9 16.5-46.7 17.4-43.4 18.6-19.4 9.5-18.2 9.2-14.9 9.3-13.6 9.3-10.4 9.2-6.8 9.3-3.5 8.2v9.3l3.5 8.2 9.1 7.3 12.6 7.2 18.2 7.2 22.8 7.3 28.6 5.1 35.4 6.4 40.9 4v6.1H75199v-6.1l21.7-2.1 21.6-1.9 21.7-2.1 20.5-2.2 21.6-2.1 21.7-2.1 21.7-1.9 20.5-2.1H75686l8 7.2 6.8 5.3 10.4 5 15.9 7.1 3.4 1.1 1.1 1 25.2 1.1h24l23.9 1.1h25.1l23.9 1h24l25 1.1h24l9.1 4 9.2 3.2 10.2 4.1 8 4h125.4l50.3 5.3 50.2 6.2 47.9 7.1 49 8.4 95.9 17.5 93.4 20.6 94.8 20.7 93.4 20.6 48 10.4 47.8 9.2 48 8.2 49 8.3 3.5 8.2 6.8 7.3 9.1 8.3 11.3 7.1 12.7 8.2 15.9 7.4 17.1 7.1 19.4 8.3 42.2 14.5 47.9 15.4 51.3 15.6 53.7 15.3 54.7 16.5 54.8 17.7 53.5 17.5 51.5 18.5 23.8 10.3 22.8 10.3 22.8 10.4 20.6 10.3 18.2 11.4 17.2 11.3 15.9 11.4 13.6 12.4 33.1 24.7 32 21.7 31.8 20.6 30.8 18.6 31 17.5 29.6 14.5 28.5 12.4 26.2 11.4 26.3 8.2 23.9 7.1 22.8 5.3 21.7 3 19.3 1 17.3-1 15.9-3 12.5-5.3 11.4-7.1 9.1-9.3 5.8-11.4 3.3-13.4 1.2-15.4-2.3-17.7-4.5-19.5-8.1-22.7-11.3-23.7-14.9-25.8-17.1-29-21.7-29.9-25.1-32.9-29.7-34.1-33-37.1-36.5-39.3-9-18.6-11.6-23.6-12.4-28-12.6-28.9-4.5-15.3-3.5-14.5-3.3-14.6-1.3-13.3v-12.4l2.3-11.4 2.3-5 2.2-5.3 3.6-4 3.3-4.2 65.1-1h33l8-1.1h3.4l2.3-1.1v-1l11.5-5.1 10.1-6.3 8.1-7.1 9.1-9.4 38.9 12.5 52.4 18.6 61.6 21.7 67.3 21.6 35.4 9.3 34.1 8.2 33 7.2 32.1 5.2 15.9 1.1 14.8 1h14.9l13.7-1 12.6-1.1 12.4-2 11.5-3.2 11.3-4 6.9-3.2 4.6-3.2 4.5-2.9 3.5-4.2 6.8-8.2 7.9-10.4v-14.5l-3.4-14.3-4.5-13.5-5.7-12.4-6.9-11.4-9.1-11.1-9-10.4-11.5-10.3-12.5-8.4-12.6-9.3-14.9-7.1-14.7-7.2-16.1-7.3-15.9-6.2-17.2-6.1-17.1-5.3-35.3-10.3-36.4-8.2-36.6-7.2-35.3-6.3-66.1-10.3-54.8-10.3-3.5-34-3.3-35.1-1.3-16.5-1-17.6v-33.9l1-16.7 3.6-15.4 3.3-16.4 5.7-15.6 6.9-16.5 9.1-14.5 10.3-15.3 12.4-14.6 17.1 5.3 18.4 5 19.2 7.2 21.7 8.4 44.7 18.5 48.9 21.7 51.3 21.6 53.7 22.7 54.8 22.7 53.5 19.7 27.4 9.2 26.3 8.2 26.2 7.4 25.1 6.1 25.1 5.1 23.8 3.1 24 2.2h21.7l21.7-1.1 19.4-3.2 18.2-6.1 17.1-7.2 14.9-10.3 13.6-12.4 12.6-14.6 10.4-17.4-3.5-21.7-10.4-21.7-15.9-22.5-20.4-21.7-27.5-22.8-31.8-21.7-36.6-21.7-39.8-21.7-44.7-21.7-47.8-21.5-50.1-20.6-53.8-20.7-55.8-20.6-57-19.6-59.3-18.7-60.5-18.6-61.6-18.5-61.5-17.5-61.7-16.6-61.5-15.4-60.5-14.5-59.4-14.4-58-13.5-57-11.3-53.8-11.4-52.5-9.2-47.9-9.3-45.5-7.2-42.3-6.2-37.6-5.2-33-4.2-28.6-1.9v-1l-1-1.1h-3.6l-6.8-1.1h-26.2l-50.2-1-84.3-14.5-84.5-14.4-84.3-15.5-84.5-14.4-85.6-15.5-84.3-14.4-85.5-15.6-85.5-14.3-85.6-14.5-85.5-14.3-85.6-13.6-85.5-13.4-84.5-13.5-85.5-12.2-84.3-11.4-83.4-10.3h-26.2l-26.3 1-27.4 1.1-27.3 1.9m10.2 991.7h-311.4l13.8-1 35.3-1.1 49.1-1h114l50.2 1 35.3 1.1 13.7 1zm-273.6 276.6-5.8-1.1-15.9-1-21.7-1.1h-49l-21.7 1.1-14.9 1-5.7 1.1-13.7 1-13.6 1.1h-75.4l-57.1.8H75050.7l-15.9 1.1h-9.2l-2.3 1.1-1 1-10.4 2.1-12.6 2.1h-289.6l-73-1h-146.1l-72.9-1.1h-186l-40.9 1.1-40 1h-41l-24-3.1-23.9-1.1h-25.2l-23.8 1.1-24 3.1-23.9 4-24 5.3-23.9 6.1-23 6.3-21.7 8.2-21.5 9.3-20.6 9.2-19.4 10.4-17 10.3-17.1 11.4-14.9 12.4-13.7 12.2-11.3 11.4-10.4 13.5-8 12.4-5.6 12.4-3.5 12.2-1 12.5 1 12.4 4.5 11.3 6.9 11.5 9 11.3 12.7 10.4 16.1 10.2 19.2 8.3 22.9 8.2 26.3 7.2 4.5 2 11.4 1.1h69.6l11.3-1.1 4.6-2 24-5.1 23.9-3.1 22.7-2.1h23l22.8 2.1 22.7 3.1 20.6 5.1 21.7 5.2 19.4 7.2 19.2 8.2 18.4 9.3 16 10.3 15.9 11.4 14.8 11.4 13.7 12.4 11.3 13.3 10.4 13.4 9.1 14.5 6.8 13.4 4.7 14.5 3.3 14.5 1.3 14.4-1.3 14.5-3.3 14.3-4.7 13.5-7.9 13.4-10.3 13.4-12.6 12.3-15.9 11.4-17.2 10.3-21.7 10.4-23.7 9.2-61.8 1.1h-30.7l-7.9 1h-4.6l-1.2 1.1v1.1h-49l-22.9-2.2-22.7-2.1-21.7-3.1-21.7-4.1-21.7-4.1-20.5-5.1-42.1-12.5-42.4-13.4-43.2-15.4-44.6-15.5-7.9-2.1h-22.9l-30.7-1h-71.8l-30.8 1h-21.7l-9.1 2.1-18.4 3.1-18.1 4.2-18.2 5.1-18.4 5.2-18.2 6.1-17.2 6.1-17.1 7.4-15.9 7.1-15.9 7.2-14.9 8.3-13.6 8.3-12.7 8.3-12.5 9.2-10.2 8.3-9.2 9.3-6.9 9.2-5.6 8.2-4.5 9.3-2.2 8.4-1.3 9.3 1.3 8.2 3.3 8.2 5.7 7.2 7.9 8.4 10.3 7.2 12.6 6.1 15.9 6.3 18.2 6.1 20.6 5.3 24 4 27.3 4.2 29.7 3h43.3l21.7 1h63.8l21.7 1h21.7l27.5 4.2 27.2 5.1 26.3 5.3 26.2 5.1 26.3 6.2 25.2 8.3 25 8.2 26.2 10.3 2.3 26.8 1 24.8-2.2 23.8-4.6 20.6-6.8 19.7-9.1 17.4-10.3 15.4-12.4 15.6-13.9 12.4-15.9 11.3-18.2 10.4-18.2 9.3-20.6 7.1-20.5 7.2-22.9 5.3-22.7 5.1-22.8 3.1-25.2 3.1-25 1.9-25.2 1.1-51.2 1-51.5-1-97.9-6.1-86.8-6.1h-153.9l-28.5 6.1-29.8 8.2-28.5 9.3-28.5 10.3-25 11.4-24 12.4-10.3 6.1-10.2 6.3-8 7.2-8 6.1-5.7 7.3-5.8 7.2-3.3 8.3-2.2 7.1-1.3 7.4v8.2l2.4 8.2 4.4 8.2 5.8 8.3 7.9 8.3 10.3 8.3 11.4 8.2 14.9 8.2 15.9 9.3 18.4 8.2 21.7 9.5v6.1h125.4v-6.1l38.8-8.4 38.7-6.1 38.8-7.2 38.8-6.3 38.7-5.1 38.9-5.2 38.8-5.1 38.7-5.3 27.4-1h26.2l26.3-.9h27.3l35.3.9 36.6 1 35.3 1 35.3 1.1H73739.2l59.3-2.1 60.3-1.9 59.3-1.1 60.5-1 59.3 1 59.4 2 29.7 2 29.5 2.2 29.8 3.1 29.5 4.1v6.2H74577.4l29.6-1h14.9l5.7-1 1.1-2.1h36.6l35.2 1 35.4 2.1 34.3 3 68.4 9.4 67.3 10.3 67.2 10.4 68.6 9.2 35.3 3 35.4 3.1 35.3 1.1h57l20.5 1h19.4l19.4 1.1 20.5 1 21.6 1.1 20.7 1.9 19.3 2.1 40 5.3 38.7 7.1 37.8 8.3 36.3 10.3 36.6 10.3 36.4 10.4 71.9 23.7 73.2 23.7 37.6 11.3 37.6 10.4 38.8 9.2 39.8 8.2h107.3l35.3 4.3 37.6 4.1 38.9 5.1 38.6 6.3 41.1 7.2 39.9 7.1 41.1 9.3 39.9 10.3 39.9 10.3 38.9 12.4 37.6 13.6 35.3 15.3 17.2 7.2 17.1 8.4 15.9 9.3 15.9 8.2 14.9 10.3 13.6 9.3 13.8 10.3 13.7 10.4 21.7-2.2 22.8-1 21.7-2.1 21.6-.9 6.9 16.4 11.3 14.4 13.8 14.5 17 12.4 19.4 11.4 21.7 10.3 24 9.3 25 8.2 26.3 6.2 26.2 6.2 27.4 4 27.3 4.3 26.3 2.1 26.2 1h25.2l24-1 21.5-1.1 20.6-3.1 17.1-4 14.8-5.3 11.5-6.2 7.9-7.3 3.4-8.2v-9.2l-4.5-9.4-10.3-11.3-14.9-12.5-20.4-12.2-26.3-14.5-34.3-14.5-39.8-15.4-46.7-17.5-35.4-6.3-33-9.3-29.8-11.3-26.2-12.3-22.8-13.4-19.4-14.5-17.2-16.5-13.6-16.4-11.4-17.7-8-18.5-5.8-17.6-3.3-18.5v-18.8l2.3-18.5 3.3-17.4 7-17.6 10.2-17.6 10.3-15.4 13.6-14.5 16-13.3 17.1-12.4 19.4-10.4 21.7-9.2 22.8-6.1 23.9-5.3 26.2-2.2h28.5l28.6 2.2 30.7 6.1 32.1 8.4 33 11.2 34.3 15.5 22.8 17.6 22.7 14.5 21.7 13.3 20.7 9.5 20.4 8.1 19.4 6.1 18.2 4.3 18.4 2.1h15.9l15.9-1.1 14.9-3.1 13.7-4.3 12.5-6.1 11.4-7.1 10.3-7.4 9.1-9.2 7.8-10.4 7.1-11.3 4.5-11.2 3.3-12.5 2.4-12.4 1.1-12.4-1.1-13.3-2.4-13.5-4.5-13.4-5.6-13.5-8.1-13.3-9-12.5-11.4-13.4-13.9-11.3-14.6-11.2-17.2-11.5h-87.7l-26.3-16.6-22.9-17.4-19.5-18.6-14.7-20.6-11.3-21.7-8.1-21.7-5.7-22.7-2.3-22.6v-22.7l3.5-22.8 5.6-22.7 8-21.7 10.3-21.5 11.4-20.7 13.7-19.7 14.9-18.6 15.9-17.5 18.3-14.5 18.2-14.4 20.4-11.3 19.5-9.3 20.5-7.2 21.7-4.2 21.7-1 20.6 1 21.5 4.2 20.6 8.2 20.5 11.4 19.4 15.4 18.3 18.6 17.1 23.7 17.1 27.8 19.4 8.3 21.7 9.4 21.7 9.3 23.8 8.2 22.9 8.2 24 5.3 11.4.9 11.3 1h11.4l10.3-1 9.1-30 2.3-29.8-4.6-28.9-10.3-28.9-14.7-27.8-20.6-26.9-26.3-26.8-29.5-25.7-34.3-25.9-37.6-24.9-41.1-23.6-43.2-23.8-46.9-22.7-49-22.6-51.3-21.7-52.4-20.6-53.7-20.6-54.8-19.6-55.8-18.5-56-18.8-109.4-33.9-106.1-32-100.4-28.9-91.2-25.9-78.6-22.6-63.9-20.6-26.2.8h-26.3l-26.2 1.1-27.5 1.1-19.4-1.1-19.4-1.1h-20.5l-19.4-.8-51.3-10.4-50.2-10.2-50.2-10.4-50.2-10.3-49-10.3-50.1-9.3-49.1-10.3-49.1-10.3-49-9.5-50.2-10.3-49-9.3-50.2-9.2-50.2-9.3-51.4-8.3-51.3-9.2-51.2-8.2zm-1140.6 8.2v4.2h-40.1l-40.9-1.1-40-1m-3198.2 8.2v-6.1h-53.5l-27.4.9h-6.9l-3.5 1-1.1 1.1v3.1h92.4zm-4.5 0h-21.7l-21.7-1.1h-21.7l-22.8-1m3849.5-6.1-73 1h-146.1l-72.9 1.1h-145.9m-3488 558.2-1-18.7-1.2-18.6-1.1-18.5-1.3-17.5v42.4l1.3 21.7v5l1.1 3.1 1.2 1.1h1zm892 39.2 17.2-2.1 18.1-2.1 17.2-2.1 17.1-1.9 7.9-17.7 5.8-23.6 3.3-28 1.2-32.9-1.2-36.2-3.3-40.2-5.8-43.4-6.8-45.3-9.1-47.4-11.4-49.7-12.6-50.6-13.6-51.6-14.9-52.5-17.2-51.6-17.1-50.5-18.2-50.6-20.4-48.6-19.5-46.4-21.7-43.3-21.7-41.4-21.7-38.1-22.7-34-22.9-30-22.8-24.6-23.9-19.6-22.8-14.5-22.9-8.3-21.7-1-22.7 5.2-21.7 12.2-20.4 20.7-20.7 29.9-5.6 32-4.6 34.2-1.2 18.5-1 17.4v18.6l1 18.7 1.2 18.6 2.4 17.5 3.3 17.4 4.5 17.7 5.8 16.5 6.8 15.6 6.8 15.3 9.1 14.5 25.2 17.6 21.7 18.5 20.5 20.6 17.1 21.7 14.9 22.8 13.7 23.6 11.3 24.8 9.1 25.8 8 25.8 8.1 26.8 5.6 26.9 5.7 27.9 7.9 54.6 6.9 54.7 8 52.7 9.1 50.5 5.8 23.8 6.8 22.5 8 21.7 9.1 20.7 10.2 19.6 12.5 17.5 13.7 16.6 17.1 14.3 18.4 12.5 20.5 10.2 24 8.3 26.2 6.3zm-472.3-51.6-1.1-2.1-3.5-11.3-2.2-10.4-1.1-23.6v-24.9l-1.2-23.8v-23.6l-4.6-26.9-5.5-27.8-8.1-29.9-8.1-30-10.1-29.8-10.3-31-13.7-31-13.6-29.9-16.1-28.9-17.2-27.9-9.1-13.3-9-13.5-10.3-12.5-10.2-12.2-10.3-11.4-11.4-11.3-11.4-10.4-11.5-9.2-12.4-9.3-12.6-8.4-12.7-8.2-13.6-7.2m-92.4 0-15.9 7.2-17.1 7.3-14.8 8.3-14.9 9.3-14.7 10.2-12.6 11.5-11.4 12.2-10.3 14.5v118.6l-1.2 29.9v60l-1.1 30 4.6 19.5 4.5 20.7 3.5 19.5 4.5 19.6 3.4 19.6 4.5 20.6 3.5 19.7 4.5 20.6m4.6 73.3 9.1 58.8 14.9 90.8 10.3 52.6 10.2 56.7 12.6 58.8 13.6 57.9 13.8 57.7 15.9 54.7 7.9 25.7 9.3 26 9.1 22.5 7.9 21.7 10.2 20.6 9.1 18.7 9.2 15.5 10.3 14.3 10.3 11.4 10.2 8.4 10.2 6.1 11.5 2.2v32.8l1.2 33.1v99l1 33v66.2l3.5 27.8 6.8 26.8 8.1 24.8 10.2 23.8 11.5 21.5 12.4 21.7 14.9 21.7 14.8 19.6 31.8 38.1 34.4 38.3 34.3 37.1 31.8 38.2 14.9 19.5 14.8 19.6 12.4 21.7 11.6 21.7 10.1 22.8 8.1 24.8 6.8 24.7 4.6 26.7 2.2 28-1.1 29.9-3.4 32-5.6 34-9.3 35.1-12.4 38.2-17.1 40.2-19.5 42.3-5.8 2.2-6.8 2.1-6.8 27.7-2.3 22.8 1.3 16.5 4.5 11.3 7.9 6.1 10.3 1.1 13.6-3.2 16.2-8.2 18.1-11.4 19.5-15.3 22.7-17.6 22.9-21.7 25-23.7 26.2-25.8 27.4-27.9 27.4-30 57-62.7 55.9-65.1 54.7-65.1 51.4-61.9 45.7-56.7 37.6-49.5 28.5-38.1 18.2-24.9h9.1v-13.5l-21.7-14.3-21.7-13.5-19.2-11.3-17.2-9.3-17.1-8.3-15.9-5.2-14.9-5-13.6-3.2-12.7-2.1-11.3-.9-11.4-1-10.3 1-10.3 1.9-10.2 2.1-9.2 3.2-9.2 3-17.1 6.2-17 7.2-17.1 6.4-19.4 5-10.3 2.1h-21.7l-12.5-1-12.6-2.1-13.6-4-14.8-4.3-16-6.1v-9.4l-29.7-13.4-28.5-13.4-28.5-13.4-28.5-13.4-5.7-19.5-7-19.6-7.9-18.8-6.8-19.5-17.1-37.2-17.1-37v-53.8l1.2-54.7v-53.5l1-54.7v-216.8l3.6-10.3 3.3-9.3 16-3 14.8-4.1 14.8-4.3 14.9-2.9 22.7 12.2 22.9 10.3 24 10.4 23.8 9.4 25.2 8.2 23.9 8.2 25 8.3 25.3 6.1h152.7l16.1-8.3 12.4-9.2 7-9.3 4.6-9.3v-9.2l-3.6-10.4-6.8-10.2-9.1-11.5-12.6-11.3-14.9-11.4-17.1-11.3-19.2-12.3-42.3-25.9-47.8-27.8-50.2-28.9-51.4-31-25-16.6-25.3-16.4-23.9-17.5-22.7-17.6-21.7-17.6-19.5-18.5-18.2-19.6-17.1-19.6-13.6-20.6-11.5-20.6-8-21.7-5.5-21.7-1.3-24.7v-24.8l-1.2-24.7m0 0v-23.8 23.8zm-554.2 409.5v-51.6l-1.2-39.2v-46.3l-1.1-11.4v-6.3l-1.2-2h-1.1l-11.5-37.2-11.4-30.9-12.4-26.8-13.8-20.6-13.6-16.5-14.9-12.4-13.7-7.2-14.8-3.2-14.9 1.1-14.7 4-14.9 9.3-13.6 11.4-13.9 15.5-12.3 19.6-11.4 21.7-11.5 23.6-9.2 28-7.8 29.9-7.1 32-5.5 33.9-3.6 36.3-1 38.1v39.2l2.3 41.3 5.6 42.3 7 44.5 10.1 44.2 12.6 45.5 15.9 45.3 19.5 46.5 21.7 46.4 25 46.6 21.7-3.2 20.6-5.3 18.2-5 17.2-7.2 14.8-8.4 12.4-8.2 12.6-10.4 10.3-10.2 9.2-11.5 6.8-12.2 6.8-12.4 5.7-13.5 3.4-14.3 3.5-14.5 2.2-15.6 1.1-15.4 1.3-16.5v-16.6l-1.3-16.4-1.1-16.6-3.4-35-5.7-34.1-12.5-68-11.4-64.1zm354.6 509.8V47593.6l1.2 82.5 1.2 61.8 1.1 44.3v47.5l-1.1 9.4-1.2 4.1h-1.2zm2326.8 36.2h-23.8l-25.3.8-23.9 1.1-23.9 2.1-24 4.2-24 8.2-25 8.2-26.2 9.3-25 8.2-25.2 6.4-12.6 2.9-11.4 2.1h-156.2l-27.5-2.1-28.5-.9-27.3-2-27.4-2.2-28.4-2.1-27.4-2.9h-121l-38.8 12.2-37.6 13.5-36.5 13.4-37.7 11.4v8.2l-12.3 4-14.9 3.2-28.5 3.2-52.5 6.1-11.4 23.8-3.5 18.5 5.8 13.5 12.4 10.3 19.4 6.1 26.2 3.1 30.8 1.1 36.6-2.1 39.9-3.1 44.4-5.1 46.9-6.3 48.9-6.2 50.3-7.1 51.3-6.3 51.4-5.1 51.3-5.2 50.1-3.1 49-1 45.7 2 43.4 4.2 39.8 7.1 35.4 11.4 29.7 15.6 25 19.6 18.4 25.7 11.3 29.9 3.4 36.3-4.6 42.1-13.6 49.6-22.8 56.7-33 64.1-43.4 71.2h-9.1v9.2l-25.2 8.2-24 9.3-23.9 7.2-23.9 7.4-24.1 7.1-25 6.2-25 6.2-25.2 5.1-1 50.6v54.7l-1.3 28.9-2.2 28.9-3.3 28.9-4.7 29-2.4 14.3-3.3 13.5-4.5 13.3-4.6 13.5-4.5 13.4-5.8 12.4-6.8 11.4-6.8 12.3-8 11.3-8.1 10.4-10.2 9.2-10.3 9.3-10.3 9.2-12.4 7.4-13.8 7.2-13.7 6.1 6.9 13.5 9.2 12.4 11.4 10.3 13.7 10.3 15.9 9.3 17.1 7.2 19.4 7.1 20.4 6.4 23 5 22.7 4.2 25.1 4.2 25.1 3 26.3 2.1 26.2 2.1 27.3 1.1 27.5 1 54.7 1 54.7-1 51.3-2.1 49.2-2.1 84.3-5.1 55.8-3.2 78.7 6.2 101.7 8.2 120.9 10.3 135.7 13.5 148.2 15.6 157.4 18.5 79.7 10.3 81 10.3 82.3 12.4 82 13.3 81 13.5 80 14.4 78.7 16.6 77.5 16.4 74.2 17.6 71.7 19.7 69.6 19.6 65.1 21.7 61.6 21.5 56.9 23.8 51.3 24.8 46.9 26.8 41 26.7 34.2 29.1 28.5 29.9 20.5 31.8 36.6 11.4 51.3 19.6 61.5 21.7 66.3 21.7 33.1 9.3 30.8 8.2 29.5 6.3 27.5 4h23.9l11.4-1 9.1-.9 8-3.1 7.9-3.2 5.8-5.1 4.6-6.2-3.5-37.2-2.3-37-2.3-38.3v-55.7l2.3-18.5 2.3-18.7 3.5-18.6 4.5-17.5 4.6-17.5 8-17.7 7.9-16.4h9.2l9.1-13.5 7.9-11.2 9.3-10.3 9.1-9.4 9.1-7.2 9-7.2 9.2-5.2 10.3-5.1 11.3-5.3 11.4-2.9 11.6-4.2 13.6-3.1 27.3-7.2 32-8.3-1.2-82.5-2.2-73.3 1.1-32.9 2.3-30.9 1-15.6 3.6-13.5 3.3-14.3 4.7-12.5 4.6-12.4 6.8-12.4 7.8-11.2 8.1-10.4 10.3-10.2 11.4-9.3 12.6-9.5 13.6-8.2 15.9-8.2 17.2-7.2 19.4-6.3 20.5-6.1 22.9-5.1 25-5.2 27.3-4.3 28.5-4 27.5 8.3 28.5 7.2 14.8 2.1h20.5l6.9-2.1 6.8-2 6.8-3.1-14.7-48.5-10.3-43.4-6.8-38.1-4.6-34.1v-29.9l2.3-25.9 4.6-21.5 8-18.7 10.1-14.4 12.6-12.4 13.7-9.3 17.1-6.1 17.1-4.2 20.5-2.1h20.5l22.9 2.1 22.8 3.1 25.1 4 25.1 6.4 25.1 6.1 52.5 13.5 52.4 13.3 26.1 6.2 25.3 5.1 25 5.3 23.9 2.9 23 3.2h22.7l20.5-1 19.4-3 3.5-32-4.5-31-13.7-32-21.7-31-29.7-30.9-36.6-31-43.2-29.9-49.1-29.9-54.8-28.9-58.1-28.9-62.8-27.9-67.2-26.8-68.5-25.9-71.7-24.7-74.2-23.8-74.2-22.7-75.2-21.5-75.5-19.6-73.9-18.8-74.2-16.4-70.8-15.4-69.5-13.4-66.1-11.4-62.8-9.3-59.3-7.2-53.7-5.2-49-3.1-42.2-1.1-36.5 1.1-29.6 4.1-21.7 7.2-12.5 9.3-63.9-1.1-62.8-.8-61.6-2.1-62.7-3.2-61.5-4.2-62.8-4-61.6-5.2-61.6-6.2-123.1-11.4-122.1-12.4-122.1-13.3-123.2-12.4-123.1-10.3-123.2-9.3-61.6-4.2-61.5-2.1-62.8-3-61.6-1h-62.8l-62.6 1-63.9 2.1-62.8 3-63.8 4.2-65.1 6.2-63.8 7.2-65.1 9.4zm-2984.9 719.1H70429l36.6 15.4 30.8 15.6 6.8 2.1 8.1 1h5.6l6.8-1 7-2.1 6.8-4.2 5.6-6.1 6.8-8.3 1.3-19.5 1.2-18.8 1-18.5 1.3-18.6v-41.3l-1.3-19.6-1-18.5v-19.6l-2.5-16.6-3.3-16.5-4.5-15.3-4.6-15.6-5.8-14.4-6.8-14.5-8-14.5-9.1-13.3-9.1-13.4-10.4-13.5-10.1-13.3-11.6-12.4-23.7-23.8-26.3-23.8-27.4-21.5-28.6-21.7-29.5-21.7-29.8-20.6-58-39.3-56-39.1-8-13.5-5.7-14.5-5.8-14.4-5.5-14.5-8-29.9-6.9-29.9-11.4-59.8-9.1-59.8-6.9-30-6.9-27.8-4.5-14.5-5.6-13.5-5.8-13.3-5.8-13.4-6.8-12.5-7.9-12.4-9.2-12.3-10.2-11.3-10.3-11.4-12.6-10.3-12.4-10.3-14.9-9.3h-5.8l-5.5 1.1-6.8 1.9-7.1 2.1-14.6 7.3-13.9 8.3-13.6 10.2-10.2 9.3-4.7 5.1-3.3 5.3-3.5 5.1-1.1 4.1-4.6 1.1-4.5 1-18.3 40.3-16 36-11.3 34.1-9.1 32.1-5.8 29.8-2.3 26.8-1.1 25.9 2.4 23.6 3.3 22.8 5.8 21.7 7.8 19.5 9.3 18.6 11.4 18.6 12.4 16.6 12.6 17.5 14.9 15.3 29.5 33.1 32 32 17.1 17.5 16 16.7 14.9 18.5 15.9 19.6 13.6 19.5 13.8 21.7 12.5 22.8 11.5 24.6 10.2 26 9.1 27.8 6.9 29.8 4.6 33.2 10.2 49.4 12.6 47.5 6.8 21.6 8 20.7 4.5 9.2 4.6 9.3 5.8 8.3 5.5 7.3 5.8 7.2 6.9 7.1 5.6 5.3 8 5.1 8 4.2 7.9 3.1 8.1 3 9 1H70269.5l11.4-2 11.3-3.1 12.7-4.1 12.3-5.1 13.9-6.3 14.7-7.2zm312.6 319.8v18.7l-1.2 18.5v17.6l-1.1 19.5 1.1 23.9v24.6l1.2 24.9v24.6l-2.3 12.4-4.6 12.4-6.8 12.5-9.2 14.3-11.4 13.5-12.4 14.5-13.8 15.4-14.8 14.5-68.5 63-68.4 63.8-15.9 16.7-14.9 15.4-13.6 15.5-11.4 14.3-10.3 15.6-9.1 14.4-5.8 13.4-3.3 13.5-2.3 13.3 2.3 12.4 3.3 11.4 8 11.3 11.4 10.4 14.9 10.3 18.2 8.2 22.9 8.3 9.1-12.5 9.1-11.3 10.3-11.2 10.2-11.4 22.8-21.7 25.1-21.7 27.5-19.5 27.3-20.7 29.7-19.6 28.5-19.6 28.5-19.6 28.5-19.6 27.3-19.6 25-19.8 24-20.4 21.7-20.7 10.3-10.3 9.1-10.3 8-11.4 6.9-10.3h10.3l7.8-26.9 11.5-36.1 11.5-44.4 10.2-49.5 5.7-25.7 4.5-27 3.6-27.8 3.3-27.8 3.5-27.8 1-28 1.2-27.8-1.2-26.8-1-25.8-3.5-23.7-4.5-23.7-5.8-21.7-7.9-19.6-10.4-18.6-11.3-15.6-13.7-12.4-16-10.3-18.3-7.1-21.6-4.1h-22.7l-26.3 3-29.7 7.3-30.8 11.2-35.4 15.6v12.4l1.2 15.4 1.1 19.6 2.3 23.8 2.2 30.9 2.3 37.1 3.5 45.5 2.3 54.6zm-920.5 273.6 12.6-21.7 10.3-25.9 10.1-29.9 8.1-33.1 7.9-35 7-39.2 5.6-40.2 4.6-42.3 3.4-43.4 2.3-44.4 1-45.3v-45.5l-2.3-45.3-3.3-44.5-4.5-42.3-5.8-42.1-8-39.4-9.1-37.1-10.2-35.2-12.6-31.8-14.8-28-16-23.6-18.1-19.6-19.5-14.5-21.7-10.3-23.9-4.2-25 2.1-27.5 8.2-29.6 15.6-31.9 21.7-34.4 29.8-35.3 38.2-6.9 25.9-4.4 24.6-3.6 24.9-3.3 24.6-1.2 23.9v23.8l1.2 23.6 1.1 23.8 3.5 22.7 3.4 22.6 4.6 22.7 4.5 22.8 5.7 22.7 6.8 21.7 7 22.5 7.9 21.7 17.1 44.5 18.2 43.4 20.6 44.2 20.5 45.5 21.7 45.3 20.5 46.5 20.6 47.5 20.4 47.4 24 2 24 2.1 24 2.1 22.7 3.2zm-595.3 569.6 25-5.2 22.9-7.2 21.5-9.3 19.5-11.4 17.1-12.4 14.9-14.6 13.6-16.4 12.6-17.5 10.2-19.6 8-19.6 8.1-21.7 5.6-21.7 3.5-23.7 3.3-23.7 1.2-23.8 1-24.8-1-24.6-2.3-24.9-2.2-25.7-4.6-24.9-4.5-24.6-5.8-24.9-6.8-23.7-8.1-23.7-7.8-22.7-8.1-21.7-10.3-21.7-9.1-19.6-10.1-18.5-11.6-17.5-11.4-15.6-11.4-14.3h-13.6l-16.1.9-18.2 2-17.1 3.2-7.9 2.1-8.1 3-8 3.1-6.8 3.2-5.6 5-5.8 4.2-4.5 5.1-2.3 6.3H69091.1l-9 12.5-10.3 14.3-10.2 15.6-9.1 16.4-10.3 18.5-9.1 19.6-8.1 20.7-8 21.6-7.9 21.7-6.8 23.8-5.7 22.6-5.8 24.8-4.6 23.8-3.3 23.6-3.5 24.9-1.1 23.8-1.2 23.6v23.8l2.3 22.8 3.5 22.5 3.3 20.6 5.8 20.7 8 19.6 7.9 17.6 11.4 16.5 11.5 15.6 13.7 13.2 15.9 11.5 18.4 10.2 19.2 8.3 20.6 5.2 24 3.2zm422 486.9 12.5-7.3 13.7-6.1 14.8-6.1 17.2-4.2 17-4.2 18.3-3 18.3-3.1 19.3-2.2 37.6-4 37.6-4.1 18.4-2.1 17-2.1 16-3 16-3.2 6.8-12.4 5.8-9.3 3.3-4 4.6-4.2 4.5-4.2 6.8-4v-8.2l16.2-5.3 15.9-5.1 14.8-4.1 14.9-3.2 30.8-6.1 33.1-5.2v-12.3l-18.4-3.2-19.2-4.2-20.7-5.1-20.5-7.1-44.4-16.6-44.6-20.6-45.6-20.7-44.5-20.7-21.7-8.1-20.5-8.3-20.4-7.2-20.6-6.2-18.3-4.1-17.1-3.1h-17.1l-14.9 1-13.6 4-12.5 7.4-10.3 10.3-8 12.3-6.9 16.6-4.6 19.6-2.2 23.8v26.7l2.2 32 5.8 37.1 7.9 40.3 10.3 46.4h9.2zm-1055.1 634.5-22.7 1.1-20.7 3.2-21.6 4-22.8 5.2-3.5 9.3-3.3 11.3-8 74.4-6.9 91.9-3.5 49.5-2.1 51.5v53.6l1 52.7 1.1 26.9 2.5 25.7 2.2 25.7 3.3 24.9 3.6 24.8 4.5 24.7 4.5 22.7 6.9 22.8 6.8 20.6 8 20.7 7.9 18.5 10.3 17.4 10.4 16.5 11.3 14.5 12.6 13.5 13.7 11.4 20.4-16.6 19.4-17.6 19.5-19.5 18.2-19.6 17.1-20.7 17.2-21.6 17.1-22.8 17.2-23.6 63.8-96.1 64.9-98.9 32-48.7 34.1-46.4 18.4-21.7 18.1-21.7 18.3-20.6 19.4-18.5 19.4-18.5 20.5-17.6 21.7-15.5 21.6-14.3 23-12.5 23.9-11.3 25-10.4 26.3-7.2 38.8-19.6 34.1-22.7 29.8-24.8 26.2-26.8 22.8-27.8 18.1-29.9 14.9-30.9 11.4-32.1 8-33 5.8-33.1 2.3-32.9-1.2-34.1-2.3-33.1-5.6-33.1-7-31.8-10.1-30.9-11.6-30-12.4-27.9-14.9-26.8-15.9-24.9-17.2-22.5-18.1-19.8-19.5-16.4-19.4-14.4-20.4-11.3-20.7-7.4-20.5-4h-20.6l-20.5 5-19.4 8.3-19.4 13.4-19.2 18.6-2.3 16.6-1.3 15.4v33l2.4 16.5 3.4 16.7 4.6 15.3 6.8 15.6 6.8 14.3 9.1 13.5 11.4 13.4 12.6 11.2 6.8 5.3 6.9 4.2 8 5.1 8 3.1 9.1 4 9.1 3.2 10.3 2.1 10.2 2.1 6.8 18.6 3.5 18.5 1 18.5-1 19.6-3.5 18.6-5.6 19.6-6.8 19.8-9.1 19.6-11.6 19.5-12.4 19.6-13.8 19.6-15.9 20.6-15.9 19.6-18.4 19.7-18.2 19.6-19.4 19.5-39.9 38.1-41.1 38.3-42.1 37.2-39.9 34.9-38.9 34.2-35.3 31.9-15.9 15.5-14.9 15.5-13.6 14.3-12.6 13.6-21.7-7.2-22.8-8.3-22.9-7.3-21.5-7.2-9.3-28.9-9.1-28.8-9.1-27.8-10.3-29.1-10.1-27.8-11.5-27.8-12.5-26.9-14.9-27.9zm6263 197.2 2.2-3.2 2.3-4v-5.2l1.1-9.3-15.9-8.2-17.2-7.4-17-8.2-17.1-7.1-1.2-7.2-2.3-7.4h-9.1l-1.1-54.5-2.4-47.6-4.5-39.2-3.3-33.9-2.4-28V50777.8l1.1-9.4 2.3-8.2 3.4-7.2 3.4-6.1 5.7-5.3 6.9-6.1 8-4.2 9.2-5.1 11.3-4.2 12.6-4.1 14.9-4.1 78.7-18.6 115.1-25.8v-8.3h10.3v-8.2h9.1l2.3-9.2 2.3-7.4h9l6.9-29.9 8-26.7 9.1-23.9 10.4-21.5 11.3-18.7 12.6-16.5 13.7-14.5 13.6-12.2 14.9-10.3 14.9-9.3 14.6-7.3 14.9-7.2 16.1-5.3 14.7-4 16.1-4.2 14.7-3 28.5-6.3 27.4-6.1 11.4-4.2 11.4-4 10.3-5.2 8.1-6.2 7.9-7.3 5.7-9.3 4.5-9.3 3.4-12.4 1.2-13.3-1.2-15.6-2.3-18.5-5.6-20.6 1.1-22.8 2.2-21.5 2.3-19.8 2.3-18.5 3.5-15.4 3.5-15.6 4.5-13.3 4.6-11.3 4.5-11.4 5.6-9.3 5.8-8.2 6.8-8.4 8.1-6.1 7.8-5.1 8.1-5.2 9.1-4.2 9-4 10.4-3.2 11.3-2.1 11.5-3 25.1-4.2 27.3-3.1 30.8-4 33.3-6.4 36.3-6.1 39.9-9.2-9.1-28.9-13.6-26.9-20.5-25.8-25.2-24.8-29.5-22.6-35.5-22.7-37.6-20.7-42.3-20.6-45.6-19.6-47.9-17.5-50.1-17.7-51.4-17.4-53.5-15.4-56-15.6-54.7-15.4-55.8-14.5-111.8-26.8-107.3-25.9-101.4-24.6-91.3-24.9-39.9-12.4-37.7-12.5-33-12.1-28.5-12.5-22.9-12.4-18.2-12.4-12.6-13.3-5.8-13.5-23.8-7.1-23.9-6.4-23-5.1-23.9-6.2-12.4-12.3-23-12.4-33-11.4-42.2-10.3-51.2-10.3-58.3-9.2-66.1-9.3-71.9-8.3-77.5-7.3-83.3-6.1-86.8-6.2-91.1-5.2-94.8-5.1-95.7-4.2-98.2-4.2-99.1-3-100.4-2.1-99.2-1-98.2-2.1H72624.8l-88 2.1-83 1-77.8 3.2-71.9 1.9-66 4.2-59.3 3.2-50.3 5.1-43.2 5.2-33.2 5-23.8 6.4-17.2 22.5-18.3 21.7-21.6 18.5-22.8 16.7-25 14.3-26.3 12.4-28.6 11.4-29.7 9.3-30.8 8.2-33 6.3-33.1 5-35.3 3.2-35.3 3.2-36.6 1.9-37.6 1.1h-37.6l-77.7-2.2-78.7-2.9-78.6-4.3-78.7-3-77.7-3.1-75.2-1h-36.6l-35.2 2.1-34.2 2-34.3 3-3.3 22.8-2.4 22.8-2.3 22.5-2.3 22.7-1.1 22.8-1.1 22.7-1.1 22.8v23.6l5.6 3.2 7 3.1 9.1 1.9 9.1 1.1 11.3 1.1h11.4l11.4-1.1 12.6-1.1 25.2-2.9 23.9-5.3 20.5-5.1 14.9-5.2v-9.3l28.4-7.2 55.9-12.4 77.6-16.5 95.8-17.6 52.4-8.2 56-9.3 57-8.2 59.3-8.2 60.4-7.4 60.5-6.1 60.4-4.2 59.3-4 58.2-2.1h55.8l53.8 1 50.1 4.2 46.8 6.1 42.1 9.3 37.6 11.4 32.1 14.3 26.2 17.7 19.4 21.7 12.6 23.6 4.5 28.9-3.5 32-13.6 37.2-21.7 40.3-33.1 45.3-47.9 12.4-41.1 7.2-36.4 7.3-33.1 8.2-14.9 5.1-14.8 6.3-13.7 7.2-13.6 9.3-13.8 10.3-13.6 13.5-13.7 15.3-12.6 18.6-36.4 5.2-27.4 5.1-11.5 2.1-9 3.2-6.9 3.1-6.9 5.1-4.6 5.3-3.3 6.1-3.5 8.2-2.3 9.2-2.3 26-2.2 34.9 43.4 5.3 38.8 7.2 9.1 3.1 9.1 3 7.9 4.1 8 4.3 8.1 6.1 6.7 6.1 6.9 8.4 5.7 9.3 6.9 24.7 3.3 22.7v21.7l-1.1 18.5-4.5 17.5-8 16.6-9.2 14.4-11.3 12.4-12.6 11.4-14.9 10.3-17.1 9.3-18.2 8.1-19.4 7.2-20.5 5.3-21.7 6.2-21.7 4.1-46.7 7.2-46.8 6.3-47.8 4-46.9 4.2-43.2 5.1-40 6.3-18.3 3-17.1 4.1-14.9 5.1-13.6 6.3v8.3l-35.3 16.4-37.6 15.6-37.6 13.4-40 11.2-41 9.4-41.2 9.4-43.4 7.1-43.1 6.2-44.7 5.2-45.7 4-45.4 3.2-46.9 2.1-94.7 4.2-95.6 3-95.9 3.1-96.9 3.1-47.9 3-48 3.2-47.9 3.1-46.7 5.1-46.9 6.3-45.5 6.1-45.6 8.2-45.7 10.3-43.3 11.4-43.3 12.4-42.3 14.4-41 16.6-2.4 6.2-4.5 6.2-4.6 5.1-4.5 4.2-5.7 4-6.8 3.2-7 3.1-6.8 3-30.8 8.2-30.7 8.4-6.9 2-6.8 3-5.8 3.2-4.5 4-4.6 4.3-4.5 4.1-3.4 5.1-1.2 6.3-1 7.2v7.2l1 9.2 2.3 9.3 3.5 10.3 5.6 11.4 5.8 13.5 9.1 14.3h103.7l35.4-28.8 46.9-26.8 58-24.9 66.1-23.6 76.5-20.6 84.5-19.6 91.1-18.7 99.3-15.5 104.9-14.5 109.5-13.2 115.2-11.4 118.6-9.3 120.9-8.2 124.4-6.3 125.5-6.2 126.6-3 127.7-3.2 125.4-1.1 125.6 1.1 123.2 1 120.8 3.2 116.4 4.2 112.8 5 108.5 6.2 102.6 7.3 95.8 9.3 89 9.3 81 10.3 71.9 11.4 63.8 13.2 52.5 13.6 42.2 13.4 62.6 7.2 76.4 8.2 90.1 11.4 99.4 12.4 107.2 15.4 112.9 17.7 115 18.5 117.6 21.7 58.3 11.3 57 11.4 55.8 12.3 56 12.4 53.5 13.4 52.5 13.4 50.2 14.5 47.9 14.5 44.5 14.4 42.1 15.5 38.9 15.4 35.3 16.5 32 16.6 27.3 17.4 22.7 16.7 19.5 18.5 28.5 9.3 28.5 8.2 28.5 8.2 28.5 7.2 28.5 6.3 28.6 5.1 29.7 3.1 30.8 2.1zm-4821.4 119.7v-1.1l-2.2-1h-5.6l-11.4-1.1h-46.9l-91.1-1.1h-157.5l-26.2 3.2-27.5 4.2-26.2 6.1-27.3 6.3-26.3 8.3-26.2 9.2-25 11.4-25.2 11.4-25 12.2-23.9 13.5-23 14.5-22.7 15.4-21.7 15.6-19.4 16.4-19.5 17.5-17 17.7 9.2 9.2 12.4 7.2 14.9 5.1 17.1 4.2 19.4 2.1 21.7 1 22.8-1 25.1-2.1 27.4-3.1 28.5-4.1 29.7-5.3 30.8-6.1 63.8-14.5 66.1-16.4 67.4-19.6 67.2-18.6 65.1-19.6 62.8-19.7 58-16.5 51.4-15.3 45.5-11.4 36.6-8.3v-8.4l-36.6-7.1-35.3-5.1-36.3-3.1-37.9-2.1zm1104.2 1652-26.2 1.1-25.2.9-25 1-26.3 2.1-35.3 2.1-36.5 2.1-36.5 2.1-36.5 1.9-36.6 3.2-36.4 3.1-36.5 4.1-35.3 6.2 2.2 4.1 2.3 4.2 3.5 3.1 4.6 3 7.8 6.3 10.3 4h97l41 8.2 41.2 7.4 43.2 7.1 43.3 6.2 87.9 12.4 90 11.4 89.1 10.3 88.9 10.3 86.8 9.3 84.3 10.3 22.9 1.1h23.9l22.7 1 23 2.1 77.5 10.3 77.5 9.3 79.9 9.2 81 8.3 79.8 9.3 81 10.3 81 11.4 79.8 13.4 40 7.2 38.6 7.2 39.9 8.2 38.9 9.4 37.6 10.4 38.8 10.3 37.6 11.1 36.6 12.5 36.4 13.5 36.6 14.3 35.3 15.6 35.3 16.4 34.3 17.7 33 18.5 33.2 20.6 31.9 20.7 30.8 1h54.8l24-2.1 22.7-2 20.4-3.2 20.7-5 19.4-5.3 18.2-7.2 18.2-9.2 18.2-9.4 18.4-12.3 18.2-13.5 19.4-15.4 20.4-16.4 20.7-19.8 22.7-.9 21.7-1 22.8-1.1 21.7-1 10.2-15.6 9.2-12.3 5.7-9.2 3.4-8.4v-8.2l-1.1-4.1-2.3-4.1-6.7-9.4-10.4-13.4-38.8-1.1-30.8-2.1-13.7-1.9-12.6-2.1-11.3-2.1-9.1-3.1-9.2-3-8-4.2-6.8-3.2-6.8-4-11.4-8.2-8-10.3-15.9-21.7-17.2-22.7-11.4-12.4-13.8-12.5-7.9-6.1-9-6.2-10.4-6.2-11.3-6.2-70.7-8.2-69.7-8.2-68.3-7.4-68.6-8.1-67.2-7.2-66.1-7.4-66.3-7.1-67.2-6.1-66.1-6.4-67.4-6.1-67.3-5.1-67.3-5.2-68.4-4.2-69.5-3-71.9-3.2-71.9-1h-180.2l-36.6-3.1-35.3-4-36.5-3.2-35.4-3.2h-93.4l-51.4-2.9-51.3-1.1-51.4-1.1-52.5 1.1-51.2 2.1-51.3 3-51.4 3.2-51.3 4.1zm-3110.3 119.7 14.7-3.2 13.8-4 13.7-4.2 13.6-6.1 27.5-13.5 25-15.5 25-16.5 25.2-16.4 23.9-16.6 26.3-14.4 29.6-4.2 30.8-2.1 30.8-1.9 31.9-1.1 65.1-2 65-2.1 31.9-1.1 33.1-2.1 31.8-3 30.9-4.2 30.8-5.1 30.9-6.2 28.5-8.3 28.5-9.3v-8.1l52.3-18.6 52.5-17.6 54.8-16.5 56-16.4 56.9-15.6 58.2-15.4 58.2-15.6 60.4-13.5 60.5-13.3 61.5-13.4 61.6-12.4 62.8-11.4 62.6-11.2 64.1-11.4 62.6-10.3 63.9-9.3 63.8-8.4 62.8-9.2 63.8-7.2 62.9-7.2 62.6-7.3 61.5-6.2 61.8-5 61.6-5.3 60.4-4.2 59.3-4 58.2-3.2 57-2.1 55.9-1.9 54.7-2.1 53.6-1h52.6l12.4-3.2 12.6-3.1 10.3-4 10.1-4.2 9.3-5.1 7.9-5.3 8-6.1 7.9-6.3 29.8-26.8 35.3-31.9 125.4-19.7 123.2-17.5 61.7-7.2 60.4-8.3 59.3-6.2 59.3-6.1 59.3-5.2 58.2-5.1 58.1-4.2 57-3.2 58.3-1.9 55.8-1h57l56 1 55.8 1.9 54.7 3.2 56 4.2 54.7 5.1 53.6 6.3 54.8 8.2 53.7 9.3 54.7 11.3 53.5 12.4 53.5 13.4 52.5 15.5 53.8 17.5 53.5 18.6 52.5 20.6 52.5 21.7 53.6 23.8 77.6 11.4 74.2 12.2 71.7 13.5 68.5 14.5 67.2 15.4 63.9 16.4 64 17.7 62.6 18.5 61.6 19.6 62.8 20.6 61.6 21.7 62.7 23.7 63.9 23.7 66.1 26 67.4 27.8 69.5 27.8h9l8.1-1 8-2.2 7.9-2.9 8-4.2 6.8-4.2 4.6-6.1 3.5-6.1h9.1l10.3-12.5 9.1-11.4 9.1-8.2 10.3-7.2 10.2-7.3 11.5-6.1 13.7-6.2 15.9-7.3 1.2-7.2 2.3-7.2-41.1-12.4-36.6-14.5-33.1-14.3-30.7-15.6-59.4-30.9-57-30-29.5-15.4-32.1-13.4-34.2-13.5-37.6-11.4-19.4-6.1-21.7-5.1-21.6-4.2-24-5-23.9-4.3-26.3-3.1-27.4-3-28.5-3.1-13.7-18.6-14.8-17.6-15.9-17.5-17.2-16.4-18.2-15.6-18.2-15.4-20.6-15.6-19.5-14.4-83.2-54.7-81-54.7-18.2-13.3-17.1-13.5-17-14.4-16.1-14.5-13.7-15.5-13.6-15.5-11.4-15.5-9.2-16.4-7.9-17.5-5.8-17.6-3.3-18.7-2.3-19.6 1-20.6 3.6-20.7 6.8-22.5 9.1-23.8h9.1v-8.2h9.1v-8.2l14.8-7.4 15.9-6.1 17.2-5.2 18.2-4 18.4-3.2 19.4-2.1 19.3-1.1 20.6-.8h21.7l20.4.8 22.8 1.1 21.7 2.1 44.6 6.1 45.5 8.4 45.6 9.3 45.7 11.3 43.3 11.4 42.2 12.3 41.2 13.5 37.6 12.3 34.1 12.4 30.9 11.2 1 10.4 2.4 9.4 1.2 10.2 2.2 10.3 38.7 15.6 38.8 14.5 38.9 14.3 38.7 13.5 38.8 12.4 38.8 12.3 38.6 11.3 38.9 11.4 78.7 20.7 79.8 19.6 81 19.5 82.2 18.5 3.3-10.2 2.3-7.2V52245l-18.2-3-18.2-4.2-17.2-5.1-18.1-6.2-36.6-13.5-36.5-16.5-73-37-76.4-40.3-38.7-19.6-38.8-18.7-19.5-8.2-20.4-8.2-20.7-7.2-20.4-7.3-20.5-6.2-20.7-6.1-20.4-4.2-21.7-4.2-20.5-3-21.7-2-22.9-1.1-21.7 1.1-1-7.2-2.3-6.3-22.9-10.4-19.3-9.3-16-10.2-12.5-10.4-11.5-11.3-7.9-11.2-6.8-12.4-4.6-12.5-2.2-14.5-2.5-15.4-1.1-15.6v-17.5l1.1-39.1 1.3-44.5 3.4-15.4 4.6-13.5 6.8-12.4 5.6-10.3 8-10.3 8.1-8.2 9.1-7.2 9.1-6.2 10.3-6.2 11.4-4 11.3-4.3 11.5-2.1 12.6-2 12.5-2 13.7-1h41.1l28.5 2.1 28.5 1.9 29.6 3.1 29.7 2.2 28.5 1h27.3l26.2-1 1.3-10.4v-12.4l-1.3-13.5-1-15.4-4.5-36.2-4.7-39.1-5.7-42.4-3.5-43.2-1-21.6v-41.4l2.3-19.6 3.3-18.5 3.5-16.6 6.8-16.4 6.8-13.5 9.1-12.5 11.6-10.2 13.6-8.3 15.9-5.1 18.2-2.1h20.7l22.7 3.2 26.3 7.2 28.5 10.3 33 14.5 35.4 17.5 38.8 22.7 6.8 7.2 5.8 9.3 6.8 8.2 5.6 8.2h9.3v8.4l10.1 5.1 11.6 4.2 12.4 4 13.7 2.1 27.4 4.2 28.6 4 13.5 2.2 12.6 3 12.7 4.1 11.3 5.3 10.4 6.1 9 7.2 3.3 4.1 3.6 5.3 3.3 5.1 2.2 5.2h9.3l5.6 12.2 10.4 12.5 12.6 12.4 14.6 12.4 18.4 11.4 20.5 11.2 21.7 10.3 23.9 10.4 25 9.2 26.3 9.4 27.5 8.3 27.2 7.1 28.6 6.2 27.4 5.2 28.6 5 27.2 3.2 26.3 2.1 25.1 1.1 23.9-1.1 22.8-2.1 20.5-3.2 19.5-5 15.9-6.1 12.5-8.4 11.5-10.3 6.8-12.3 3.4-13.4v-16.5l-3.4-17.7-7.9-20.6-13.7-22.8-17.1-24.6-12.6-9.2-13.7-8.3-13.6-7.3-13.8-7.2-14.7-6.1-13.8-6.4-14.7-5-16.1-5.2-30.8-9.4-31.9-8.1-31.9-7.2-33.1-7.4-32-6.1-31.9-7.1-30.7-7.4-30.8-8.2-29.8-10.4-27.3-11.3-13.6-6.1-12.6-6.2-12.6-8.3-11.4-7.2v-8.3l-22.9-8.2-21.5-6.3-21.7-5-21.7-4.3-20.6-2.9-21.5-2.2-20.7-1-19.4-1h-78.6l-73.1 1h-18.1l-18.2-1-17.2-1.1-17.1-2.1-17.2-2.9-17.1-3.2-17-5.3-17.1-5.1-17.2-7.1-15.9-8.4-17.1-9.2-16-11.5-16.1-12.2-16.9-14.5-16.1-16.4-15.9-18.6-22.8-11.4-27.5-10.3-30.8-11.4-35.3-10.2-37.6-10.4-41.1-10.3-44.4-10.3-46.9-9.3-49-9.2-51.3-9.4-52.5-9.2-53.6-8.4-111.8-15.4-115.1-14.5-114.1-13.3-113-10.4-109.5-8.4-102.5-7.1-47.9-2.1-45.7-2-43.4-1h-76.4l-34.1 1-29.7 1-25.1 2h-63.8l-62.9-2-63.8-3.1-63.9-4.1-63.8-4-62.8-3.2-63.8-3.2-63.9-3.1-63.8-.9-62.9.9-31.9 1-31.9 1.1-30.7 2.1-32.1 3.2-31.8 2.9-30.8 4.3-32 5.1-30.8 6.2-30.8 6.1-32 7.3-30.8 9.3-30.8 9.3-5.6 12.4-6.9 13.3-60.4 1.1-59.4 3.1-59.3 5.1-58.2 6.3-59.3 7.2-58.1 8.2-59.3 9.3-59.3 10.2-1.2 17.7v14.4l2.3 18.5 3.5 28.9h20.4l22.9-.9 21.7-2.1 23.8-3.1 49.2-6.2 50.2-8.3 52.5-7.2 52.5-8.3 53.5-6.1 52.5-5.2 25-1.1 25.2-1h25l23.9 2.1 24 2.1 23 3.1 21.4 5.1 21.7 6.1 20.7 7.4 19.4 9.2 17 11.4 17.1 12.4 15.9 14.4 13.8 16.6 12.5 18.6 11.5 20.6-1.2 47.4-6.9 41.3-12.5 37.1-19.4 32-24 28.9-28.5 23.8-34.1 21.7-37.6 17.4-41.1 14.5-45.7 11.4-48 10.3-50.2 7.2-53.5 5.1-54.7 4.2-57.1 2-57 2.2-117.5.9-117.4 1-58.3 1-57 2.1-55.8 2.1-53.7 4.1-51.3 5.2-49 8.2-45.6 9.3-43.4 11.3-38.8 14.6-34.2 17.5-30.7 20.6-26.2 24.7-27.5 7.3-30.8 8.3-36.4 8.2-40.1 8.2-90.1 16.6-101.4 18.6-110.6 20.6-115.2 21.7-119.9 23.6-118.6 24.9-59.3 13.4-58.1 14.4-56 14.5-55.8 15.4-52.4 16.6-51.4 16.5-47.8 16.4-44.6 18.7-42.2 18.5-37.6 19.6-34.3 20.7-29.5 20.6-24 21.7-19.4 22.6-14.9 23.8-7.9 24.8 17 13.3 24 9.3 29.7 7.4 35.4 5 39.8 3.2h45.7l49-2.1 53.7-3.2 57-5.1 60.4-7.2 62.7-8.3 65.1-9.3 67.2-11.4 68.4-11.2 69.6-12.4 70.9-13.5 141.3-27.8 139.1-28.8 134.7-28.1 126.7-25.7 114-23.7 99.2-19.7 43.4-7.1 38.6-6.3 32-5.1 27.4-2.1 61.5-10.3 61.6-12.4 61.7-12.2 61.6-12.5 62.6-12.4 62.9-13.4 62.6-12.3 61.7-11.4 62.7-11.4 62.7-9.3 62.6-8.1 62.9-6.4 30.7-2.1 32.1-1.9 30.8-1h61.5l30.8 1 30.8 1.1 30.8 2.9 11.4 6.4 11.3 8.1 9.1 8.3 9.3 9.3 9.1 10.3 6.8 11.4 6.9 11.3 5.7 12.4 5.6 13.3 4.6 13.5 3.4 13.5 3.4 14.3 1.2 14.5 2.3 14.4v29l-1.2 15.4-1.1 14.5-2.2 14.4-2.4 14.5-3.4 14.4-4.6 13.5-4.5 13.4-5.8 13.3-6.8 12.4-6.8 12.4-6.9 11.4-8 10.3-9.1 9.3-9.1 9.3-10.3 8.2-10.2 6.3-114 13.3-115.3 11.4-117.4 10.3-117.5 8.2-118.6 9.3-119.9 9.2-119.6 9.5-119.9 11.2-59.2 6.3-59.3 6.1-59.4 8.2-58.1 7.4-58.2 9.2-59.3 9.3-57 10.4-58.3 11.3-55.8 12.4-57 13.3-56 14.5-54.7 15.4-54.6 16.7-54.8 18.5-52.5 18.5-52.5 21.7-51.4 5.1-81 9.3-106 12.4-125.4 16.6-69.6 9.3-72 10.3-74.1 11.4-76.3 12.2-77.6 13.5-77.5 14.5-78.8 15.4-77.4 16.5-75.5 17.6-73.9 17.5-72 19.6-67.3 20.6-65.1 21.7-59.3 22.8-54.7 23.6-49 24.8-42.2 25.7-35.3 27-27.5 28.8-19.3 28.9-10.2 31-1.3 32 9.1 33.1 20.7 33.9 19.3 1 19.3 1.1 20.7 1 19.4 1.1zm1812.3 388-21.7 6.1-22.7 5.3-21.7 6.1-23 6.1-33 2.1-33 4.2-30.8 5-30.9 6.4-29.5 7.2-30.8 8.1-30.8 9.3-33 9.3v9.3l63.8 12.4 64.9 11.4 66.2 9.3 66.2 8.1 67.2 6.4 68.4 4 68.6 3.1 69.4 2.1 69.7 1.1h141.5l70.6-2.1 142.6-4.2 143.6-4 144.9-5.3 143.8-3 71.9-1H71023.3l71.9 1.9 70.7 3.2 70.8 4.2 70.7 5.1 69.6 7.3 69.5 8.2 68.4 11.4 68.5 12.2 67.2 14.5 36.6 18.5 46.7 22.8 54.7 23.8 61.6 25.7 32 12.4 33.1 12.5 34.2 12.3 34.2 11.3 35.3 11.3 34.3 10.4 35.4 9.3 34.2 7.3 34.2 7.2 34.2 6.1 31.9 4.2 32 2.1 30.8.9 28.5-.9 27.5-4.2 25-5.3 23.9-8.2 20.5-10.3 18.4-13.3 15.9-15.6 12.5-18.5 10.2-22.7 6.8-24.7 2.3-28.9-13.6-10.3-14.9-9.5-16.9-9.2-18.4-9.3-19.5-8.2-20.4-8.2-21.7-8.2-22.7-7.4-48-13.3-51.2-12.4-52.5-11.4-53.8-10.3-54.7-8.2-53.5-8.2-52.5-6.3-51.4-5.1-47.7-5.3-44.7-2.9-40.9-3.2-35.3-2.1-59.6-12.4-59.3-11.4-60.3-10.3-60.5-10.3-60.4-10.3-61.6-8.3-61.5-8.2-61.8-7.1-62.6-7.2-62.8-5.3-62.6-6.1-62.8-4.2-62.8-4.2-62.7-4-63.8-2.2-62.8-3-63.8-1.1-62.8-.9-63.9-1.1h-62.7l-62.7 1.1-63.9.9-62.7 1.1-62.7 2-125.6 6.3-123.2 8.3-123.1 9.2-120.9 11.4zm-1024.3 617-37.6 2.1-36.5 2.1-37.6 3-37.6 3.1H68565.4l-10.2 1-10.4 1.1v8.2l84.6 1.1 85.5 1h43.2l43.4-1 43.3-2.2 43.4-2.1 42.2-4 43.4-5.2 42.1-6.1 41.2-7.2 40.9-9.4 41.1-11.2 19.4-6.3 19.4-7.2 19.5-7.2 19.2-7.3-1.1-19.6-3.5-16.5-4.5-14.5-7.9-11.4-9.1-9.2-10.3-7.2-12.6-5.1-13.6-3.1-15.9-1.1h-16.2l-16.9 1.1-18.3 3.1-18.3 4-20.4 6.3-19.5 6.1-20.6 7.2-42.2 15.6-41.1 17.5-40.9 18.6-38.9 17.4-35.2 16.6-30.8 13.4-13.9 5.2-12.4 4.2-10.3 3-9.2 2.1zm2185.4 368.3 18.3-2 18.2-2.1 14.9-3 13.7-3.1 11.3-4.3 11.5-4 9.1-5.2 7.9-5 6.9-7.5 6.9-7.1 5.6-9.3 5.8-9.3 10.2-24.8 10.3-28.8-11.4-8.3-11.4-7.2-11.6-7.3-12.3-6.1-13.7-6.1-12.6-5.3-14.9-4-13.6-4.2-29.8-7.2-30.8-5.2-31.8-4.1-32-3.1-31.8-2.1-33.2-1-31.9-1.1h-93.6l-55.8-2.1-3.5 14.5-2.3 12.5-1 12.4 1 12.2 2.3 11.4 3.5 10.3 4.6 9.3 6.8 9.2 6.8 9.5 8.1 8.2 10.1 8.3 9.3 7.1 11.4 6.3 11.3 6.1 12.6 6.2 13.7 5.2 27.2 9.3 28.6 8.2 29.7 7.1 30.8 5.3 29.7 4.2 28.5 3 27.4 3.1 25 1zm-552 251.8 30.8-14.3 25-13.5 18.4-13.5 12.4-13.4 6.8-12.3 2.3-12.4-3.3-11.4-6.8-11.3-11.4-11.5-14.9-9.2-18.4-10.3-21.4-9.3-24-8.2-27.5-8.2-28.5-7.4-30.8-7.1-31.8-6.2-32.1-6.2-34.2-6.2-34.2-4.2-68.4-8.2-65-6.1-32-2.1-28.5-1.1-28.6-1h-47.7l-19.4 1-16.1 2.2-12.4 2v8.2l21.7 4 21.5 5.3 20.6 6.2 18.2 5.2 18.2 6.1 17.1 7.3 16.2 7.2 14.6 7.2 28.5 15.6 27.5 15.4 25 16.4 26.3 15.6 25.1 16.4 27.4 14.6 14.8 7.1 14.9 7.1 15.9 6.4 15.9 6.1 17.1 6.3 18.3 5.1 19.3 5.3 20.7 4 22.7 4.1 22.8 3 25.2 2.1 26.2 2.1zM51903.1 43559.9l-30.7-1.9-31.9-1.1-30.8-1h-32l-30.8-1.1-29.5-1-16.1-1.1-14.8-3.1-14.8-3-13.6-4.2h-117.6l-59.3-1h-175.7l-58.2-1.1h-90.1l-28.5-1h-27.3l-27.5-1.1-10.1-2.9-9.3-4.3-10.1-4-9.1-3.1 2.3-8.2 1-8.4 76.5-26.8 82-25.7 86.7-25.9 90.1-25.7 94.7-24.9 95.9-22.7 98.1-22.6 100.2-20.6 99.4-19.6 99.2-17.7 98.1-15.4 95.7-12.4 46.9-6.1 45.5-5.2 45.6-4.1 44.7-3.1 43.1-3.2 42.4-2.1 40.9-1 38.9-.9 9.1 25.7 6.8 22.8 5.8 20.6 4.5 18.5 4.6 18.6 3.4 15.6 4.6 15.3 5.6 13.5 5.7 13.3 7.9 12.4 10.4 11.4 13.6 11.3 14.9 11.5 19.4 10.2 22.7 11.5 28.6 11.3h34.3l30.7-2.1 27.5-3.1 23.7-4.1 19.5-5.2 16.1-6.1 13.6-6.3 11.4-8.2 8.1-8.3 5.5-10.3 3.5-9.3 1.1-11.3v-11.4l-1.1-12.4-2.2-12.4-3.5-12.3-10.2-28-10.3-27.8-5.7-14.3-4.6-14.5-4.6-15.5-3.3-14.5-2.3-14.5-1.2-15.4v-14.5l1.2-14.4 4.6-14.5 5.6-13.5 8-13.3 11.4-13.4h30.8l33 2.1 33.1 3.2 35.3 4 36.6 5.2 36.5 6.1 37.6 7.2 37.7 8.4 37.6 9.3 38.9 11.3 37.6 11.2 37.6 13.5 37.6 14.6 36.5 14.2 35.3 16.7 34.4 18.5 34 18.6 32.1 19.6 30.8 21.7 28.5 21.7 27.3 23.6 23.9 24.8 23 25.9 20.4 26.7 17.2 27.9 14.9 29.9 11.3 29.9 7.9 32 5.8 33 1.1 33.2-2.2 35.9-5.8 36.1-14.8 6.3-13.7 4-13.6 4.2-12.6 3.2-12.6 2.1-13.7.9-14.8 1-17.2 1.1h-87.8l-26.3-1.1-22.7-5.1-19.4-7.1-17.1-9.5-14.7-12.2-12.6-13.5-11.4-16.5-8.1-17.6-6.8-18.6-6.8-19.6-4.6-20.6-3.5-21.7-4.5-44.2-3.3-44.5-2.3-21.7-2.4-21.7-2.3-19.5-3.3-19.6-4.6-17.6-5.7-16.5-6.9-14.4-8-12.4-10.2-10.3-11.3-8.3-14.9-4.1-17.1-3-19.5 1-21.7 4-25 8.2-28.5 11.5-8 7.3-7.9 7.2-5.8 7.2-5.8 8.1-4.5 7.4-4.5 8.2-3.3 8.2-2.4 8.3-3.4 17.4-1.3 17.7v18.5l1.3 18.6 4.5 38.2 4.6 39.1 1.1 19.8v19.6l-2.2 19.6-3.5 19.5-16 6.2-17.1 6.3-18.1 5.1-20.7 3.1-20.5 3-22.7 2.1-24 2.1H52918.3l-26.3-1.1-27.3-1-27.4-2.1-55.8-4-57.1-7.2-115.2-15.5-109.5-16.5-51.3-7.4-47.9-6.1-42.2-4.2-37.6-3H52242l-43.4-2.1-42.2-2.1-42.1-3.1-42.3-1.9-42.2-2.1-42.1-2.1-42.2-1.1-42.4-2.1zm4603.4 140.3 4.7-1.9h14.7l19.5-1h46.8l19.3 1h14.9l4.5 1.9 83.2 6.3 70.7 11.4 60.5 15.3 49 21.7 40.1 26 30.7 29.9 21.6 32.9 14.9 37.2 8 41.3 1.1 43.2-4.6 47.6-9.1 48.5-13.6 51.5-17.2 53.8-20.4 55.6-21.7 56.8-49.2 115.5-49 119.6-22.7 60-21.7 58.9-18.2 58.7-14.9 58.8-11.3 56.9-7.1 55.6-1 54.7 4.6 52.7 11.3 49.5 18.4 48.4 27.3 44.5 35.3 42.2 13.7 20.6 12.6 17.6 11.3 12.3 10.4 9.4 10.2 6.1 10.2 2.1h9.3l7.9-4.1 8-5.1 6.8-8.4 5.8-10.3 6.9-12.3 4.5-14.5 5.6-15.4 4.5-16.6 3.5-17.5 6.9-38.1 4.5-39.2 4.5-39.4 2.3-36 2.3-33.1 1.2-27.8v-31l-1.2-6.1-1-15.6-1.3-20.6v-49.5l1.3-21.7 1-15.3 1.2-5.3v-25.8l-1.2-20.6-1-21.7-1.3-20.6-1.1-20.7 1.1-21.7 1.3-22.7 1-21.7 1.2-21.5 18.2-73.3 19.4-73.3 18.2-71.2 20.6-68 11.5-33.1 11.3-32 12.6-31 12.6-29.9 14.6-27.8 14.9-27 16-24.6 17.1-23.8 18.2-20.7 19.4-19.5 21.7-16.5 21.7-14.5 25.2-12.4 25-9.3 28.5-6.1 29.6-4.2 30.8-1.1 34.3 3.2 35.3 5.2 37.6 9.3 41.1 12.4 42.2 16.5 45.7 19.6 47.8 24.8 30.9 6.1 27.4 7.2 12.5 3.2 11.3 5 9.3 4.2 9.1 6.1 7.9 6.4 6.9 7.1 5.7 9.3 4.5 9.3 3.5 11.3 3.3 12.5 1.2 13.4v15.4l2.4 6.1 1 15.6v21.7l1.2 24.6-1.2 25.9v21.7l-1 15.4-2.4 5.3-1.2 9.3-2.2 9.2-3.4 9.3-4.5 8.2-4.6 9.2-5.8 9.4-6.8 8.3-6.8 9.3-16.1 17.5-18.2 17.5-19.4 17.5-19.4 18.7-43.2 36-41.1 38.2-19.4 19.6-17.2 20.6-9.1 10.3-6.8 10.4-8.1 10.3-5.5 11.4v173.3l-1.3 33-2.3 33.2-4.5 31.8-4.5 32-6.9 29.9-3.5 13.5-4.5 13.4-5.6 12.5-5.8 11.2-5.6 9.2-7 9.5-7.8 7.1-8.1 7.2-9.1 4.3-10.3 2.9-10.1 2.1h-10.4l-12.6-2.1-12.5-4-13.7-6.4-14.9-8.1-15.9-11.4-15.9-12.3-17.2-15.6-18.2-18.5-9.1 14.5-6.9 13.3-5.7 11.4-4.5 11.4-3.5 12.4-2.2 12.4-2.4 13.3-2.2 16.6V45155.2l1.2 17.6 1 17.5 1.3 18.5 1.1 17.5 5.7 33.1 6.8 29.9 9.1 27 10.3 25.7 11.4 22.7 13.6 20.7 13.7 18.5 16.1 15.4 14.7 13.5 17.1 11.3 17.2 9.3 17.1 6.3 17.2 4 17.1 2.1h18.2l17.2-2.1 15.9-4 15.9-7.4 15.9-8.2 13.8-11.3 13.7-13.5 11.3-15.4 11.4-17.5 9.3-19.6 7.9-21.7 5.7-23.8 3.3-25.7 1.2-28v-29.9l-3.4-32-5.7-33.9-8-36.3-2.2-41.3-2.3-38.1v-36l1-17.7 1.3-17.5 2.2-17.4 3.5-16.7 4.5-17.5 5.7-16.4 6.8-17.5 8-17.7 9.1-18.5 11.4-18.6 17.2-9.2 14.8-11.4 14.9-11.4 11.3-11.4 11.4-12.4 9.1-13.3 8-13.4 8.1-13.5 5.6-14.4 5.8-14.5 4.5-15.4 3.4-15.5 6.9-32 6.9-31.9 5.5-34.1 6.9-33.1 4.6-17.5 5.7-17.4 5.8-16.6 6.8-17.6 7.9-16.4 9.3-17.7 9-16.4 12.5-16.5 12.5-16.6 14.9-16.4 17.2-16.6 18.2-15.5 22.7-2.1 22.9-1h24l22.7-1 10.4-17.6 11.3-14.2 12.6-13.6 14.9-11.3 15.9-10.4 17.2-7.1 18.2-6.3 18.1-5.1 19.5-3.1 19.4-1.1h19.4l18.2 2.1 18.2 3.2 18.4 4 15.9 6.3 15.9 7.1 13.8 9.3 12.4 10.4 10.4 11.3 9.1 12.4 5.7 13.3 3.4 14.5 1.1 15.5-3.4 17.7-4.6 17.4-9.1 18.5-13.6 20.7-17.1 20.6-20.6 21.7-25.1 21.7-30.8 23.8-34.1 23.6-3.5 33.1-4.6 32-4.6 31-5.7 29.9-10.2 56.7-10.2 54.7-3.6 26.8-2.2 27.8-1.1 27v28.8l2.3 28.8 4.6 30 3.3 15.5 4.7 15.5 4.6 15.5 4.5 16.4 5.6 42.4 1.2 38.1-3.5 36.3-4.5 32.8-9.1 29.9-11.4 28.1-13.6 24.6-14.9 23.8-18.4 21.7-18.2 19.6-20.4 18.5-20.7 17.5-44.4 32-43.4 29.9-21.7 15.6-21.5 14.3-19.4 15.6-18.4 15.4-17 16.7-14.9 17.4-12.6 18.5-10.2 19.6-6.9 21.7-4.6 22.8-1 25.7 2.3 27 5.6 29.8 11.5 32.9 14.8 35.2 19.3 39.2 14.9-12.4 14.9-9.3 14.7-7.2 14.8-6.2 30.8-8.3 30.9-6.1 14.8-4.2 16-6.1 16-6.1 15.9-9.5 9.1-5.1 8.1-6.1 7.8-7.4 9.3-8.2 7.9-8.2 9.1-9.3 9.3-10.3 9.1-11.4 4.5-1h6.8l6.9 11.4 6.8 13.4 4.5 14.4 4.6 16.6 4.5 16.4 3.5 17.5 2.3 18.6 2.3 18.7 6.8 80.5 5.8 81.5 4.5 39.1 5.6 37.2 4.5 16.4 4.8 16.6 5.6 15.4 5.8 14.5 7.8 12.4 8.1 11.4 10.3 10.3 10.1 8.3 12.6 7.2 13.7 5.2 14.9 3 15.9 1 13.8-22.7 11.3-21.7 9.2-21.6 6.8-21.7 4.5-21.6 3.5-21.7 2.3-21.7v-22.8l-1.2-21.5-1.1-22.7-2.3-22.8-2.2-22.7-5.8-48.5-4.5-51.5V45593.7l2.2-25.7 2.3-26.8 1.3-29 1-31 1.2-64.9v-70.1l1.1-73.3 1.2-75.4 2.2-76.3 4.6-75.4 3.3-37.1 4.6-36.2 4.7-36 5.6-34.1 6.8-32.9 8-32.1 10.4-30.9 10.1-28.9 11.4-26.9 13.8-24.7 14.7-23.7 16.1-19.6 18.2-18.6 20.5-15.6 21.7-12.4 23.9-9.3 3.5-1 9.1-.9 13.6-1h30.8l12.6 1 10.4.9 3.3 1 14.9 1.1 14.8 2.1 12.4 3.2 12.6 2 12.6 3 10.4 4.2 10.1 3.1 9.1 5.1 9.3 4.3 7.8 5 6.9 5.2 6.8 6.2 5.8 6.1 5.7 6.3 5.6 6.1 4.6 7.2 6.8 15.5 7 16.5 4.6 18.7 3.3 19.6 5.8 42.2 3.3 47.6 1.2 1 2.3 4.1v12.3l1 23.9v281.5h-6.8l-10.1 31.1-11.6 29.9-12.4 30.9-11.4 29.9-10.3 31-10.3 29.9-3.3 15.6-3.6 16.4-3.5 15.4-2.2 15.6v79.4l-9.1 33.1-11.4 31-12.6 28.8-13.6 26.7-14.9 24.9-14.7 24.6-16.1 22.8-15.9 20.6-33.1 40.2-33 37.3-14.9 16.5-14.9 17.5-13.6 16.6-12.6 17.5-11.4 16.4-10.1 16.7-8.1 17.4-5.7 17.6-4.6 17.4-2.2 19.6 1.1 19.8 2.3 20.7 5.6 21.4 9.1 22.8 12.6 24.9 14.9 25.7 19.4 27.8 22.7 29 26.3 31 30.8 32.8-14.9 50.6-12.4 47.6-9.1 43.2-7 39.4-3.3 37-1.2 33.1 1.2 28.9 3.3 26.8 5.7 22.7 6.9 19.6 8 16.4 10.1 12.4 10.4 10.4 12.6 7.1 12.6 3.2 12.4 1 13.8-3.1 13.7-5.1 12.6-8.2 13.6-11.4 12.5-14.5 12.5-17.5 10.4-19.6 10.3-22.7 9.1-25.8 6.8-27.9 5.6-31 4.7-32.9 1.1-36.2v-39.2l-3.6-41.3-5.5-43.3-1.3-5.1-1-11.4v-15.4l-1.2-18.7 1.2-18.5v-16.5l1-11.3 1.3-4.3 5.5-38.1 9.3-56.7 12.4-68.2 13.8-71.2 7.9-35 8.1-33 8.1-31 7.8-26.8 9.1-23.8 8.1-17.5 4.5-7.1 4.6-5.3 3.5-4.2 4.5-.8v-8.5l11.4-7.1 10.3-7.2 9.1-7.4 9-7.1 8.2-8.2 6.7-7.2 6.8-8.3 6.9-8.3 10.3-17.5 9.1-17.6 5.6-19.5 5.8-18.6 3.5-19.8 2.2-20.4 1.1-20.6v-21.7l-1.1-43.4-3.4-44.4v-79.5l-1.1-40.2 5.6-37.1 10.4-33.1 15.9-29.8 19.3-26.8 24.1-22.7 27.2-18.6 30.8-15.6 33.1-12.4 35.5-7.2 36.3-4.1h37.7l38.8 4.1 38.9 8.2 37.6 13.5 37.6 16.5 35.3 21.7 34.3 25.8 31.8 30 28.5 35 26.3 39.1 21.7 44.5 17.1 48.4 13.7 53.7 6.8 58.8 2.3 64.1-4.6 69.1-11.3 74.3-18.2 79.4-26.3 84.7-34.3 89.7-43.4 95.9-6.8 8.4-7.8 8.2-6.9 9.2-7 10.4-13.6 21.7-12.4 23.6-11.6 25.9-10.1 25.7-10.4 26.9-9 27.8-17.2 55.7-13.6 53.6-12.6 49.6-11.4 42.3-4.5 2.1-5.8 2.1-3.3 7.2-2.3 8.2-2.4 9.3-2.4 9.3-2.2 20.6-1.1 21.7v23.7l1.1 23.9 1.2 25.7 2.3 24.8 5.8 51.6 5.5 49.5 2.3 23.7 1.3 21.7 1 20.6v18.5l-5.6 50.6-4.5 45.4-2.3 40.3v37.1l2.3 33 2.2 29.9 5.6 26 6.8 23.6 8.1 20.6 10.3 17.5 10.1 15.6 12.7 13.5 14.8 12.2 14.9 10.3 15.9 9.3 17.2 8.4 37.6 15.4 41.1 14.5 21.5 7.1 22.9 9.3 22.8 9.3 23.9 10.3 23.9 12.5 24.1 13.4 25 15.4 25.1 18.6 25.1 20.6 25.1 22.7 25 26.8 26.3 29.1-6.8 17.4-9.1 15.5-10.4 14.5-11.3 14.3-12.6 12.4-14.7 12.4-14.9 11.4-15.9 10.3-3.4 38.1-3.6 36.3-4.5 34.9-5.6 34.2-4.6 16.4-4.5 16.6-5.8 16.4-8 15.5-7.9 15.5-10.4 14.4-11.3 14.5-13.7 14.5-69.5-18.7-66.2-23.6-65.1-28.9-61.5-33-60.5-37.1-57.1-41.3-55.8-45.5-54.8-47.4-52.5-51.6-51.2-53.7-49.1-55.6-49.1-58-47.8-59.8-46.7-60.8-47-61.9-45.4-63-91.3-125.8-90.1-124.9-46.7-62-45.7-59.8-46.9-58.7-47.7-56.9-47.9-54.6-50.3-51.6-50.2-49.5-52.5-46.5-53.5-42.4-56-39.2-57-35-59.3-30.9-10.3-15.5-9.1-15.5-9.1-17.7-6.8-17.4-5.8-18.5-5.6-19.6-5.7-19.6-4.6-19.7-8.1-40.2-6.8-39.1-7.9-39.4-9.2-37.1-5.7-3.1-4.5-2v-8.4l-62.8-10.3-64.8-13.3-32.1-7.2-32-8.4-33.1-8.2-31.8-9.2-32-9.3-33.1-10.4-31.9-11.3-30.7-12.4-32-12.3-30.8-12.4-30.8-14.6-29.8-14.2-28.4-15.6-28.5-15.4-28.6-17.7-26.3-17.5-26.1-18.5-26.3-18.6-23.8-20.7-22.9-20.6-21.7-21.7-21.7-22.7-19.2-23.6-18.4-24.8-17.1-25.9-14.8-25.7-13.8-27.9-12.4-27.8-22.9-10.3-21.7-10.3-21.5-10.3-21.7-9.5-22.9-.9h-21.7l-21.7-1h-21.5l-28.5-11.4-28.5-13.5-27.5-17.5-27.3-19.5-26.2-22.8-25.2-24.8-24-27.8-23.9-28.9-22.8-31-21.7-32-20.5-33.9-19.3-35.2-17.2-36-17.1-37.3-14.9-38.1-12.5-37.1-11.3-38.3-10.4-38.1-8-38.2-5.6-38.1-4.6-37.3-1.1-36v-35.2l2.2-33.9 5.8-33.1 6.8-30.9 10.3-28.9 12.5-28 14.8-24.7 18.2-23.8 21.7-19.6 23.9-17.4 1.3-44.5 2.3-52.6 1-27.8v-58.8l-1-29.9-2.3-28.9-3.5-28-2.3-13.2-3.5-13.6-3.3-13.4-3.5-12.3-4.5-11.3-5.7-11.4-5.7-11.4-5.8-9.3-7.9-9.2-8-9.3-7.9-7.3-9.2-6.1-10.2 26.7-8 26.9-6.8 25.7-4.6 26-4.5 24.6-2.4 24.9-3.4 23.6-1.1 24.8-3.5 48.5-4.5 48.6-2.3 25.7-4.5 24.9-4.6 26.7-5.8 26.8-6.8 2.1-5.8 2.1-6.8 2.1-6.8 1-13.7.9-14.8-.9-28.5-4.2-28.6-4.1-23.9-74.2-22.8-71.2-20.4-68.3-19.4-65.9-8.1-32-6.8-31-5.8-29.9-4.6-28.8-3.3-27.8-1.2-27v-25.7l1.2-24.8 3.3-22.8 5.8-22.6 8-20.6 9.2-19.6 12.4-18.8 14.9-17.4 15.9-15.4 20.6-14.6 21.7-12.4 25-11.3 28.6-9.3 31.9-7.2 34.2-6.1 38.8-5.2 41.1-2.1 45.5-1.1zm-4603.4-140.3v-1.1l-2.2-.8-4.6-1.1h-9.1l-36.5-1h-41m4102.7 278.5V43737.5l-1.2 4-1.1 11.4-1.1 15.6v34.9l1.1 15.6 1.1 11.4 1.2 4zm4.6-96.9-1.3 37.1-1 36.2-1.2 37-1.1 37.2 1.1 65 3.5 66 3.3 65.1 3.5 66 2.3 66 1 65.1-1 32.9v33.1l-2.3 31.9-3.5 33.1-15.9 9.3-13.7 10.3-11.5 9.3-10.2 10.3-10.3 10.4-9 11.3-9.2 13.4-11.4 15.5H55741.3l-9.2-11.4-9.1-11.4-10.1-10.3-10.4-10.3-20.6-17.5-21.5-17.5-23-14.5-23.9-14.4-24-14.5-22.7-13.5-24-14.3-24-14.6-24-15.3-21.6-17.7-11.4-9.3-11.4-10.3-10.3-10.3-10.1-11.4-10.4-11.2-10.2-12.4-9.2-13.5-9.1-13.4h-9.1l-4.5-7.2-5.8-5.1-4.6-5.2-5.7-4.2-5.6-3-5.8-3.2-6.8-3.1-8-3v-12.4l17.1-8.2 14.8-8.3 13.7-8.4 12.6-9.2 12.6-9.3 10.1-9.3 9.2-10.2 8-11.5 8-10.2 6.9-12.5 5.5-12.2 7.1-12.5 9-27.8 9.1-30.9h9.1l11.4-24.9 9.1-24.6 5.8-23.8 3.5-22.8 1-21.7-1-21.6-4.6-20.7-5.7-18.5-6.9-18.6-10.3-16.4-11.4-16.6-12.6-13.3-13.6-13.5-15.9-11.4-17.2-9.2-17.1-8.2-19.4-6.4-19.5-5.1-20.4-3h-20.5l-21.7 1-21.7 3.1-22.9 6.1-21.5 7.2-22.9 10.3-21.7 12.5-21.7 15.5-21.5 17.5-20.6 20.6-20.5 22.8-19.4 25.7-18.2 28.9-17.2 7.3-15.9 5.1-16.1 3.1h-15.9l-17.1-2.1-16-4.1-14.8-6.1-15.9-7.2-16-9.3-14.8-11.4-15.9-12.4-14.9-13.5-13.7-14.3-14.8-16.6-13.7-16.5-13.8-16.4-12.4-18.7-12.6-17.5-12.6-19.6-11.4-18.6-22.7-37-19.4-37.3-17.2-35-14.9-33-12.5-27.9-9.1-23.8h-9.2l-12.5-13.4-12.5-12.3-13.8-12.4-12.4-11.4-12.6-9.2-13.7-9.3-12.6-9.3-12.5-7.3-11.4-6.2-12.6-6.1-11.4-4.2-11.4-3.1-11.3-3-10.3-1h-9.2l-9 1-9.1 1.9-8.1 3.2-6.8 5.2-6.8 5.1-5.8 7.2-4.5 8.3-4.6 9.3-2.2 11.4-2.4 12.2-1.2 13.5 1.2 14.5 1.1 16.5 2.3 18.5 4.7 19.6 4.5 20.6 6.9 22.8v36l1 36.2v36.1l1.2 36.2 2.4 20.7 3.3 23.5 2.2 24.9 1.3 24.7v24.8l-1.3 12.4-2.2 11.4-3.3 10.3-4.6 10.3-5.8 9.3-6.8 9.3-26.2-4.2-25-6.2-24.1-7.1-23.9-9.5-22.9-11.2-21.7-12.4-21.6-13.4-21.7-15.5-19.3-16.6-20.5-18.5-18.4-18.5-18.2-20.7-17.1-20.6-17.2-21.7-15.9-22.7-15.9-23.7-14.9-24.8-13.6-23.8-13.8-25.7-13.6-24.9-11.4-25.7-11.4-25.7-11.4-26.9-10.3-25.7-18.2-51.7-16.1-51.6-12.4-49.5-11.5-46.5-7.9-5.1-5.8-5.3-4.6-6.1-4.5-6.2-5.8-13.4-5.6-16.6-6.8-2.9-5.7-4.3-3.4-5-3.5-6.3-4.5-13.3-2.3-13.5 28.5 5.1 70.7 14.5 102.7 21.7 119.8 24.7 126.5 25.9 119.8 23.8 52.5 9.2 46.7 9.3 38.8 6.1 29.6 3.2H54694.2l13.7 15.4 17.1 14.5 17.1 13.4 19.4 12.3 20.5 10.3 20.5 10.3 22.9 9.3 24 8.4 23.9 8.2 25 6.2 26.3 6.2 26.2 5.1 27.5 5.3 27.3 4 28.5 3.2 27.4 3.1 58.1 5 58.3 3.2 57 1.9 57 1.1h54.8l52.5 1 50 1.1 46.9 1.1H55574.8l27.3 6.1 30.8 8.4 32 9.3 34.1 10.2 34.3 12.5 33.1 14.3 17.1 7.2 15.9 8.4 15.9 8.2 14.9 9.3 14.9 9.2 13.6 10.4 12.6 10.3 11.4 10.3 11.4 12.4 9.1 11.4 9.2 12.2 6.8 13.6 5.7 13.4 4.5 13.3 2.3 15.6 1.2 14.3-1.2 16.6-2.3 16.5-5.6 16.6-6.8 17.5zm-5599.3 212.5h121l22.8-4.2 22.7-1h22.9l24.1 1h408.2l17.2 1.1h17.1l18.2-1.1 19.4-4 18.2-4.2 19.4-6.1 20.5-6.3 19.4-8.3 78.8-35 76.4-35.1 18.1-7.2 18.3-6.3 17.1-5 15.9-4.3 16.1-1.9 14.9-1 14.7 1 12.6 3 12.6 5.3 11.3 7.2 10.4 10.2 9.1 12.5 7.9 15.4 6.9 18.5 5.7 21.7 4.5 24.9-24 47.4-25 41.2-27.4 38.1-28.6 33.2-30.7 28.8-31.9 25.9-33.1 21.7-35.3 17.5-35.5 14.3-36.4 11.4-38.8 8.4-38.9 5.1-39.9 2.1h-39.8l-41.2-2.1-40.9-5.1-42.3-6.3-42.1-8.2-43.4-10.4-42.2-12.3-43.4-13.4-42.1-14.5-43.4-15.5-42.2-16.5-42.1-16.4-41.2-17.7-41.1-18.5-40.9-18.6-77.6-36-75.3-35.2v-7.2l1.1-6.2 23.9-9.3 16.1-6.2 17-4.2 26.2-6.1zm1022 630.5-34.2-17.5-25.1-18.5-17-21.7-9.3-23.8-2.2-24.9 4.5-26.8 11.5-27.8 15.9-28.8 22.8-29.9 26.3-31 31.9-30.9 34.2-32.1 38.8-32 41.1-32 44.4-32 45.7-32.1 46.8-31.8 47.8-30.9 49.2-30.1 47.8-29.9 95.8-54.6 89.1-49.5 78.7-43.4 66.1-34.1 48-24.6 27.2-13.6 54.8 2.1 43.4 7.2 33 10.4 22.8 14.5 12.6 17.4 4.5 20.7-4.5 23.8-12.6 26.8-19.5 28.9-25 29.8-31.9 33.1-37.6 33-41 35.1-45.7 36.2-49.2 36-51.2 37.1-53.7 36.2-54.7 37.1-55.8 35.2-55.9 34.9-55.9 34.1-54.8 33.1-52.5 29.9-51.2 28.9-91.4 50.5-74.1 38.2-29.6 14.5-22.9 11.3-17 6.1-9.2 2.2zm426.6 162-28.5-17.5-15.9-22.7-4.5-25.7 6.7-31.1 17.2-33 26.1-37.2 35.5-39.3 43.2-41.3 50.2-43.1 57.1-44.5 62.7-44.4 68.4-45.3 71.9-45.5 75.2-44.2 78.8-44.5 79.7-42.3 81-40.2 82.2-39.2 81-35.2 81-32.9 78.8-29 75.2-24.7 72.9-20.6 68.4-15.6 64-10.1 58.2-4.3 51.2 1.1 44.6 9.3 36.4 14.3 28.5 23.8 18.4 29.9 9.1 39.2-14.9 8.4-39.9 19.6-60.5 28.8-79.8 37.2-95.8 44.4-108.3 49.5-116.4 53.7-123.1 57.7-125.6 58.8-125.4 58.7-120.9 59-115.1 56.7-104 52.7-91.1 48.4-40 21.7-34.2 20.7-30.8 17.4-23.9 16.7-14.9 6.1-12.6 5.1-12.4 4.1-11.5 3.2-11.4 2.9-12.4 1.1-13.8 2.1-16 1.1zm3460.5 146.5v.9l-1.2 1.1h-4.5l-6.8 1h-28.5l-55.9 1.1-11.3 1-9.3 2.1-7.8 2.2-8.1 2.9-16 7.3-17.1 9.3-1.2 1.1-1 1.1-5.8.8h-10.1l-43.4 1h-82.3l-77.5 7.4-75.2 7.2-71.8 7.1-72 8.3-69.4 9.2-67.4 9.5-66.1 10.3-65.1 10.3-63.8 11.2-62.8 11.4-61.6 13.4-60.4 13.5-60.5 13.3-58.1 15.6-59.3 15.4-58.2 15.6-58.3 17.4-58 17.5-57.1 19.7-58.2 19.6-58.1 19.7-58.3 21.5-59.2 22.8-59.3 22.7-59.3 23.7-61.6 25.8-61.6 25.9-62.8 26.8-128.8 57.7-133.4 60.9-38.9 12.4-34.1 11.4-32 7.1-27.3 6.3-24 4-21.7 2.2-18.4-1.1-14.6-1.1-11.5-4-10.2-4.2-6.8-7.2-4.6-7.3-1.2-9.3v-9.2l2.2-11.5 3.6-11.1 6.8-12.4 6.9-13.5 10.2-13.4 10.2-13.4 12.6-14.5 13.7-13.4 13.6-14.4 16.1-14.5 15.9-13.3 17.1-13.5 18.3-13.4 18.1-12.5 18.4-11.2 19.4-11.3 18.2-10.4 19.4-8.4 73-23.6 82-23.8 42.4-13.4 40.9-13.3 20.6-8.3 19.5-7.3 19.3-8.2 19.3-8.2 18.3-9.3 17-10.4 16.2-9.2 14.8-11.4 14.6-11.3 12.7-12.4 11.4-12.5 10.3-13.3 8-14.5 6.8-14.3 4.6-16.6 3.3-16.5 1.2-17.5-1.2-18.7-3.3-19.6-5.8-21.7-18.2 1-22.9 2.2-28.5 5.2-33.1 7.2-36.4 8.2-40 10.3-42.2 11.4-45.6 13.4-95.7 27.9-100.4 28.9-100.5 29.8-94.6 27-45.6 12.3-42.2 11.3-39.9 10.3-36.5 8.2-31.9 6.4-27.4 4-22.8 2.1h-17.1l-11.4-4-4.5-6.4 2.2-9.2 9.1-12.5 17.1-16.4 26.3-20.6 35.4-24.9 44.3-28.9 49.1-19.6 84.4-33 115.2-42.2 140.2-51.5 161-57.9 175.7-62 185.9-63.8 191.5-64.1 95.9-32 95.7-29.9 93.5-29.9 92.5-28.9 90.1-26.8 86.7-24.7 83.3-22.8 78.6-20.6 74.1-18.6 68.5-14.6 61.6-12.2 54.8-9.2 47.7-5.3 40.1-1.1 30.8 3.2 20.4 7.2 14.9 15.6 11.4 14.3 8 13.5 6.9 12.4 3.3 11.4 2.2 11.2v10.3l-2.2 10.3-3.3 9.5-5.8 9.2-6.9 8.2-8 8.3-7.9 7.2-10.3 8.1-10.3 7.4-11.3 7.2-24.1 14.5-25 14.3-23.9 16.6-22.8 16.5-10.3 9.2-9.1 9.3-9.2 10.4-6.9 10.3-5.6 11.3-4.5 12.5-2.3 12.4-1.2 14.4 14.8 4.1 18.3 3H54663.4l26.2-1.9 28.5-4.2 30.8-4.2 32.1-5.1 68.4-12.4 72.9-14.4 74.2-14.5 75.2-12.4 37.6-6.1 36.5-4.2 36.6-4 34.2-3.2 33-1.1h32.1l30.7 2.2 28.5 3.1 25.1 6.2 23.9 7.1 20.6 10.3 18.2 12.4 14.9 15.5 11.4 17.6 8 21.7 3.3 23.6-7.8 26-9.3 21.6-7.9 18.6-9.1 16.4-9.3 13.5-10.1 11.3-10.3 10.3-11.4 8.3-13.6 7.1-14.9 5.3-17.1 5.1-18.2 5.2-44.6 9.3-55.9 11.3zm-3128.6 154.7-12.4-5.1-11.6-6.3-11.3-7.2-10.2-7.1-9.3-8.2-9-8.3-7.9-10.3-7-10.3-1.1-28 10.3-31 22.8-33.9 33-36.2 42.2-39.2 51.4-41.2 59.3-43.4 67.2-44.3 74.2-44.4 79.9-46.4 85.5-45.5 88.9-46.3 93.6-45.5 96.9-44.3 98.2-44.4 100.4-42.3 101.5-40.3 101.4-38.1 100.4-36.2 99.2-32.9 96.9-30 93.6-26.9 90.1-22.7 85.5-18.5 81.1-13.4 75.2-9.4 67.3-4 61.6 2.1 52.4 7.2 43.4 14.5 34.1 20.6 24.1 26.8-2.4 17.5-7.8 16.6-13.9 17.5-16.9 15.4-21.7 16.6-26.2 15.4-28.6 15.5-33 15.5-36.6 14.5-38.9 14.3-40.9 14.6-43.4 13.4-44.4 14.4-46.8 12.4-48 13.4-49 12.3-99.1 24.8-98.2 22.8-96.9 21.7-91.3 20.6-83.3 19.6-74 17.5-33.2 8.2-28.5 8.3-25 8.1-21.7 7.4-49.1 27.8-53.6 32-57.1 36.1-60.3 40.2-62.8 41.3-65.1 42.3-66.1 43.4-66.1 42.3-67.4 41.3-67.1 39.2-33.1 18.6-33.1 17.4-33.1 16.7-32 15.3-32 13.6-31.8 13.2-30.8 11.4-29.8 9.3-29.5 8.4-28.5 6.1-27.4 4.2-26.3 1.9zm3752.5 25.9h35.5l31.8 1h8.1l3.3 1.1 1.2 1.1 1.1.8 19.4 5.3 16.1 5.1 12.4 6.2 9.1 7.2 5.8 7.2 2.2 7.3-1.2 7.2-3.3 8.2-5.8 8.2-7.9 8.5-10.3 9.2-11.4 8.2-28.5 18.5-33 18.6-73.1 38.2-68.4 37.2-15.9 9.3-13.7 9.2-12.6 8.3-10.3 8.2-7.9 8.4-6.8 8.2-4.7 7.2-1.1 7.1 13.7 15.6 12.6 15.4 9.1 14.6 9.1 14.3 6.8 15.6 6.8 15.3 7 17.7 5.6 19.6 38.8-1.1 37.7-3.1 37.6-5 37.6-5.3 77.6-1.1h50.2l4.6 1.1 2.3 1.1v1l23.9 2.1 22.7 4 20.6 3.1 18.3 4.3 17.2 5 14.6 4.3 13.9 6.1 12.4 5.2 10.3 6.1 10.3 7.2 7.9 7.3 5.8 8.3 5.5 8.2 4.8 8.2 3.3 9.3 2.3 9.3 1.2 10.3V45586.5l-2.3 12.4-4.5 25.7-7 28.1-20.5 63.8-24 74.4 39.9 20.6 33.1 18.5 26.2 16.5 21.7 13.5 18.4 11.3 17 9.3 6.9 3.1 7.9 3 8.1 3.1 7.8 2.1 8.1 1.1 8 1h20.5l23.9-2.1 28.6-4.1 79.8-13.3 114-20.7H56922.8l17.2 5.1 28.5 8.2 36.5 10.3 43.4 13.5 47.8 14.5 47.9 16.5 46.9 17.4 43.2 18.6 19.5 9.5 18.3 9.2 14.7 9.3 13.7 9.3 10.2 9.2 6.9 9.3 3.5 8.2v9.3l-3.5 8.2-9.1 7.3-12.6 7.2-18.2 7.2-22.7 7.3-28.6 5.1-35.3 6.4-41.1 4v6.1H56408.6v-6.1l-21.7-2.1-21.7-1.9-21.7-2.1-20.5-2.2-21.7-2.1-21.7-2.1-21.7-1.9-20.4-2.1H55921.5l-8 7.2-6.9 5.3-10.3 5-15.9 7.1-3.5 1.1-1.1 1-25.1 1.1h-23.8l-24 1.1h-25.2l-23.9 1h-24l-25.1 1.1h-23.9l-9.1 4-9.1 3.2-10.3 4.1-8.1 4H55518.8l-50.2 5.3-50.2 6.2-47.9 7.1-49 8.4-95.9 17.5-93.3 20.6-94.7 20.7-93.6 20.6-47.9 10.4-48 9.2-47.9 8.2-49 8.3-3.5 8.2-6.8 7.3-9.1 8.3-11.4 7.1-12.5 8.2-15.9 7.4-17.3 7.1-19.3 8.3-42.2 14.5-47.9 15.4-51.3 15.6-53.7 15.3-54.8 16.5-54.6 17.7-53.6 17.5-51.3 18.5-23.9 10.3-23 10.3-22.7 10.4-20.5 10.3-18.4 11.4-17.1 11.3-15.9 11.4-13.7 12.4-33 24.7-32.1 21.7-31.8 20.6-30.8 18.6-30.8 17.5-29.7 14.5-28.5 12.4-26.2 11.4-26.3 8.2-23.9 7.1-22.8 5.3-21.7 3-19.4 1-17.1-1-15.9-3-12.7-5.3-11.3-7.1-9.1-9.3-5.8-11.4-3.3-13.4-1.2-15.4 2.2-17.7 4.6-19.5 8-22.7 11.4-23.7 14.9-25.8 17.1-29 21.7-29.9 25-32.9 29.7-34.1 33.2-37.1 36.3-39.3 9.3-18.6 11.3-23.6 12.5-28 12.6-28.9 4.5-15.3 3.5-14.5 3.3-14.6 1.2-13.3v-12.4l-2.2-11.4-2.3-5-2.3-5.3-3.4-4-3.4-4.2-65-1h-33.2l-8-1.1h-3.3l-2.2-1.1v-1l-11.5-5.1-10.2-6.3-8.1-7.1-9.1-9.4-38.8 12.5-52.5 18.6-61.6 21.7-67.2 21.6-35.3 9.3-34.3 8.2-33.1 7.2-31.9 5.2-15.9 1.1-14.9 1h-14.7l-13.8-1-12.5-1.1-12.6-2-11.4-3.2-11.5-4-6.9-3.2-4.4-3.2-4.6-2.9-3.3-4.2-7-8.2-7.9-10.4v-14.5l3.3-14.3 4.6-13.5 5.8-12.4 6.8-11.4 9.1-11.1 9.1-10.4 11.5-10.3 12.4-8.4 12.6-9.3 14.9-7.1 14.8-7.2 16-7.3 15.9-6.2 17.1-6.1 17.2-5.3 35.3-10.3 36.6-8.2 36.3-7.2 35.4-6.3 66.3-10.3 54.6-10.3 3.5-34 3.4-35.1 1.1-16.5 1.3-17.6v-33.9l-1.3-16.7-3.3-15.4-3.5-16.4-5.8-15.6-6.8-16.5-9.1-14.5-10.3-15.3-12.4-14.6-17.2 5.3-18.2 5-19.4 7.2-21.7 8.4-44.4 18.5-49.2 21.7-51.2 21.6-53.8 22.7-54.7 22.7-53.5 19.7-27.5 9.2-26.2 8.2-26.1 7.4-25.2 6.1-25 5.1-23.9 3.1-24.1 2.2h-21.6l-21.7-1.1-19.4-3.2-18.2-6.1-17.2-7.2-14.8-10.3-13.7-12.4-12.6-14.6-10.2-17.4 3.4-21.7 10.3-21.7 15.9-22.5 20.7-21.7 27.3-22.8 32-21.7 36.4-21.7 39.9-21.7 44.6-21.7 47.9-21.5 50-20.6 53.7-20.7 55.9-20.6 56.9-19.6 59.4-18.7 60.5-18.6 61.6-18.5 61.6-17.5 61.5-16.6 61.6-15.4 60.6-14.5 59.3-14.4 58-13.5 57.1-11.3 53.6-11.4 52.5-9.2 48-9.3 45.4-7.2 42.4-6.2 37.6-5.2 33.1-4.2 28.5-1.9v-1l1-1.1h3.5l6.8-1.1h26.3l50.1-1 84.6-14.5 84.3-14.4 84.5-15.5 84.3-14.4 85.5-15.5 84.3-14.4 85.6-15.6 85.7-14.3 85.6-14.5 85.5-14.3 85.6-13.6 85.5-13.4 84.3-13.5 85.6-12.2 84.4-11.4 83.3-10.3h26.1l26.2 1 27.5 1.1 27.3 1.9m-10.2 991.7H56232.9l-13.8-1-35.4-1.1-48.9-1h-114.1l-50.2 1-35.4 1.1-13.6 1zm273.8 276.6 5.6-1.1 15.9-1 21.7-1.1h49.1l21.7 1.1 14.7 1 5.8 1.1 13.7 1 13.6 1.1h75.4l57 .8h67.2l16.1 1.1h9.1l2.3 1.1 1 1 10.3 2.1 12.6 2.1H56897.8l73-1h146l73-1.1H57375.7l41.2 1.1 39.8 1h41l23.9-3.1 24-1.1h25.2l23.9 1.1 24 3.1 24 4 23.8 5.3 23.9 6.1 22.9 6.3 21.7 8.2 21.7 9.3 20.5 9.2 19.4 10.4 17.2 10.3 17 11.4 14.8 12.4 13.7 12.2 11.5 11.4 10.2 13.5 8 12.4 5.6 12.4 3.5 12.2 1.2 12.5-1.2 12.4-4.6 11.3-6.8 11.5-9.1 11.3-12.6 10.4-15.9 10.2-19.4 8.3-22.9 8.2-26.3 7.2-4.5 2-11.4 1.1h-69.6l-11.4-1.1-4.5-2-24-5.1-24-3.1-22.7-2.1h-22.8l-22.9 2.1-22.7 3.1-20.7 5.1-21.6 5.2-19.3 7.2-19.4 8.2-18.4 9.3-15.9 10.3-15.9 11.4-14.9 11.4-13.6 12.4-11.4 13.3-10.3 13.4-9.1 14.5-6.8 13.4-4.6 14.5-3.5 14.5-1 14.4 1 14.5 3.5 14.3 4.6 13.5 7.8 13.4 10.4 13.4 12.6 12.3 15.9 11.4 17.1 10.3 21.7 10.4 24 9.2 61.6 1.1h30.8l7.8 1h4.8l1 1.1v1.1h49l22.9-2.2 22.7-2.1 21.7-3.1 21.7-4.1 21.7-4.1 20.5-5.1 42.1-12.5 42.4-13.4 43.2-15.4 44.6-15.5 7.9-2.1h22.9l30.8-1h71.9l30.8 1h21.7l9 2.1 18.2 3.1 18.2 4.2 18.4 5.1 18.2 5.2 18.2 6.1 17.1 6.1 17.2 7.4 15.9 7.1 15.9 7.2 14.9 8.3 13.6 8.3 12.6 8.3 12.6 9.2 10.4 8.3 9 9.3 6.9 9.2 5.5 8.2 4.8 9.3 2.2 8.4 1.1 9.3-1.1 8.2-3.4 8.2-5.8 7.2-7.9 8.4-10.3 7.2-12.6 6.1-15.9 6.3-18.3 6.1-20.6 5.3-23.7 4-27.5 4.2-29.8 3h-43.2l-21.7 1h-63.8l-21.7 1h-21.7l-27.4 4.2-27.4 5.1-26.2 5.3-26.3 5.1-26.1 6.2-25.1 8.3-25.2 8.2-26.3 10.3-2.2 26.8-1.1 24.8 2.3 23.8 4.6 20.6 6.8 19.7 9.1 17.4 10.3 15.4 12.6 15.6 13.6 12.4 16 11.3 18.1 10.4 18.4 9.3 20.5 7.1 20.4 7.2 23 5.3 22.7 5.1 23 3.1 25 3.1 25 1.9 25.2 1.1 51.2 1 51.5-1 97.9-6.1 86.8-6.1h153.9l28.6 6.1 29.7 8.2 28.5 9.3 28.5 10.3 25 11.4 24 12.4 10.3 6.1 10.1 6.3 8.1 7.2 8.1 6.1 5.5 7.3 5.8 7.2 3.5 8.3 2.3 7.1 1 7.4v8.2l-2.2 8.2-4.6 8.2-5.8 8.3-7.8 8.3-10.4 8.3-11.3 8.2-14.9 8.2-15.9 9.3-18.4 8.2-21.5 9.5v6.1h-125.6v-6.1l-38.7-8.4-38.8-6.1-38.8-7.2-38.7-6.3-38.9-5.1-38.8-5.2-38.6-5.1-38.8-5.3-27.5-1h-26.3l-26.2-.9h-27.3l-35.3.9-36.6 1-35.3 1-35.4 1.1h-84.3l-59.4-2.1-60.4-1.9-59.3-1.1-60.5-1-59.3 1-59.3 2-29.6 2-29.7 2.2-29.6 3.1-29.8 4.1v6.2h-361.5l-29.6-1h-14.8l-5.8-1-1.1-2.1h-36.5l-35.4 1-35.3 2.1-34.3 3-68.4 9.4-67.3 10.3-67.2 10.4-68.4 9.2-35.5 3-35.4 3.1-35.3 1.1h-57l-20.5 1h-19.5l-19.3 1.1-20.5 1-21.7 1.1-20.4 1.9-19.5 2.1-40.1 5.3-38.6 7.1-37.6 8.3-36.6 10.3-36.6 10.3-36.3 10.4-71.9 23.7-73 23.7-37.7 11.3-37.7 10.4-38.6 9.2-40.1 8.2h-107.1l-35.5 4.3-37.6 4.1-38.6 5.1-38.9 6.3-41.1 7.2-39.9 7.1-41 9.3-40 10.3-39.8 10.3-38.8 12.4-37.7 13.6-35.3 15.3-17.1 7.2-17.2 8.4-16 9.3-15.9 8.2-14.8 10.3-13.7 9.3-13.8 10.3-13.6 10.4-21.7-2.2-22.7-1-21.7-2.1-21.7-.9-6.9 16.4-11.3 14.4-13.7 14.5-17.1 12.4-19.4 11.4-21.7 10.3-24 9.3-25 8.2-26.2 6.2-26.3 6.2-27.5 4-27.2 4.3-26.3 2.1-26.2 1h-25.2l-23.8-1-21.7-1.1-20.6-3.1-17.2-4-14.7-5.3-11.4-6.2-8-7.3-3.5-8.2v-9.2l4.6-9.4 10.2-11.3 14.9-12.5 20.5-12.2 26.3-14.5 34.2-14.5 39.9-15.4 46.8-17.5 35.2-6.3 33.3-9.3 29.6-11.3 26.2-12.3 22.7-13.4 19.5-14.5 17.1-16.5 13.7-16.4 11.3-17.7 8.1-18.5 5.8-17.6 3.3-18.5v-18.8l-2.3-18.5-3.4-17.4-6.7-17.6-10.4-17.6-10.3-15.4-13.6-14.5-15.9-13.3-17.2-12.4-19.4-10.4-21.7-9.2-22.7-6.1-24-5.3-26.3-2.2h-28.5l-28.5 2.2-30.8 6.1-32 8.4-33 11.2-34.2 15.5-22.9 17.6-22.7 14.5-21.7 13.3-20.5 9.5-20.6 8.1-19.4 6.1-18.2 4.3-18.2 2.1h-16.1l-15.9-1.1-14.9-3.1-13.6-4.3-12.6-6.1-11.4-7.1-10.1-7.4-9.3-9.2-7.9-10.4-6.9-11.3-4.4-11.2-3.6-12.5-2.2-12.4-1.3-12.4 1.3-13.3 2.2-13.5 4.6-13.4 5.8-13.5 7.8-13.3 9.1-12.5 11.5-13.4 13.7-11.3 14.9-11.2 16.9-11.5h88l26.1-16.6 22.9-17.4 19.4-18.6 14.7-20.6 11.6-21.7 7.9-21.7 5.8-22.7 2.2-22.6v-22.7l-3.5-22.8-5.6-22.7-8-21.7-10.4-21.5-11.3-20.7-13.7-19.7-14.8-18.6-16-17.5-18.2-14.5-18.3-14.4-20.5-11.3-19.4-9.3-20.5-7.2-21.7-4.2-21.7-1-20.5 1-21.6 4.2-20.7 8.2-20.4 11.4-19.5 15.4-18.1 18.6-17.2 23.7-17.1 27.8-19.5 8.3-21.5 9.4-21.7 9.3-23.9 8.2-23 8.2-23.9 5.3-11.4.9-11.4 1h-11.3l-10.4-1-9.1-30-2.2-29.8 4.5-28.9 10.4-28.9 14.7-27.8 20.6-26.9 26.2-26.8 29.6-25.7 34.3-25.9 37.6-24.9 41.1-23.6 43.4-23.8 46.7-22.7 49-22.6 51.4-21.7 52.5-20.6 53.5-20.6 54.7-19.6 55.9-18.5 55.9-18.8 109.6-33.9 106-32 100.4-28.9 91.3-25.9 78.7-22.6 63.9-20.6 26.2.8h26.2l26.3 1.1 27.3 1.1 19.4-1.1 19.4-1.1h20.5l19.4-.8 51.2-10.4 50.2-10.2 50.3-10.4 50.2-10.3 48.9-10.3 50.3-9.3 49.1-10.3 49-10.3 49-9.5 50.2-10.3 49.1-9.3 50-9.2 50.3-9.3 51.4-8.3 51.3-9.2 51.4-8.2zm1140.6 8.2v4.2h39.8l41.2-1.1 39.8-1m3198.2 8.2v-6.1h53.7l27.3.9h6.8l3.5 1 1 1.1v3.1h-92.3zm4.5 0h21.7l21.7-1.1h21.7l22.7-1m-3849.4-6.1 73 1h146l73 1.1h146.1m3487.8 558.2 1.2-18.7 1-18.6 1.2-18.5 1.1-17.5v42.4l-1.1 21.7v5l-1.2 3.1-1 1.1h-1.2zm-892 39.2-17-2.1-18.4-2.1-17.1-2.1-17-1.9-8-17.7-5.8-23.6-3.3-28-1.3-32.9 1.3-36.2 3.3-40.2 5.8-43.4 6.8-45.3 9.1-47.4 11.3-49.7 12.7-50.6 13.6-51.6 14.9-52.5 17.1-51.6 17.2-50.5 18.2-50.6 20.6-48.6 19.2-46.4 21.7-43.3 21.7-41.4 21.7-38.1 22.8-34 22.8-30 22.8-24.6 24-19.6 22.9-14.5 22.8-8.3 21.7-1 22.7 5.2 21.6 12.2 20.5 20.7 20.7 29.9 5.6 32 4.5 34.2 1.2 18.5 1.3 17.4v18.6l-1.3 18.7-1.2 18.6-2.2 17.5-3.3 17.4-4.6 17.7-5.8 16.5-6.8 15.6-6.9 15.3-9.1 14.5-25.1 17.6-21.7 18.5-20.5 20.6-17.1 21.7-14.7 22.8-13.8 23.6-11.4 24.8-9.1 25.8-8.1 25.8-7.9 26.8-5.7 26.9-5.8 27.9-7.8 54.6-6.8 54.7-8.1 52.7-9.1 50.5-5.8 23.8-6.8 22.5-7.9 21.7-9.3 20.7-10.1 19.6-12.6 17.5-13.6 16.6-17.2 14.3-18.2 12.5-20.6 10.2-23.9 8.3-26.3 6.3zm472.3-51.6 1.1-2.1h1.2l2.2-11.3 2.3-10.4 1-23.6v-24.9l1.3-23.8v-23.6l4.5-26.9 5.8-27.8 7.9-29.9 8-30 10.1-29.8 10.4-31 13.7-31 13.8-29.9 15.9-28.9 17.1-27.9 9.1-13.3 9.1-13.5 10.3-12.5 10.2-12.2 10.3-11.4 11.4-11.3 11.3-10.4 11.6-9.2 12.5-9.3 12.5-8.4 12.6-8.2 13.7-7.2m92.3 0 16.1 7.2 17 7.3 14.9 8.3 14.8 9.3 14.9 10.2 12.4 11.5 11.5 12.2 10.2 14.5v118.6l1.3 29.9v60l1 30-4.6 19.5-4.5 20.7-3.4 19.5-4.7 19.6-3.3 19.6-4.6 20.6-3.4 19.7-4.6 20.6m-4.5 73.3-9.1 58.8-14.9 90.8-10.3 52.6-10.2 56.7-12.6 58.8-13.6 57.9-13.6 57.7-16.2 54.7-7.9 25.7-9 26-9.3 22.5-7.8 21.7-10.4 20.6-9.1 18.7-9.1 15.5-10.3 14.3-10.3 11.4-10.2 8.4-10.3 6.1-11.3 2.2v32.8l-1.3 33.1v99l-1 33v66.2l-3.5 27.8-6.9 26.8-8 24.8-10.1 23.8-11.4 21.5-12.6 21.7-14.9 21.7-14.9 19.6-31.8 38.1-34.2 38.3-34.2 37.1-32 38.2-14.8 19.5-14.9 19.6-12.5 21.7-11.3 21.7-10.4 22.8-8 24.8-6.8 24.7-4.5 26.7-2.4 28 1.1 29.9 3.5 32 5.8 34 9.1 35.1 12.6 38.2 17 40.2 19.3 42.3 5.8 2.2 6.8 2.1 6.9 27.7 2.2 22.8-1 16.5-4.7 11.3-7.9 6.1-10.3 1.1-13.7-3.2-15.9-8.2-18.3-11.4-19.5-15.3-22.7-17.6-22.8-21.7-25.1-23.7-26.3-25.8-27.2-27.9-27.5-30-57.1-62.7-55.7-65.1-54.8-65.1-51.5-61.9-45.4-56.7-37.8-49.5-28.6-38.1-18.1-24.9h-9.1v-13.5l21.7-14.3 21.7-13.5 19.4-11.3 16.9-9.3 17.2-8.3 15.9-5.2 14.9-5 13.7-3.2 12.5-2.1 11.4-.9 11.6-1 10.1 1 10.3 1.9 10.3 2.1 9.1 3.2 9.1 3 17.2 6.2 17.1 7.2 17 6.4 19.4 5 10.3 2.1H60123.4l12.4-1 12.6-2.1 13.7-4 14.8-4.3 16-6.1v-9.4l29.7-13.4 28.5-13.4 28.5-13.4 28.6-13.4 5.7-19.5 6.8-19.6 7.9-18.8 6.8-19.5 17.2-37.2 17.1-37v-53.8l-1-54.7v-53.5l-1.2-54.7v-216.8l-3.4-10.3-3.5-9.3-15.9-3-14.8-4.1-14.9-4.3-14.9-2.9-22.7 12.2-22.8 10.3-24 10.4-23.9 9.4-25.2 8.2-24 8.2-25 8.3-25.2 6.1h-152.7l-16.1-8.3-12.4-9.2-6.8-9.3-4.6-9.3v-9.2l3.3-10.4 6.8-10.2 9.1-11.5 12.6-11.3 14.9-11.4 17.2-11.3 19.3-12.3 42.3-25.9 47.8-27.8 50.3-28.9 51.3-31 25-16.6 25.2-16.4 23.9-17.5 22.8-17.6 21.7-17.6 19.3-18.5 18.3-19.6 17.1-19.6 13.7-20.6 11.3-20.6 8-21.7 5.8-21.7 1.1-24.7v-24.8l1.2-24.7v72.1l1.1-24.7v-24.9l1.2-24.6v-23.8m-2.3 25.9v-23.8 23.8zm554.2 409.5v-51.6l1.2-39.2v-46.3l1.1-11.4v-6.3l1.2-2h1.2l11.4-37.2 11.3-30.9 12.6-26.8 13.7-20.6 13.7-16.5 14.8-12.4 13.6-7.2 14.9-3.2 14.9 1.1 14.7 4 14.8 9.3 13.7 11.4 13.8 15.5 12.5 19.6 11.5 21.7 11.4 23.6 9 28 8.1 29.9 6.8 32 5.6 33.9 3.5 36.3 1 38.1v39.2l-2.2 41.3-5.6 42.3-6.8 44.5-10.4 44.2-12.6 45.5-15.9 45.3-19.3 46.5-21.7 46.4-25.1 46.6-21.7-3.2-20.4-5.3-18.4-5-17.1-7.2-14.8-8.4-12.6-8.2-12.5-10.4-10.2-10.2-9.3-11.5-6.8-12.2-6.8-12.4-5.6-13.5-3.5-14.3-3.5-14.5-2.3-15.6-1-15.4-1.2-16.5v-16.6l1.2-16.4 1-16.6 3.5-35 5.8-34.1 12.4-68 11.4-64.1zm-354.6 509.8V47593.6l-1.2 82.5-1.1 61.8-1.2 44.3v47.5l1.2 9.4 1.1 4.1h1.2zm-2326.8 36.2h24l25 .8 23.9 1.1 24.1 2.1 23.9 4.2 23.9 8.2 25 8.2 26.3 9.3 25.2 8.2 25.1 6.4 12.5 2.9 11.4 2.1h156.2l27.5-2.1 28.5-.9 27.3-2 27.5-2.2 28.5-2.1 27.2-2.9H58990.7l38.8 12.2 37.6 13.5 36.6 13.4 37.6 11.4v8.2l12.6 4 14.7 3.2 28.6 3.2 52.4 6.1 11.6 23.8 3.3 18.5-5.6 13.5-12.6 10.3-19.4 6.1-26.3 3.1-30.8 1.1-36.5-2.1-39.9-3.1-44.4-5.1-46.9-6.3-49-6.2-50.2-7.1-51.2-6.3-51.5-5.1-51.2-5.2-50.3-3.1-48.9-1-45.7 2-43.3 4.2-40 7.1-35.3 11.4-29.7 15.6-25.1 19.6-18.1 25.7-11.6 29.9-3.3 36.3 4.5 42.1 13.7 49.6 22.9 56.7 33.1 64.1 43.1 71.2h9.3v9.2l25 8.2 24 9.3 24 7.2 24 7.4 23.9 7.1 25 6.2 25.2 6.2 25 5.1 1.3 50.6v54.7l1 28.9 2.3 28.9 3.5 28.9 4.6 29 2.2 14.3 3.3 13.5 4.6 13.3 4.7 13.5 4.6 13.4 5.6 12.4 6.8 11.4 6.8 12.3 8.1 11.3 8 10.4 10.1 9.2 10.4 9.3 10.3 9.2 12.4 7.4 13.8 7.2 13.7 6.1-6.8 13.5-9.1 12.4-11.6 10.3-13.6 10.3-16 9.3-17.1 7.2-19.4 7.1-20.5 6.4-22.7 5-23 4.2-25 4.2-25.2 3-26.2 2.1-26.3 2.1-27.2 1.1-27.5 1-54.7 1-54.8-1-51.2-2.1-49-2.1-84.5-5.1-55.9-3.2-78.6 6.2-101.5 8.2-121 10.3-135.8 13.5-148.2 15.6-157.4 18.5-79.8 10.3-81 10.3-82.2 12.4-82.1 13.3-81 13.5-79.7 14.4-78.8 16.6-77.6 16.4-74.1 17.6-71.8 19.7-69.6 19.6-65.1 21.7-61.5 21.5-57.1 23.8-51.2 24.8-46.8 26.8-41 26.7-34.4 29.1-28.5 29.9-20.4 31.8-36.6 11.4-51.2 19.6-61.6 21.7-66.1 21.7-33.3 9.3-30.8 8.2-29.6 6.3-27.4 4h-23.8l-11.5-1-9.1-.9-8.1-3.1-7.9-3.2-5.7-5.1-4.6-6.2 3.6-37.2 2.2-37 2.3-38.3v-55.7l-2.3-18.5-2.2-18.7-3.6-18.6-4.6-17.5-4.5-17.5-8-17.7-7.9-16.4h-9.1l-9.3-13.5-7.9-11.2-9-10.3-9.3-9.4-9.1-7.2-9.1-7.2-9.1-5.2-10.3-5.1-11.4-5.3-11.3-2.9-11.4-4.2-13.8-3.1-27.3-7.2-32.1-8.3 1.3-82.5 2.3-73.3-1.3-32.9-2.3-30.9-1-15.6-3.5-13.5-3.4-14.3-4.4-12.5-4.6-12.4-7-12.4-7.9-11.2-8-10.4-10.2-10.2-11.5-9.3-12.4-9.5-13.9-8.2-15.9-8.2-17.1-7.2-19.5-6.3-20.4-6.1-22.7-5.1-25.3-5.2-27.2-4.3-28.5-4-27.5 8.3-28.6 7.2-14.8 2.1h-20.4l-6.9-2.1-6.8-2-6.8-3.1 14.8-48.5 10.2-43.4 6.8-38.1 4.6-34.1v-29.9l-2.3-25.9-4.5-21.5-7.9-18.7-10.4-14.4-12.5-12.4-13.7-9.3-17.1-6.1-17.2-4.2-20.4-2.1h-20.5l-22.9 2.1-22.8 3.1-25.2 4-25 6.4-25 6.1-52.5 13.5-52.4 13.3-26.3 6.2-25.1 5.1-25.1 5.3-24 2.9-22.9 3.2h-22.7l-20.5-1-19.4-3-3.5-32 4.6-31 13.8-32 21.7-31 29.5-30.9 36.6-31 43.2-29.9 49.2-29.9 54.7-28.9 58.1-28.9 62.7-27.9 67.4-26.8 68.5-25.9 71.8-24.7 74-23.8 74.2-22.7 75.4-21.5 75.2-19.6 74.2-18.8 74-16.4 70.9-15.4 69.4-13.4 66.3-11.4 62.6-9.3 59.3-7.2 53.7-5.2 49-3.1 42.1-1.1 36.6 1.1 29.6 4.1 21.7 7.2 12.6 9.3 63.8-1.1 62.8-.8 61.6-2.1 62.8-3.2 61.6-4.2 62.6-4 61.5-5.2 61.6-6.2 123.3-11.4 122-12.4 122.1-13.3 123.1-12.4 123.2-10.3 123.1-9.3 61.6-4.2 61.8-2.1 62.6-3 61.6-1h62.8l62.6 1 64 2.1 62.7 3 63.8 4.2 65.1 6.2 63.8 7.2 65.1 9.4zm2984.9 719.1h-83.3l-36.6 15.4-30.7 15.6-6.9 2.1-8 1h-5.6l-6.8-1-6.8-2.1-7-4.2-5.6-6.1-6.9-8.3-1.2-19.5-1-18.8-1.3-18.5-1-18.6v-41.3l1-19.6 1.3-18.5v-19.6l2.2-16.6 3.3-16.5 4.6-15.3 4.6-15.6 5.7-14.4 6.8-14.5 8.1-14.5 9.1-13.3 9.1-13.4 10.3-13.5 10.1-13.3 11.6-12.4 24-23.8 26.2-23.8 27.3-21.5 28.5-21.7 29.8-21.7 29.5-20.6 58.3-39.3 55.8-39.1 8.1-13.5 5.5-14.5 5.8-14.4 5.8-14.5 7.9-29.9 6.8-29.9 11.3-59.8 9.3-59.8 6.9-30 6.8-27.8 4.5-14.5 5.8-13.5 5.6-13.3 5.7-13.4 6.8-12.5 8.2-12.4 9-12.3 10.2-11.3 10.3-11.4 12.6-10.3 12.6-10.3 14.7-9.3h5.7l5.6 1.1 7 1.9 6.8 2.1 14.8 7.3 13.8 8.3 13.6 10.2 10.3 9.3 4.6 5.1 3.3 5.3 3.5 5.1 1.1 4.1 4.5 1.1 4.7 1 18.2 40.3 15.9 36 11.4 34.1 9.1 32.1 5.8 29.8 2.2 26.8 1.3 25.9-2.3 23.6-3.5 22.8-5.7 21.7-7.9 19.5-9.1 18.6-11.6 18.6-12.4 16.6-12.6 17.5-14.8 15.3-29.6 33.1-32 32-17.2 17.5-15.9 16.7-14.9 18.5-15.9 19.6-13.7 19.5-13.5 21.7-12.7 22.8-11.4 24.6-10.3 26-9 27.8-6.9 29.8-4.6 33.2-10.2 49.4-12.6 47.5-6.9 21.6-8 20.7-4.6 9.2-4.5 9.3-5.6 8.3-5.8 7.3-5.8 7.2-6.8 7.1-5.6 5.3-8 5.1-8.1 4.2-7.8 3.1-8.1 3-9.1 1h-20.4l-11.6-2-11.4-3.1-12.4-4.1-12.6-5.1-13.6-6.3-14.9-7.2zm-312.6 319.8v18.7l1.2 18.5v17.6l1.1 19.5-1.1 23.9v24.6l-1.2 24.9v24.6l2.3 12.4 4.5 12.4 7 12.5 9.1 14.3 11.4 13.5 12.6 14.5 13.7 15.4 14.8 14.5 68.4 63 68.4 63.8 15.9 16.7 14.9 15.4 13.6 15.5 11.6 14.3 10.1 15.6 9.1 14.4 5.8 13.4 3.3 13.5 2.5 13.3-2.5 12.4-3.3 11.4-8.1 11.3-11.3 10.4-14.9 10.3-18.2 8.2-22.7 8.3-9.3-12.5-9.1-11.3-10.2-11.2-10.3-11.4-22.7-21.7-25.2-21.7-27.3-19.5-27.4-20.7-29.6-19.6-28.6-19.6-28.5-19.6-28.5-19.6-27.4-19.6-25.1-19.8-23.9-20.4-21.7-20.7-10.3-10.3-9.1-10.3-8.1-11.4-6.8-10.3h-10.2l-8-26.9-11.3-36.1-11.5-44.4-10.2-49.5-5.8-25.7-4.6-27-3.3-27.8-3.5-27.8-3.3-27.8-1.2-28-1.3-27.8 1.3-26.8 1.2-25.8 3.3-23.7 4.6-23.7 5.7-21.7 7.9-19.6 10.3-18.6 11.4-15.6 13.8-12.4 15.9-10.3 18.2-7.1 21.7-4.1h22.8l26.2 3 29.8 7.3 30.7 11.2 35.3 15.6v12.4l-1 15.4-1.2 19.6-2.3 23.8-2.2 30.9-2.4 37.1-3.4 45.5-2.3 54.6zm920.5 273.6-12.6-21.7-10.1-25.9-10.4-29.9-8-33.1-7.9-35-6.8-39.2-5.8-40.2-4.5-42.3-3.6-43.4-2.2-44.4-1.1-45.3v-45.5l2.3-45.3 3.4-44.5 4.5-42.3 5.8-42.1 8-39.4 9.1-37.1 10.2-35.2 12.5-31.8 14.9-28 15.9-23.6 18.4-19.6 19.2-14.5 21.7-10.3 24-4.2 25.2 2.1 27.3 8.2 29.7 15.6 31.9 21.7 34.3 29.8 35.2 38.2 6.9 25.9 4.6 24.6 3.4 24.9 3.4 24.6 1.2 23.9v23.8l-1.2 23.6-1 23.8-3.6 22.7-3.3 22.6-4.6 22.7-4.7 22.8-5.5 22.7-6.9 21.7-6.8 22.5-8 21.7-17.2 44.5-18.2 43.4-20.4 44.2-20.7 45.5-21.7 45.3-20.5 46.5-20.5 47.5-20.6 47.4-23.9 2-24 2.1-23.9 2.1-22.8 3.2zm595.5 569.6-25.2-5.2-22.8-7.2-21.7-9.3-19.4-11.4-17.1-12.4-14.9-14.6-13.7-16.4-12.5-17.5-10.2-19.6-8.1-19.6-8-21.7-5.6-21.7-3.5-23.7-3.3-23.7-1.2-23.8-1.1-24.8 1.1-24.6 2.3-24.9 2.2-25.7 4.6-24.9 4.5-24.6 5.8-24.9 6.8-23.7 8.1-23.7 7.9-22.7 8-21.7 10.3-21.7 9.1-19.6 10.3-18.5 11.4-17.5 11.4-15.6 11.4-14.3h13.6l16.1.9 18.2 2 17.1 3.2 8.1 2.1 7.8 3 8.1 3.1 6.8 3.2 5.6 5 5.8 4.2 4.5 5.1 2.3 6.3h10.3l9.1 12.5 10.3 14.3 10.2 15.6 9.3 16.4 10.1 18.5 9.1 19.6 8 20.7 8.1 21.6 7.8 21.7 6.9 23.8 5.8 22.6 5.7 24.8 4.6 23.8 3.3 23.6 3.5 24.9 1 23.8 1.3 23.6v23.8l-2.3 22.8-3.5 22.5-3.3 20.6-5.8 20.7-7.8 19.6-8.1 17.6-11.4 16.5-11.6 15.6-13.6 13.2-15.9 11.5-18.2 10.2-19.4 8.3-20.7 5.2-23.7 3.2zm-422.1 486.9-12.7-7.3-13.6-6.1-14.9-6.1-17-4.2-17.1-4.2-18.4-3-18.1-3.1-19.5-2.2-37.6-4-37.6-4.1-18.2-2.1-17.1-2.1-15.9-3-16.1-3.2-6.9-12.4-5.5-9.3-3.6-4-4.5-4.2-4.5-4.2-6.9-4v-8.2l-16-5.3-15.9-5.1-14.9-4.1-14.7-3.2-30.8-6.1-33.3-5.2v-12.3l18.4-3.2 19.4-4.2 20.5-5.1 20.5-7.1 44.6-16.6 44.4-20.6 45.7-20.7 44.4-20.7 21.7-8.1 20.4-8.3 20.7-7.2 20.5-6.2 18.1-4.1 17.2-3.1h17.1l14.9 1 13.7 4 12.6 7.4 10.1 10.3 8.1 12.3 6.8 16.6 4.5 19.6 2.3 23.8v26.7l-2.3 32-5.6 37.1-8 40.3-10.4 46.4h-9zm1055 634.5 22.9 1.1 20.4 3.2 21.7 4 22.8 5.2 3.5 9.3 3.3 11.3 8.1 74.4 6.8 91.9 3.5 49.5 2.3 51.5v53.6l-1.3 52.7-1 26.9-2.3 25.7-2.3 25.7-3.5 24.9-3.4 24.8-4.6 24.7-4.6 22.7-6.8 22.8-6.8 20.6-8.1 20.7-7.8 18.5-10.4 17.4-10.2 16.5-11.5 14.5-12.6 13.5-13.6 11.4-20.5-16.6-19.4-17.6-19.4-19.5-18.2-19.6-17.1-20.7-17.1-21.6-17.2-22.8-17-23.6-63.8-96.1-65.1-98.9-32-48.7-34.2-46.4-18.3-21.7-18.2-21.7-18.2-20.6-19.4-18.5-19.4-18.5-20.5-17.6-21.7-15.5-21.7-14.3-22.7-12.5-24-11.3-25.2-10.4-26.2-7.2-38.7-19.6-34.3-22.7-29.7-24.8-26.2-26.8-22.7-27.8-18.3-29.9-14.9-30.9-11.3-32.1-8-33-5.7-33.1-2.4-32.9 1.3-34.1 2.2-33.1 5.8-33.1 6.8-31.8 10.2-30.9 11.5-30 12.4-27.9 14.9-26.8 15.9-24.9 17.2-22.5 18.3-19.8 19.3-16.4 19.3-14.4 20.7-11.3 20.5-7.4 20.4-4h20.7l20.4 5 19.5 8.3 19.4 13.4 19.4 18.6 2.2 16.6 1.1 15.4v33l-2.2 16.5-3.3 16.7-4.8 15.3-6.8 15.6-6.8 14.3-9.1 13.5-11.4 13.4-12.6 11.2-6.8 5.3-6.8 4.2-8.1 5.1-7.9 3.1-9.3 4-9 3.2-10.2 2.1-10.3 2.1-6.8 18.6-3.5 18.5-1.1 18.5 1.1 19.6 3.5 18.6 5.6 19.6 6.8 19.8 9.3 19.6 11.3 19.5 12.6 19.6 13.7 19.6 15.9 20.6 16 19.6 18.3 19.7 18.2 19.6 19.4 19.5 39.9 38.1 41.1 38.3 42.2 37.2 39.8 34.9 38.8 34.2 35.4 31.9 15.9 15.5 14.9 15.5 13.7 14.3 12.6 13.6 21.7-7.2 22.7-8.3 22.9-7.3 21.7-7.2 9.1-28.9 9.1-28.8 9-27.8 10.4-29.1 10.2-27.8 11.5-27.8 12.4-26.9 14.9-27.9zm-6263 197.2-2.3-3.2-2.2-4v-5.2l-1.1-9.3 15.9-8.2 17.1-7.4 17.2-8.2 17-7.1 1.2-7.2 2.3-7.4h9.1l1.2-54.5 2.3-47.6 4.6-39.2 3.3-33.9 2.2-28V50777.8l-1-9.4-2.3-8.2-3.5-7.2-3.3-6.1-5.8-5.3-6.8-6.1-8.1-4.2-9-5.1-11.4-4.2-12.6-4.1-14.8-4.1-78.6-18.6-115.3-25.8v-8.3H56639.9v-8.2h-9l-2.3-9.2-2.2-7.4h-9.2l-6.8-29.9-8.1-26.7-9.1-23.9-10.2-21.5-11.5-18.7-12.5-16.5-13.6-14.5-13.7-12.2-14.9-10.3-14.8-9.3-14.8-7.3-14.8-7.2-15.9-5.3-14.9-4-15.9-4.2-14.9-3-28.5-6.3-27.5-6.1-11.3-4.2-11.4-4-10.3-5.2-7.9-6.2-8-7.3-5.8-9.3-4.6-9.3-3.3-12.4-1.2-13.3 1.2-15.6 2.2-18.5 5.7-20.6-1.1-22.8-2.2-21.5-2.4-19.8-2.2-18.5-3.5-15.4-3.3-15.6-4.5-13.3-4.8-11.3-4.5-11.4-5.6-9.3-5.8-8.2-6.8-8.4-8.1-6.1-7.8-5.1-8.1-5.2-9.1-4.2-9.1-4-10.3-3.2-11.4-2.1-11.3-3-25.3-4.2-27.2-3.1-30.8-4-33.1-6.4-36.6-6.1-39.8-9.2 9.1-28.9 13.6-26.9 20.7-25.8 25-24.8 29.7-22.6 35.4-22.7 37.6-20.7 42.1-20.6 45.7-19.6 47.9-17.5 50.2-17.7 51.3-17.4 53.5-15.4 56-15.6 54.7-15.4 55.8-14.5 111.8-26.8 107.2-25.9 101.7-24.6 91.1-24.9 39.9-12.4 37.8-12.5 33-12.1 28.6-12.5 22.7-12.4 18.2-12.4 12.6-13.3 5.8-13.5 23.9-7.1 24-6.4 22.7-5.1 24-6.2 12.6-12.3 22.7-12.4 33.1-11.4 42.2-10.3 51.4-10.3 58.1-9.2 66.1-9.3 71.9-8.3 77.5-7.3 83.3-6.1 86.7-6.2 91.4-5.2 94.6-5.1 95.7-4.2 98.1-4.2 99.2-3 100.4-2.1 99.2-1 98.1-2.1h281.8l87.9 2.1 83.2 1 77.5 3.2 71.9 1.9 66.1 4.2 59.4 3.2 50.2 5.1 43.4 5.2 33 5 23.9 6.4 17 22.5 18.4 21.7 21.7 18.5 22.8 16.7 25.1 14.3 26.1 12.4 28.5 11.4 29.7 9.3 30.8 8.2 33.1 6.3 33 5 35.4 3.2 35.4 3.2 36.5 1.9 37.6 1.1h37.6l77.6-2.2 78.8-2.9 78.7-4.3 78.6-3 77.6-3.1 75.2-1h36.6l35.4 2.1 34.3 2 34.1 3 3.5 22.8 2.2 22.8 2.3 22.5 2.3 22.7 1 22.8 1.3 22.7 1 22.8v23.6l-5.6 3.2-6.8 3.1-9.3 1.9-9.1 1.1-11.4 1.1h-11.3l-11.4-1.1-12.6-1.1-25-2.9-24-5.3-20.6-5.1-14.7-5.2v-9.3l-28.7-7.2-55.8-12.4-77.5-16.5-95.8-17.6-52.5-8.2-55.9-9.3-57-8.2-59.5-8.2-60.3-7.4-60.6-6.1-60.3-4.2-59.3-4-58.2-2.1h-55.9l-53.6 1-50.3 4.2-46.7 6.1-42.2 9.3-37.5 11.4-32 14.3-26.3 17.7-19.4 21.7-12.4 23.6-4.8 28.9 3.6 32 13.6 37.2 21.7 40.3 33 45.3 48 12.4 41.1 7.2 36.5 7.3 33.2 8.2 14.6 5.1 14.8 6.3 13.7 7.2 13.8 9.3 13.7 10.3 13.7 13.5 13.6 15.3 12.5 18.6 36.6 5.2 27.4 5.1 11.3 2.1 9.3 3.2 6.8 3.1 6.8 5.1 4.6 5.3 3.3 6.1 3.5 8.2 2.2 9.2 2.3 26 2.3 34.9-43.4 5.3-38.6 7.2-9.3 3.1-9.1 3-7.9 4.1-8.1 4.3-8 6.1-6.8 6.1-6.8 8.4-5.6 9.3-7 24.7-3.4 22.7v21.7l1.1 18.5 4.6 17.5 8 16.6 9.1 14.4 11.4 12.4 12.5 11.4 14.9 10.3 17.2 9.3 18.2 8.1 19.4 7.2 20.4 5.3 21.7 6.2 21.7 4.1 46.7 7.2 46.9 6.3 48 4 46.7 4.2 43.4 5.1 39.9 6.3 18.1 3 17.2 4.1 14.9 5.1 13.6 6.3v8.3l35.3 16.4 37.6 15.6 37.7 13.4 40 11.2 41 9.4 41 9.4 43.4 7.1 43.4 6.2 44.4 5.2 45.7 4 45.5 3.2 46.9 2.1 94.6 4.2 95.9 3 95.7 3.1 97.1 3.1 47.7 3 47.9 3.2 48 3.1 46.7 5.1 46.9 6.3 45.6 6.1 45.5 8.2 45.7 10.3 43.4 11.4 43.4 12.4 42.1 14.4 41.1 16.6 2.3 6.2 4.6 6.2 4.4 5.1 4.6 4.2 5.6 4 7 3.2 6.8 3.1 6.8 3 30.8 8.2 30.8 8.4 6.8 2 6.8 3 5.8 3.2 4.6 4 4.5 4.3 4.6 4.1 3.5 5.1 1 6.3 1.3 7.2v7.2l-1.3 9.2-2.3 9.3-3.3 10.3-5.7 11.4-5.8 13.5-9.1 14.3h-103.8l-35.2-28.8-47-26.8-58.1-24.9-66-23.6-76.5-20.6-84.5-19.6-91.1-18.7-99.4-15.5-104.7-14.5-109.6-13.2-115.3-11.4-118.6-9.3-120.9-8.2-124.3-6.3-125.4-6.2-126.7-3-127.7-3.2-125.4-1.1-125.5 1.1-123.3 1-120.9 3.2-116.3 4.2-112.8 5-108.5 6.2-102.5 7.3-95.8 9.3-89.1 9.3-81 10.3-71.7 11.4-63.9 13.2-52.4 13.6-42.4 13.4-62.6 7.2-76.5 8.2-90.1 11.4-99.2 12.4-107.2 15.4-113 17.7-115.1 18.5-117.6 21.7-58 11.3-57.1 11.4-55.9 12.3-55.9 12.4-53.6 13.4-52.5 13.4-50.2 14.5-47.9 14.5-44.4 14.4-42.3 15.5-38.8 15.4-35.3 16.5-31.9 16.6-27.4 17.4-22.8 16.7-19.3 18.5-28.6 9.3-28.5 8.2-28.5 8.2-28.6 7.2-28.4 6.3-28.5 5.1-29.8 3.1-30.8 2.1zm4821.3 119.7v-1.1l2.3-1h5.6l11.6-1.1h46.7l91.3-1.1h157.2l26.3 3.2 27.5 4.2 26.2 6.1 27.3 6.3 26.2 8.3 26.3 9.2 25.1 11.4 25 11.4 25.1 12.2 24 13.5 22.8 14.5 22.8 15.4 21.7 15.6 19.5 16.4 19.3 17.5 17.2 17.7-9.3 9.2-12.4 7.2-14.8 5.1-17.3 4.2-19.3 2.1-21.7 1-22.8-1-25-2.1-27.4-3.1-28.6-4.1-29.7-5.3-30.8-6.1-63.9-14.5-66.1-16.4-67.1-19.6-67.4-18.6-65-19.6-62.7-19.7-58.3-16.5-51.2-15.3-45.6-11.4-36.6-8.3v-8.4l36.6-7.1 35.2-5.1 36.6-3.1 37.6-2.1zm-1104.2 1652 26.3 1.1 25.2.9 25 1 26.3 2.1 35.3 2.1 36.6 2.1 36.5 2.1 36.4 1.9 36.5 3.2 36.4 3.1 36.6 4.1 35.4 6.2-2.3 4.1-2.3 4.2-3.3 3.1-4.6 3-8 6.3-10.3 4h-96.9l-41.2 8.2-41.1 7.4-43.2 7.1-43.4 6.2-87.8 12.4-90.1 11.4-89 10.3-88.8 10.3-86.8 9.3-84.3 10.3-23 1.1h-24l-22.7 1-22.7 2.1-77.7 10.3-77.5 9.3-79.9 9.2-81 8.3-79.8 9.3-81 10.3-81 11.4-79.8 13.4-39.8 7.2-38.9 7.2-39.9 8.2-38.8 9.4-37.6 10.4-38.9 10.3-37.6 11.1-36.5 12.5-36.4 13.5-36.5 14.3-35.4 15.6-35.4 16.4-34.2 17.7-33.1 18.5-33 20.6-31.9 20.7-31 1h-54.5l-24-2.1-22.9-2-20.5-3.2-20.6-5-19.3-5.3-18.4-7.2-18.1-9.2-18.2-9.4-18.4-12.3-18.1-13.5-19.5-15.4-20.5-16.4-20.4-19.8-23-.9-21.6-1-22.7-1.1-21.7-1-10.4-15.6-9.1-12.3-5.8-9.2-3.3-8.4v-8.2l1.1-4.1 2.2-4.1 7-9.4 10.2-13.4 38.8-1.1 30.8-2.1 13.7-1.9 12.5-2.1 11.4-2.1 9.1-3.1 9.1-3 8-4.2 6.9-3.2 6.8-4 11.5-8.2 7.9-10.3 16-21.7 17.1-22.7 11.4-12.4 13.8-12.5 7.9-6.1 9.2-6.2 10.1-6.2 11.5-6.2 70.8-8.2 69.4-8.2 68.6-7.4 68.4-8.1 67.3-7.2 66.2-7.4 66.1-7.1 67.4-6.1 66.1-6.4 67.1-6.1 67.4-5.1 67.4-5.2 68.4-4.2 69.5-3 71.8-3.2 71.9-1H59903.1l36.6-3.1 35.4-4 36.5-3.2 35.4-3.2h93.5l51.3-2.9 51.3-1.1 51.4-1.1 52.5 1.1 51.3 2.1 51.1 3 51.5 3.2 51.2 4.1zm3110.5 119.7-14.8-3.2-13.7-4-13.8-4.2-13.7-6.1-27.2-13.5-25.2-15.5-25-16.5-25.2-16.4-24-16.6-26.2-14.4-29.6-4.2-30.8-2.1-30.7-1.9-32.1-1.1-64.9-2-65-2.1-32.1-1.1-33-2.1-31.9-3-30.7-4.2-30.8-5.1-30.8-6.2-28.5-8.3-28.6-9.3v-8.1l-52.4-18.6-52.5-17.6-54.7-16.5-56-16.4-57.1-15.6-58-15.4-58.3-15.6-60.3-13.5-60.5-13.3-61.7-13.4-61.6-12.4-62.7-11.4-62.7-11.2-63.8-11.4-62.8-10.3-63.9-9.3-63.8-8.4-62.8-9.2-63.9-7.2-62.7-7.2-62.7-7.3-61.6-6.2-61.6-5-61.5-5.3-60.5-4.2-59.3-4-58.3-3.2-57.1-2.1-55.7-1.9-54.8-2.1-53.5-1h-52.5l-12.6-3.2-12.6-3.1-10.1-4-10.4-4.2-9.1-5.1-8-5.3-8-6.1-7.9-6.3-29.7-26.8-35.4-31.9-125.5-19.7-123.1-17.5-61.5-7.2-60.6-8.3-59.3-6.2-59.2-6.1-59.4-5.2-58.2-5.1-58.1-4.2-57-3.2-58.3-1.9-55.8-1h-57l-56 1-55.8 1.9-54.8 3.2-55.9 4.2-54.8 5.1-53.6 6.3-54.7 8.2-53.5 9.3-54.7 11.3-53.8 12.4-53.5 13.4-52.5 15.5-53.6 17.5-53.6 18.6-52.5 20.6-52.4 21.7-53.6 23.8-77.7 11.4-74.1 12.2-71.7 13.5-68.4 14.5-67.4 15.4-63.9 16.4-63.8 17.7-62.8 18.5-61.6 19.6-62.8 20.6-61.6 21.7-62.6 23.7-64 23.7-66.1 26-67.2 27.8-69.6 27.8h-9.1l-8.1-1-8.1-2.2-7.8-2.9-8.1-4.2-6.8-4.2-4.5-6.1-3.5-6.1h-9.1l-10.2-12.5-9.3-11.4-9-8.2-10.2-7.2-10.3-7.3-11.4-6.1-13.8-6.2-15.9-7.3-1.1-7.2-2.2-7.2 40.9-12.4 36.6-14.5 33-14.3 30.8-15.6 59.3-30.9 57-30 29.8-15.4 31.8-13.4 34.3-13.5 37.6-11.4 19.5-6.1 21.7-5.1 21.7-4.2 23.9-5 23.8-4.3 26.2-3.1 27.5-3 28.5-3.1 13.7-18.6 14.8-17.6 16-17.5 17.1-16.4 18.1-15.6 18.4-15.4 20.5-15.6 19.4-14.4 83.3-54.7 81-54.7 18.2-13.3 17.1-13.5 17.2-14.4 15.9-14.5 13.6-15.5 13.7-15.5 11.5-15.5 9.1-16.4 7.9-17.5 5.8-17.6 3.4-18.7 2.4-19.6-1.3-20.6-3.3-20.7-7-22.5-9.1-23.8h-9.1v-8.2h-9.1v-8.2l-14.9-7.4-15.9-6.1-17.1-5.2-18.2-4-18.4-3.2-19.2-2.1-19.4-1.1-20.7-.8h-21.7l-20.5.8-22.7 1.1-21.7 2.1-44.4 6.1-45.7 8.4-45.7 9.3-45.6 11.3-43.4 11.4-42.1 12.3-41.1 13.5-37.7 12.3-34 12.4-30.8 11.2-1.3 10.4-2.3 9.4-1 10.2-2.5 10.3-38.7 15.6-38.8 14.5-38.8 14.3-38.6 13.5-38.9 12.4-38.8 12.3-38.7 11.3-38.8 11.4-78.8 20.7-79.7 19.6-81 19.5-82.2 18.5-3.3-10.2-2.3-7.2V52245l18.2-3 18.2-4.2 17.1-5.1 18.4-6.2 36.4-13.5 36.6-16.5 72.9-37 76.4-40.3 38.9-19.6 38.6-18.7 19.4-8.2 20.7-8.2 20.4-7.2 20.5-7.3 20.7-6.2 20.4-6.1 20.5-4.2 21.7-4.2 20.6-3 21.5-2 23-1.1 21.7 1.1 1-7.2 2.3-6.3 22.9-10.4 19.4-9.3 15.9-10.2 12.7-10.4 11.3-11.3 7.9-11.2 6.9-12.4 4.6-12.5 2.3-14.5 2.2-15.4 1.1-15.6v-17.5l-1.1-39.1-1.2-44.5-3.3-15.4-4.6-13.5-6.9-12.4-5.7-10.3-8-10.3-8-8.2-9.1-7.2-9.1-6.2-10.1-6.2-11.6-4-11.4-4.3-11.3-2.1-12.6-2-12.7-2-13.6-1h-41.1l-28.3 2.1-28.7 1.9-29.6 3.1-29.8 2.2-28.5 1h-27.2l-26.3-1-1.2-10.4v-12.4l1.2-13.5 1.3-15.4 4.5-36.2 4.5-39.1 5.6-42.4 3.5-43.2 1.1-21.6v-41.4l-2.3-19.6-3.3-18.5-3.5-16.6-6.8-16.4-6.9-13.5-9-12.5-11.4-10.2-13.9-8.3-15.9-5.1-18.2-2.1h-20.6l-22.8 3.2-26.1 7.2-28.6 10.3-33.1 14.5-35.3 17.5-38.8 22.7-6.8 7.2-5.8 9.3-6.8 8.2-5.7 8.2h-9v8.4l-10.3 5.1-11.4 4.2-12.7 4-13.5 2.1-27.5 4.2-28.5 4-13.7 2.2-12.6 3-12.4 4.1-11.6 5.3-10.1 6.1-9.3 7.2-3.3 4.1-3.4 5.3-3.4 5.1-2.3 5.2h-9.1l-5.8 12.2-10.3 12.5-12.4 12.4-14.9 12.4-18.1 11.4-20.7 11.2-21.7 10.3-23.9 10.4-25.1 9.2-26.2 9.4-27.5 8.3-27.3 7.1-28.4 6.2-27.5 5.2-28.6 5-27.2 3.2-26.3 2.1-25 1.1-23.9-1.1-23-2.1-20.4-3.2-19.5-5-15.9-6.1-12.6-8.4-11.3-10.3-6.9-12.3-3.5-13.4v-16.5l3.5-17.7 7.9-20.6 13.8-22.8 17-24.6 12.6-9.2 13.6-8.3 13.8-7.3 13.7-7.2 14.8-6.1 13.7-6.4 14.9-5 15.9-5.2 30.8-9.4 32-8.1 31.9-7.2 33-7.4 32-6.1 31.9-7.1 30.8-7.4 30.7-8.2 29.8-10.4 27.2-11.3 13.9-6.1 12.4-6.2 12.6-8.3 11.3-7.2v-8.3l23-8.2 21.7-6.3 21.5-5 21.7-4.3 20.6-2.9 21.7-2.2 20.5-1 19.4-1h78.7l72.9 1h18.3l18.3-1 17-1.1 17.1-2.1 17.1-2.9 17.2-3.2 17.2-5.3 16.9-5.1 17.1-7.1 16-8.4 17.2-9.2 16-11.5 15.9-12.2 17.2-14.5 15.9-16.4 15.9-18.6 23-11.4 27.2-10.3 30.8-11.4 35.3-10.2 37.7-10.4 41.1-10.3 44.4-10.3 46.9-9.3 49-9.2 51.4-9.4 52.3-9.2 53.7-8.4 111.8-15.4 115.1-14.5 114-13.3 113-10.4 109.6-8.4 102.7-7.1 47.7-2.1 45.7-2 43.3-1h76.5l34.1 1 29.8 1 25 2h64l62.6-2 63.9-3.1 63.8-4.1 64-4 62.6-3.2 63.9-3.2 63.9-3.1 64-.9 62.6.9 32.1 1 31.8 1.1 30.8 2.1 31.9 3.2 31.9 2.9 30.8 4.3 32 5.1 30.8 6.2 30.8 6.1 32 7.3 30.8 9.3 30.8 9.3 5.5 12.4 6.9 13.3 60.5 1.1 59.3 3.1 59.3 5.1 58.2 6.3 59.4 7.2 58.1 8.2 59.3 9.3 59.3 10.2 1.2 17.7v14.4l-2.3 18.5-3.5 28.9h-20.5l-22.9-.9-21.4-2.1-24.1-3.1-49.1-6.2-50.2-8.3-52.3-7.2-52.5-8.3-53.7-6.1-52.4-5.2-25.1-1.1-25.2-1h-25l-24 2.1-24 2.1-22.7 3.1-21.7 5.1-21.7 6.1-20.4 7.4-19.5 9.2-17.1 11.4-17.2 12.4-15.9 14.4-13.6 16.6-12.6 18.6-11.4 20.6 1.1 47.4 6.8 41.3 12.6 37.1 19.5 32 23.9 28.9 28.5 23.8 34.1 21.7 37.8 17.4 41 14.5 45.6 11.4 47.9 10.3 50.2 7.2 53.6 5.1 54.7 4.2 57 2 57.1 2.2 117.6.9 117.3 1 58.2 1 57.1 2.1 55.8 2.1 53.7 4.1 51.2 5.2 49.2 8.2 45.5 9.3 43.4 11.3 38.8 14.6 34.1 17.5 30.8 20.6 26.3 24.7 27.4 7.3 30.8 8.3 36.6 8.2 39.8 8.2 90.1 16.6 101.5 18.6 110.8 20.6 115 21.7 119.8 23.6 118.7 24.9 59.3 13.4 58 14.4 56 14.5 55.8 15.4 52.5 16.6 51.5 16.5 47.9 16.4 44.4 18.7 42.2 18.5 37.6 19.6 34.2 20.7 29.6 20.6 24 21.7 19.4 22.6 14.9 23.8 8 24.8-17.1 13.3-24 9.3-29.8 7.4-35.2 5-40 3.2h-45.6l-49-2.1-53.7-3.2-57-5.1-60.4-7.2-62.8-8.3-64.9-9.3-67.3-11.4-68.4-11.2-69.7-12.4-70.6-13.5-141.5-27.8-139.1-28.8-134.7-28.1-126.5-25.7-114.1-23.7-99.3-19.7-43.2-7.1-38.8-6.3-32.1-5.1-27.2-2.1-61.6-10.3-61.6-12.4-61.6-12.2-61.5-12.5-62.9-12.4-62.7-13.4-62.6-12.3-61.6-11.4-62.8-11.4-62.9-9.3-62.6-8.1-62.7-6.4-30.9-2.1-31.8-1.9-30.8-1h-61.7l-30.8 1-30.8 1.1-30.8 2.9-11.4 6.4-11.3 8.1-9.2 8.3-9.1 9.3-9.2 10.3-6.8 11.4-6.9 11.3-5.6 12.4-5.7 13.3-4.6 13.5-3.5 13.5-3.3 14.3-1.2 14.5-2.3 14.4v29l1.2 15.4 1.1 14.5 2.3 14.4 2.2 14.5 3.5 14.4 4.6 13.5 4.5 13.4 5.8 13.3 6.8 12.4 6.9 12.4 6.8 11.4 8 10.3 9.1 9.3 9.1 9.3 10.4 8.2 10.1 6.3 114 13.3 115.3 11.4 117.6 10.3 117.3 8.2 118.7 9.3 119.8 9.2 119.6 9.5 119.8 11.2 59.4 6.3 59.3 6.1 59.3 8.2 58.2 7.4 58.1 9.2 59.3 9.3 57 10.4 58.3 11.3 55.8 12.4 57 13.3 56 14.5 54.7 15.4 54.8 16.7 54.8 18.5 52.5 18.5 52.2 21.7 51.4 5.1 81 9.3 106 12.4 125.5 16.6 69.6 9.3 71.9 10.3 74.2 11.4 76.4 12.2 77.6 13.5 77.4 14.5 78.7 15.4 77.7 16.5 75.2 17.6 74.2 17.5 71.7 19.6 67.4 20.6 65 21.7 59.3 22.8 54.8 23.6 49 24.8 42.2 25.7 35.5 27 27.2 28.8 19.5 28.9 10.3 31 1 32-9.1 33.1-20.6 33.9-19.2 1-19.5 1.1-20.6 1-19.3 1.1zm-1812.4 388 21.7 6.1 22.7 5.3 21.7 6.1 22.9 6.1 33.1 2.1 33 4.2 30.8 5 30.8 6.4 29.7 7.2 30.8 8.1 30.9 9.3 33 9.3v9.3l-63.9 12.4-65 11.4-66.1 9.3-66.2 8.1-67.3 6.4-68.4 4-68.6 3.1-69.5 2.1-69.6 1.1h-141.3l-70.9-2.1-142.6-4.2-143.6-4-144.8-5.3-143.8-3-71.9-1H60584.2l-71.9 1.9-70.7 3.2-70.7 4.2-70.8 5.1-69.5 7.3-69.6 8.2-68.4 11.4-68.6 12.2-67.1 14.5-36.6 18.5-46.7 22.8-54.8 23.8-61.5 25.7-32 12.4-33.1 12.5-34.1 12.3-34.3 11.3-35.4 11.3-34.2 10.4-35.4 9.3-34 7.3-34.3 7.2-34.4 6.1-31.8 4.2-32 2.1-30.8.9-28.5-.9-27.3-4.2-25.1-5.3-24.1-8.2-20.4-10.3-18.2-13.3-16.1-15.6-12.4-18.5-10.4-22.7-6.8-24.7-2.2-28.9 13.6-10.3 14.9-9.5 17.1-9.2 18.2-9.3 19.4-8.2 20.5-8.2 21.7-8.2 22.8-7.4 47.9-13.3 51.4-12.4 52.4-11.4 53.6-10.3 54.8-8.2 53.5-8.2 52.5-6.3 51.4-5.1 47.9-5.3 44.5-2.9 41.1-3.2 35.3-2.1 59.3-12.4 59.3-11.4 60.4-10.3 60.5-10.3 60.3-10.3 61.8-8.3 61.6-8.2 61.5-7.1 62.6-7.2 62.9-5.3 62.8-6.1 62.6-4.2 62.8-4.2 62.6-4 63.9-2.2 62.8-3 63.8-1.1 62.8-.9 63.9-1.1h62.8l62.6 1.1 63.8.9 62.9 1.1 62.6 2 125.6 6.3 123.1 8.3 123.2 9.2 120.9 11.4zm1024.2 617 37.6 2.1 36.6 2.1 37.6 3 37.6 3.1h18.4l10.1 1 10.3 1.1v8.2l-84.3 1.1-85.5 1h-43.4l-43.4-1-43.4-2.2-43.4-2.1-42.1-4-43.4-5.2-42.2-6.1-40.9-7.2-41.1-9.4-41.1-11.2-19.5-6.3-19.3-7.2-19.3-7.2-19.4-7.3 1.1-19.6 3.4-16.5 4.6-14.5 8-11.4 9.1-9.2 10.1-7.2 12.7-5.1 13.6-3.1 16.1-1.1h15.9l17.2 1.1 18.2 3.1 18.1 4 20.7 6.3 19.4 6.1 20.5 7.2 42.1 15.6 41.2 17.5 41 18.6 38.7 17.4 35.4 16.6 30.7 13.4 13.8 5.2 12.5 4.2 10.3 3 9.1 2.1zm-2185.2 368.3-18.4-2-18.2-2.1-14.9-3-13.6-3.1-11.4-4.3-11.4-4-9.3-5.2-7.8-5-6.8-7.5-6.9-7.1-5.7-9.3-5.8-9.3-10.2-24.8-10.3-28.8 11.4-8.3 11.3-7.2 11.6-7.3 12.5-6.1 13.8-6.1 12.4-5.3 14.8-4 13.7-4.2 29.7-7.2 30.8-5.2 31.8-4.1 32.1-3.1 32-2.1 33.1-1 31.8-1.1h93.5l55.9-2.1 3.4 14.5 2.3 12.5 1.3 12.4-1.3 12.2-2.3 11.4-3.4 10.3-4.6 9.3-6.8 9.2-6.9 9.5-8 8.2-10.1 8.3-9.1 7.1-11.6 6.3-11.3 6.1-12.6 6.2-13.7 5.2-27.3 9.3-28.4 8.2-29.8 7.1-30.8 5.3-29.5 4.2-28.6 3-27.4 3.1-25 1z"></path>',12),D0=[N0];function k0(e,t){return P2(),N3("svg",A0,D0)}const o9={render:k0};const l9=(e,t)=>{const n=e.__vccOpts||e;for(const[s,i]of t)n[s]=i;return n},a9=e=>(ls("data-v-ca0bd6f7"),e=e(),as(),e),R0={class:"ib-banner mb-5"},O0={class:"h-100"},M0={class:"container h-100"},P0={class:"d-flex flex-column h-100 justify-content-between"},z0={class:"ib-banner-content"},L0={class:"row gap-5 gap-md-0 justify-content-center align-items-center"},F0={class:"col-4 col-md-2 py-5"},B0={class:"ib-banner-title-logo"},V0={class:"stamp animation-rotated"},$0=a9(()=>J("div",{class:"col-12 col-md-10"},[J("div",{class:"ib-banner-title-tagline"},[J("h1",{class:"text-uppercase text-center"},"aktualisasi kader ikatan"),J("span",{class:"d-block text-center text-capitalize"}," membumikan semangat transformasi berkemajuan untuk kepentingan umat dan bangsa ")])],-1)),U0=a9(()=>J("div",{class:"ib-skip-banner"},[J("i",{class:"fas fa-angle-up"})],-1)),j0={__name:"Home-Banner",setup(e){return(t,n)=>(P2(),N3("div",R0,[J("div",O0,[J("div",M0,[J("div",P0,[J("div",z0,[J("div",L0,[J("div",F0,[J("div",B0,[_1(g2(o9),{class:"img-fluid pt-2"}),J("div",V0,[_1(g2(y0),{class:"curved-alkhawarizmi",style:{opacity:"0.8"}}),_1(g2(T0),{class:"curved-ftutm rotated-reverse",style:{opacity:"0.5"}})])])]),$0])]),U0])])])]))}},H0=l9(j0,[["__scopeId","data-v-ca0bd6f7"]]);const K0=e=>(ls("data-v-fc44d254"),e=e(),as(),e),q0={class:"ib-footer"},G0={class:"container"},W0={class:"row gap-4"},Q0={class:"col-12 col-lg-auto"},X0={class:"d-flex flex-column gap-4"},Y0={class:"col"},J0={class:"d-flex flex-column gap-2"},Z0={class:"col"},tc={class:"d-flex gap-2"},ec=l3('<div class="col" data-v-fc44d254><p class="text-capitalize text-nowrap lh-sm mb-1" data-v-fc44d254><span class="d-block fw-bold" data-v-fc44d254> pimpinan komisariat IMM al-khawarizmi</span><span class="d-block fw-bold" data-v-fc44d254> fakultas teknik universitas trunojoyo madura</span></p><p class="text-capitalize text-nowrap lh-sm mb-0" data-v-fc44d254><span class="d-block" data-v-fc44d254> Telang Indah Persada Gg. VI Timur, Telang </span><span class="d-block" data-v-fc44d254> Kec. Kamal, Kab. Bangkalan. Kode Pos 69162</span></p></div>',1),nc=l3('<div class="col" data-v-fc44d254><ul class="list-unstyled d-flex flex-row justify-content-center gap-4 text-center mb-0" data-v-fc44d254><li class="" data-v-fc44d254><a target="_blank" href="https://instagram.com/imm.alkhawarizmi" class="" data-v-fc44d254><i class="fa-brands fa-instagram fa-2x" data-v-fc44d254></i></a></li><li class="" data-v-fc44d254><a target="_blank" href="https://wa.me/62895396346180" class="" data-v-fc44d254><i class="fa-brands fa-whatsapp fa-2x" data-v-fc44d254></i></a></li><li class="" data-v-fc44d254><a target="_blank" href="mailto:alkhawarizmiutm@gmail.com" class="" data-v-fc44d254><i class="fa-solid fa-envelope fa-2x" data-v-fc44d254></i></a></li><li class="" data-v-fc44d254><a target="_blank" href="https://github.com/immalkhawarizmi" class="" data-v-fc44d254><i class="fa-brands fa-github fa-2x" data-v-fc44d254></i></a></li></ul></div>',1),sc=l3('<div class="col-12 col-md" data-v-fc44d254><div class="d-flex justify-content-between gap-5" data-v-fc44d254><ul class="col list-unstyled text-capitalize mb-0" data-v-fc44d254><li data-v-fc44d254><a href="#" data-v-fc44d254>beranda</a></li><li data-v-fc44d254><a href="#" data-v-fc44d254>kegiatan</a></li><li data-v-fc44d254><a href="#" data-v-fc44d254>pimpinan</a></li><li data-v-fc44d254><a href="#" data-v-fc44d254>narahubung</a></li><li data-v-fc44d254><a href="#" data-v-fc44d254>informasi</a></li></ul><ul class="col list-unstyled text-capitalize mb-0" data-v-fc44d254><li data-v-fc44d254><a href="#" data-v-fc44d254>berita</a></li><li data-v-fc44d254><a href="#" data-v-fc44d254>artikel</a></li><li data-v-fc44d254><a href="#" data-v-fc44d254>opini</a></li><li data-v-fc44d254><a href="#" data-v-fc44d254>e-library</a></li></ul></div></div>',1),ic={class:"col"},rc={class:"d-flex flex-column gap-2 shadow rounded p-3 footer-panel"},oc=K0(()=>J("div",{class:"text-center border-bottom border-light"},[J("h5",null,"PANEL")],-1)),lc=D6("masuk"),ac=l3('<div class="bg-black text-light text-center fs-sm p-1" data-v-fc44d254><div class="d-flex flex-column flex-md-row justify-content-center small copyright" data-v-fc44d254><span data-v-fc44d254> @2022 Copyright PK Al-Khawarizmi </span><span class="d-none d-md-inline mx-2" data-v-fc44d254>|</span><span data-v-fc44d254> Developed By <a class="text-light text-decoration-underline" target="_blank" href="https://github.com/immalkhawarizmi" data-v-fc44d254> Al-Khawarizmi.dev </a></span><span class="d-none d-md-inline mx-2" data-v-fc44d254>|</span><span data-v-fc44d254> Version 1.0.0 </span></div></div>',1),cc={__name:"Footer",setup(e){return(t,n)=>{const s=ws("router-link");return P2(),N3("div",null,[J("div",q0,[J("div",G0,[J("div",W0,[J("div",Q0,[J("div",X0,[J("div",Y0,[J("div",J0,[J("div",Z0,[J("div",tc,[_1(g2(r9),{class:"col-auto",height:"85px",width:"100%"}),_1(g2(o9),{class:"col-auto",height:"85px",width:"100%"})])]),ec])]),nc])]),sc,J("div",ic,[J("div",rc,[oc,J("div",null,[_1(s,{to:{name:"panel"},class:"btn btn-primary btn-sm text-uppercase"},{default:C6(()=>[lc]),_:1})])])])])])]),ac])}}},uc=l9(cc,[["__scopeId","data-v-fc44d254"]]),hc={class:"ib-about mb-5"},fc={class:"container"},dc={class:"row justify-content-between gap-3"},pc=J("div",{class:"col-12 col-md"},[J("h3",{class:"text-uppercase mb-3"},"ikatan mahasiswa muhammadiyah"),J("p",null,[J("span",{class:"text-capitalize fw-bold"},"ikatan mahasiswa muhammadiyah (IMM)"),D6(" adalah organisasi gerakan mahasiswa islam sekaligus organisasi otonom (ortom) muhammadiyah yang lahir di Yogyakarta pada 14 Maret 1964 M atau 29 Syawal 1384 H. IMM bertujuan untuk mengusahakan terbentuknya akademisi Islam yang berakhlak mulia dalam rangka mencapai tujuan Muhammadiyah, yakni menegakkan dan menjunjung tinggi Agama Islam sehingga terwujud masyarakat Islam yang sebenar-benarnya. IMM memiliki Tri Kompetensi Dasar berupa Religiusitas, Intelektualitas, dan Humanitas yang menjadi kompetensi yang wajib terinternalisasi dalam diri setiap kader IMM. Dalam pengaktualisasian nilai-nilai Tri Kompetensi Dasar, IMM memiliki Trilogi berupa Keagamaan, Kemahasiswaan, dan Kemasyarakatan. ")])],-1),mc={__name:"Home",setup(e){return(t,n)=>(P2(),N3(w2,null,[_1(H0),J("div",hc,[J("div",fc,[J("div",dc,[pc,_1(g2(r9),{class:"col-2 d-none d-md-block",height:"100%"})])])]),_1(uc)],64))}};/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const c9=function(e){const t=[];let n=0;for(let s=0;s<e.length;s++){let i=e.charCodeAt(s);i<128?t[n++]=i:i<2048?(t[n++]=i>>6|192,t[n++]=i&63|128):(i&64512)===55296&&s+1<e.length&&(e.charCodeAt(s+1)&64512)===56320?(i=65536+((i&1023)<<10)+(e.charCodeAt(++s)&1023),t[n++]=i>>18|240,t[n++]=i>>12&63|128,t[n++]=i>>6&63|128,t[n++]=i&63|128):(t[n++]=i>>12|224,t[n++]=i>>6&63|128,t[n++]=i&63|128)}return t},gc=function(e){const t=[];let n=0,s=0;for(;n<e.length;){const i=e[n++];if(i<128)t[s++]=String.fromCharCode(i);else if(i>191&&i<224){const r=e[n++];t[s++]=String.fromCharCode((i&31)<<6|r&63)}else if(i>239&&i<365){const r=e[n++],o=e[n++],l=e[n++],a=((i&7)<<18|(r&63)<<12|(o&63)<<6|l&63)-65536;t[s++]=String.fromCharCode(55296+(a>>10)),t[s++]=String.fromCharCode(56320+(a&1023))}else{const r=e[n++],o=e[n++];t[s++]=String.fromCharCode((i&15)<<12|(r&63)<<6|o&63)}}return t.join("")},vc={byteToCharMap_:null,charToByteMap_:null,byteToCharMapWebSafe_:null,charToByteMapWebSafe_:null,ENCODED_VALS_BASE:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",get ENCODED_VALS(){return this.ENCODED_VALS_BASE+"+/="},get ENCODED_VALS_WEBSAFE(){return this.ENCODED_VALS_BASE+"-_."},HAS_NATIVE_SUPPORT:typeof atob=="function",encodeByteArray(e,t){if(!Array.isArray(e))throw Error("encodeByteArray takes an array as a parameter");this.init_();const n=t?this.byteToCharMapWebSafe_:this.byteToCharMap_,s=[];for(let i=0;i<e.length;i+=3){const r=e[i],o=i+1<e.length,l=o?e[i+1]:0,a=i+2<e.length,c=a?e[i+2]:0,u=r>>2,h=(r&3)<<4|l>>4;let f=(l&15)<<2|c>>6,m=c&63;a||(m=64,o||(f=64)),s.push(n[u],n[h],n[f],n[m])}return s.join("")},encodeString(e,t){return this.HAS_NATIVE_SUPPORT&&!t?btoa(e):this.encodeByteArray(c9(e),t)},decodeString(e,t){return this.HAS_NATIVE_SUPPORT&&!t?atob(e):gc(this.decodeStringToByteArray(e,t))},decodeStringToByteArray(e,t){this.init_();const n=t?this.charToByteMapWebSafe_:this.charToByteMap_,s=[];for(let i=0;i<e.length;){const r=n[e.charAt(i++)],l=i<e.length?n[e.charAt(i)]:0;++i;const c=i<e.length?n[e.charAt(i)]:64;++i;const h=i<e.length?n[e.charAt(i)]:64;if(++i,r==null||l==null||c==null||h==null)throw Error();const f=r<<2|l>>4;if(s.push(f),c!==64){const m=l<<4&240|c>>2;if(s.push(m),h!==64){const v=c<<6&192|h;s.push(v)}}}return s},init_(){if(!this.byteToCharMap_){this.byteToCharMap_={},this.charToByteMap_={},this.byteToCharMapWebSafe_={},this.charToByteMapWebSafe_={};for(let e=0;e<this.ENCODED_VALS.length;e++)this.byteToCharMap_[e]=this.ENCODED_VALS.charAt(e),this.charToByteMap_[this.byteToCharMap_[e]]=e,this.byteToCharMapWebSafe_[e]=this.ENCODED_VALS_WEBSAFE.charAt(e),this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[e]]=e,e>=this.ENCODED_VALS_BASE.length&&(this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(e)]=e,this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(e)]=e)}}},yc=function(e){const t=c9(e);return vc.encodeByteArray(t,!0)},u9=function(e){return yc(e).replace(/\./g,"")};/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class wc{constructor(){this.reject=()=>{},this.resolve=()=>{},this.promise=new Promise((t,n)=>{this.resolve=t,this.reject=n})}wrapCallback(t){return(n,s)=>{n?this.reject(n):this.resolve(s),typeof t=="function"&&(this.promise.catch(()=>{}),t.length===1?t(n):t(n,s))}}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function E4(){return typeof navigator<"u"&&typeof navigator.userAgent=="string"?navigator.userAgent:""}function Ec(){return typeof window<"u"&&!!(window.cordova||window.phonegap||window.PhoneGap)&&/ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(E4())}function bc(){const e=typeof chrome=="object"?chrome.runtime:typeof browser=="object"?browser.runtime:void 0;return typeof e=="object"&&e.id!==void 0}function _c(){return typeof navigator=="object"&&navigator.product==="ReactNative"}function Tc(){return E4().indexOf("Electron/")>=0}function xc(){const e=E4();return e.indexOf("MSIE ")>=0||e.indexOf("Trident/")>=0}function Cc(){return E4().indexOf("MSAppHost/")>=0}function Ic(){return typeof indexedDB=="object"}function Sc(){return new Promise((e,t)=>{try{let n=!0;const s="validate-browser-context-for-indexeddb-analytics-module",i=self.indexedDB.open(s);i.onsuccess=()=>{i.result.close(),n||self.indexedDB.deleteDatabase(s),e(!0)},i.onupgradeneeded=()=>{n=!1},i.onerror=()=>{var r;t(((r=i.error)===null||r===void 0?void 0:r.message)||"")}}catch(n){t(n)}})}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Ac="FirebaseError";class b4 extends Error{constructor(t,n,s){super(n),this.code=t,this.customData=s,this.name=Ac,Object.setPrototypeOf(this,b4.prototype),Error.captureStackTrace&&Error.captureStackTrace(this,h9.prototype.create)}}class h9{constructor(t,n,s){this.service=t,this.serviceName=n,this.errors=s}create(t,...n){const s=n[0]||{},i=`${this.service}/${t}`,r=this.errors[t],o=r?Nc(r,s):"Error",l=`${this.serviceName}: ${o} (${i}).`;return new b4(i,l,s)}}function Nc(e,t){return e.replace(Dc,(n,s)=>{const i=t[s];return i!=null?String(i):`<${s}?>`})}const Dc=/\{\$([^}]+)}/g;function z5(e,t){if(e===t)return!0;const n=Object.keys(e),s=Object.keys(t);for(const i of n){if(!s.includes(i))return!1;const r=e[i],o=t[i];if(S7(r)&&S7(o)){if(!z5(r,o))return!1}else if(r!==o)return!1}for(const i of s)if(!n.includes(i))return!1;return!0}function S7(e){return e!==null&&typeof e=="object"}/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function f9(e){return e&&e._delegate?e._delegate:e}class qt{constructor(t,n,s){this.name=t,this.instanceFactory=n,this.type=s,this.multipleInstances=!1,this.serviceProps={},this.instantiationMode="LAZY",this.onInstanceCreated=null}setInstantiationMode(t){return this.instantiationMode=t,this}setMultipleInstances(t){return this.multipleInstances=t,this}setServiceProps(t){return this.serviceProps=t,this}setInstanceCreatedCallback(t){return this.onInstanceCreated=t,this}}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const d3="[DEFAULT]";/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class kc{constructor(t,n){this.name=t,this.container=n,this.component=null,this.instances=new Map,this.instancesDeferred=new Map,this.instancesOptions=new Map,this.onInitCallbacks=new Map}get(t){const n=this.normalizeInstanceIdentifier(t);if(!this.instancesDeferred.has(n)){const s=new wc;if(this.instancesDeferred.set(n,s),this.isInitialized(n)||this.shouldAutoInitialize())try{const i=this.getOrInitializeService({instanceIdentifier:n});i&&s.resolve(i)}catch{}}return this.instancesDeferred.get(n).promise}getImmediate(t){var n;const s=this.normalizeInstanceIdentifier(t==null?void 0:t.identifier),i=(n=t==null?void 0:t.optional)!==null&&n!==void 0?n:!1;if(this.isInitialized(s)||this.shouldAutoInitialize())try{return this.getOrInitializeService({instanceIdentifier:s})}catch(r){if(i)return null;throw r}else{if(i)return null;throw Error(`Service ${this.name} is not available`)}}getComponent(){return this.component}setComponent(t){if(t.name!==this.name)throw Error(`Mismatching Component ${t.name} for Provider ${this.name}.`);if(this.component)throw Error(`Component for ${this.name} has already been provided`);if(this.component=t,!!this.shouldAutoInitialize()){if(Oc(t))try{this.getOrInitializeService({instanceIdentifier:d3})}catch{}for(const[n,s]of this.instancesDeferred.entries()){const i=this.normalizeInstanceIdentifier(n);try{const r=this.getOrInitializeService({instanceIdentifier:i});s.resolve(r)}catch{}}}}clearInstance(t=d3){this.instancesDeferred.delete(t),this.instancesOptions.delete(t),this.instances.delete(t)}async delete(){const t=Array.from(this.instances.values());await Promise.all([...t.filter(n=>"INTERNAL"in n).map(n=>n.INTERNAL.delete()),...t.filter(n=>"_delete"in n).map(n=>n._delete())])}isComponentSet(){return this.component!=null}isInitialized(t=d3){return this.instances.has(t)}getOptions(t=d3){return this.instancesOptions.get(t)||{}}initialize(t={}){const{options:n={}}=t,s=this.normalizeInstanceIdentifier(t.instanceIdentifier);if(this.isInitialized(s))throw Error(`${this.name}(${s}) has already been initialized`);if(!this.isComponentSet())throw Error(`Component ${this.name} has not been registered yet`);const i=this.getOrInitializeService({instanceIdentifier:s,options:n});for(const[r,o]of this.instancesDeferred.entries()){const l=this.normalizeInstanceIdentifier(r);s===l&&o.resolve(i)}return i}onInit(t,n){var s;const i=this.normalizeInstanceIdentifier(n),r=(s=this.onInitCallbacks.get(i))!==null&&s!==void 0?s:new Set;r.add(t),this.onInitCallbacks.set(i,r);const o=this.instances.get(i);return o&&t(o,i),()=>{r.delete(t)}}invokeOnInitCallbacks(t,n){const s=this.onInitCallbacks.get(n);if(!!s)for(const i of s)try{i(t,n)}catch{}}getOrInitializeService({instanceIdentifier:t,options:n={}}){let s=this.instances.get(t);if(!s&&this.component&&(s=this.component.instanceFactory(this.container,{instanceIdentifier:Rc(t),options:n}),this.instances.set(t,s),this.instancesOptions.set(t,n),this.invokeOnInitCallbacks(s,t),this.component.onInstanceCreated))try{this.component.onInstanceCreated(this.container,t,s)}catch{}return s||null}normalizeInstanceIdentifier(t=d3){return this.component?this.component.multipleInstances?t:d3:t}shouldAutoInitialize(){return!!this.component&&this.component.instantiationMode!=="EXPLICIT"}}function Rc(e){return e===d3?void 0:e}function Oc(e){return e.instantiationMode==="EAGER"}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Mc{constructor(t){this.name=t,this.providers=new Map}addComponent(t){const n=this.getProvider(t.name);if(n.isComponentSet())throw new Error(`Component ${t.name} has already been registered with ${this.name}`);n.setComponent(t)}addOrOverwriteComponent(t){this.getProvider(t.name).isComponentSet()&&this.providers.delete(t.name),this.addComponent(t)}getProvider(t){if(this.providers.has(t))return this.providers.get(t);const n=new kc(t,this);return this.providers.set(t,n),n}getProviders(){return Array.from(this.providers.values())}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var c1;(function(e){e[e.DEBUG=0]="DEBUG",e[e.VERBOSE=1]="VERBOSE",e[e.INFO=2]="INFO",e[e.WARN=3]="WARN",e[e.ERROR=4]="ERROR",e[e.SILENT=5]="SILENT"})(c1||(c1={}));const Pc={debug:c1.DEBUG,verbose:c1.VERBOSE,info:c1.INFO,warn:c1.WARN,error:c1.ERROR,silent:c1.SILENT},zc=c1.INFO,Lc={[c1.DEBUG]:"log",[c1.VERBOSE]:"log",[c1.INFO]:"info",[c1.WARN]:"warn",[c1.ERROR]:"error"},Fc=(e,t,...n)=>{if(t<e.logLevel)return;const s=new Date().toISOString(),i=Lc[t];if(i)console[i](`[${s}]  ${e.name}:`,...n);else throw new Error(`Attempted to log a message with an invalid logType (value: ${t})`)};class d9{constructor(t){this.name=t,this._logLevel=zc,this._logHandler=Fc,this._userLogHandler=null}get logLevel(){return this._logLevel}set logLevel(t){if(!(t in c1))throw new TypeError(`Invalid value "${t}" assigned to \`logLevel\``);this._logLevel=t}setLogLevel(t){this._logLevel=typeof t=="string"?Pc[t]:t}get logHandler(){return this._logHandler}set logHandler(t){if(typeof t!="function")throw new TypeError("Value assigned to `logHandler` must be a function");this._logHandler=t}get userLogHandler(){return this._userLogHandler}set userLogHandler(t){this._userLogHandler=t}debug(...t){this._userLogHandler&&this._userLogHandler(this,c1.DEBUG,...t),this._logHandler(this,c1.DEBUG,...t)}log(...t){this._userLogHandler&&this._userLogHandler(this,c1.VERBOSE,...t),this._logHandler(this,c1.VERBOSE,...t)}info(...t){this._userLogHandler&&this._userLogHandler(this,c1.INFO,...t),this._logHandler(this,c1.INFO,...t)}warn(...t){this._userLogHandler&&this._userLogHandler(this,c1.WARN,...t),this._logHandler(this,c1.WARN,...t)}error(...t){this._userLogHandler&&this._userLogHandler(this,c1.ERROR,...t),this._logHandler(this,c1.ERROR,...t)}}const Bc=(e,t)=>t.some(n=>e instanceof n);let A7,N7;function Vc(){return A7||(A7=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function $c(){return N7||(N7=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const p9=new WeakMap,L5=new WeakMap,m9=new WeakMap,J4=new WeakMap,L6=new WeakMap;function Uc(e){const t=new Promise((n,s)=>{const i=()=>{e.removeEventListener("success",r),e.removeEventListener("error",o)},r=()=>{n(J2(e.result)),i()},o=()=>{s(e.error),i()};e.addEventListener("success",r),e.addEventListener("error",o)});return t.then(n=>{n instanceof IDBCursor&&p9.set(n,e)}).catch(()=>{}),L6.set(t,e),t}function jc(e){if(L5.has(e))return;const t=new Promise((n,s)=>{const i=()=>{e.removeEventListener("complete",r),e.removeEventListener("error",o),e.removeEventListener("abort",o)},r=()=>{n(),i()},o=()=>{s(e.error||new DOMException("AbortError","AbortError")),i()};e.addEventListener("complete",r),e.addEventListener("error",o),e.addEventListener("abort",o)});L5.set(e,t)}let F5={get(e,t,n){if(e instanceof IDBTransaction){if(t==="done")return L5.get(e);if(t==="objectStoreNames")return e.objectStoreNames||m9.get(e);if(t==="store")return n.objectStoreNames[1]?void 0:n.objectStore(n.objectStoreNames[0])}return J2(e[t])},set(e,t,n){return e[t]=n,!0},has(e,t){return e instanceof IDBTransaction&&(t==="done"||t==="store")?!0:t in e}};function Hc(e){F5=e(F5)}function Kc(e){return e===IDBDatabase.prototype.transaction&&!("objectStoreNames"in IDBTransaction.prototype)?function(t,...n){const s=e.call(Z4(this),t,...n);return m9.set(s,t.sort?t.sort():[t]),J2(s)}:$c().includes(e)?function(...t){return e.apply(Z4(this),t),J2(p9.get(this))}:function(...t){return J2(e.apply(Z4(this),t))}}function qc(e){return typeof e=="function"?Kc(e):(e instanceof IDBTransaction&&jc(e),Bc(e,Vc())?new Proxy(e,F5):e)}function J2(e){if(e instanceof IDBRequest)return Uc(e);if(J4.has(e))return J4.get(e);const t=qc(e);return t!==e&&(J4.set(e,t),L6.set(t,e)),t}const Z4=e=>L6.get(e);function Gc(e,t,{blocked:n,upgrade:s,blocking:i,terminated:r}={}){const o=indexedDB.open(e,t),l=J2(o);return s&&o.addEventListener("upgradeneeded",a=>{s(J2(o.result),a.oldVersion,a.newVersion,J2(o.transaction))}),n&&o.addEventListener("blocked",()=>n()),l.then(a=>{r&&a.addEventListener("close",()=>r()),i&&a.addEventListener("versionchange",()=>i())}).catch(()=>{}),l}const Wc=["get","getKey","getAll","getAllKeys","count"],Qc=["put","add","delete","clear"],t5=new Map;function D7(e,t){if(!(e instanceof IDBDatabase&&!(t in e)&&typeof t=="string"))return;if(t5.get(t))return t5.get(t);const n=t.replace(/FromIndex$/,""),s=t!==n,i=Qc.includes(n);if(!(n in(s?IDBIndex:IDBObjectStore).prototype)||!(i||Wc.includes(n)))return;const r=async function(o,...l){const a=this.transaction(o,i?"readwrite":"readonly");let c=a.store;return s&&(c=c.index(l.shift())),(await Promise.all([c[n](...l),i&&a.done]))[0]};return t5.set(t,r),r}Hc(e=>({...e,get:(t,n,s)=>D7(t,n)||e.get(t,n,s),has:(t,n)=>!!D7(t,n)||e.has(t,n)}));/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Xc{constructor(t){this.container=t}getPlatformInfoString(){return this.container.getProviders().map(n=>{if(Yc(n)){const s=n.getImmediate();return`${s.library}/${s.version}`}else return null}).filter(n=>n).join(" ")}}function Yc(e){const t=e.getComponent();return(t==null?void 0:t.type)==="VERSION"}const B5="@firebase/app",k7="0.7.29";/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const F6=new d9("@firebase/app"),Jc="@firebase/app-compat",Zc="@firebase/analytics-compat",tu="@firebase/analytics",eu="@firebase/app-check-compat",nu="@firebase/app-check",su="@firebase/auth",iu="@firebase/auth-compat",ru="@firebase/database",ou="@firebase/database-compat",lu="@firebase/functions",au="@firebase/functions-compat",cu="@firebase/installations",uu="@firebase/installations-compat",hu="@firebase/messaging",fu="@firebase/messaging-compat",du="@firebase/performance",pu="@firebase/performance-compat",mu="@firebase/remote-config",gu="@firebase/remote-config-compat",vu="@firebase/storage",yu="@firebase/storage-compat",wu="@firebase/firestore",Eu="@firebase/firestore-compat",bu="firebase",_u="9.9.1";/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const g9="[DEFAULT]",Tu={[B5]:"fire-core",[Jc]:"fire-core-compat",[tu]:"fire-analytics",[Zc]:"fire-analytics-compat",[nu]:"fire-app-check",[eu]:"fire-app-check-compat",[su]:"fire-auth",[iu]:"fire-auth-compat",[ru]:"fire-rtdb",[ou]:"fire-rtdb-compat",[lu]:"fire-fn",[au]:"fire-fn-compat",[cu]:"fire-iid",[uu]:"fire-iid-compat",[hu]:"fire-fcm",[fu]:"fire-fcm-compat",[du]:"fire-perf",[pu]:"fire-perf-compat",[mu]:"fire-rc",[gu]:"fire-rc-compat",[vu]:"fire-gcs",[yu]:"fire-gcs-compat",[wu]:"fire-fst",[Eu]:"fire-fst-compat","fire-js":"fire-js",[bu]:"fire-js-all"};/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Ke=new Map,V5=new Map;function xu(e,t){try{e.container.addComponent(t)}catch(n){F6.debug(`Component ${t.name} failed to register with FirebaseApp ${e.name}`,n)}}function qe(e){const t=e.name;if(V5.has(t))return F6.debug(`There were multiple attempts to register component ${t}.`),!1;V5.set(t,e);for(const n of Ke.values())xu(n,e);return!0}function Cu(e,t){const n=e.container.getProvider("heartbeat").getImmediate({optional:!0});return n&&n.triggerHeartbeat(),e.container.getProvider(t)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Iu={["no-app"]:"No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",["bad-app-name"]:"Illegal App name: '{$appName}",["duplicate-app"]:"Firebase App named '{$appName}' already exists with different options or config",["app-deleted"]:"Firebase App named '{$appName}' already deleted",["invalid-app-argument"]:"firebase.{$appName}() takes either no argument or a Firebase App instance.",["invalid-log-argument"]:"First argument to `onLog` must be null or a function.",["storage-open"]:"Error thrown when opening storage. Original error: {$originalErrorMessage}.",["storage-get"]:"Error thrown when reading from storage. Original error: {$originalErrorMessage}.",["storage-set"]:"Error thrown when writing to storage. Original error: {$originalErrorMessage}.",["storage-delete"]:"Error thrown when deleting from storage. Original error: {$originalErrorMessage}."},T3=new h9("app","Firebase",Iu);/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Su{constructor(t,n,s){this._isDeleted=!1,this._options=Object.assign({},t),this._config=Object.assign({},n),this._name=n.name,this._automaticDataCollectionEnabled=n.automaticDataCollectionEnabled,this._container=s,this.container.addComponent(new qt("app",()=>this,"PUBLIC"))}get automaticDataCollectionEnabled(){return this.checkDestroyed(),this._automaticDataCollectionEnabled}set automaticDataCollectionEnabled(t){this.checkDestroyed(),this._automaticDataCollectionEnabled=t}get name(){return this.checkDestroyed(),this._name}get options(){return this.checkDestroyed(),this._options}get config(){return this.checkDestroyed(),this._config}get container(){return this._container}get isDeleted(){return this._isDeleted}set isDeleted(t){this._isDeleted=t}checkDestroyed(){if(this.isDeleted)throw T3.create("app-deleted",{appName:this._name})}}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Au=_u;function Nu(e,t={}){typeof t!="object"&&(t={name:t});const n=Object.assign({name:g9,automaticDataCollectionEnabled:!1},t),s=n.name;if(typeof s!="string"||!s)throw T3.create("bad-app-name",{appName:String(s)});const i=Ke.get(s);if(i){if(z5(e,i.options)&&z5(n,i.config))return i;throw T3.create("duplicate-app",{appName:s})}const r=new Mc(s);for(const l of V5.values())r.addComponent(l);const o=new Su(e,n,r);return Ke.set(s,o),o}function Du(e=g9){const t=Ke.get(e);if(!t)throw T3.create("no-app",{appName:e});return t}function X3(e,t,n){var s;let i=(s=Tu[e])!==null&&s!==void 0?s:e;n&&(i+=`-${n}`);const r=i.match(/\s|\//),o=t.match(/\s|\//);if(r||o){const l=[`Unable to register library "${i}" with version "${t}":`];r&&l.push(`library name "${i}" contains illegal characters (whitespace or "/")`),r&&o&&l.push("and"),o&&l.push(`version name "${t}" contains illegal characters (whitespace or "/")`),F6.warn(l.join(" "));return}qe(new qt(`${i}-version`,()=>({library:i,version:t}),"VERSION"))}/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const ku="firebase-heartbeat-database",Ru=1,Gt="firebase-heartbeat-store";let e5=null;function v9(){return e5||(e5=Gc(ku,Ru,{upgrade:(e,t)=>{switch(t){case 0:e.createObjectStore(Gt)}}}).catch(e=>{throw T3.create("storage-open",{originalErrorMessage:e.message})})),e5}async function Ou(e){var t;try{return(await v9()).transaction(Gt).objectStore(Gt).get(y9(e))}catch(n){throw T3.create("storage-get",{originalErrorMessage:(t=n)===null||t===void 0?void 0:t.message})}}async function R7(e,t){var n;try{const i=(await v9()).transaction(Gt,"readwrite");return await i.objectStore(Gt).put(t,y9(e)),i.done}catch(s){throw T3.create("storage-set",{originalErrorMessage:(n=s)===null||n===void 0?void 0:n.message})}}function y9(e){return`${e.name}!${e.options.appId}`}/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Mu=1024,Pu=30*24*60*60*1e3;class zu{constructor(t){this.container=t,this._heartbeatsCache=null;const n=this.container.getProvider("app").getImmediate();this._storage=new Fu(n),this._heartbeatsCachePromise=this._storage.read().then(s=>(this._heartbeatsCache=s,s))}async triggerHeartbeat(){const n=this.container.getProvider("platform-logger").getImmediate().getPlatformInfoString(),s=O7();if(this._heartbeatsCache===null&&(this._heartbeatsCache=await this._heartbeatsCachePromise),!(this._heartbeatsCache.lastSentHeartbeatDate===s||this._heartbeatsCache.heartbeats.some(i=>i.date===s)))return this._heartbeatsCache.heartbeats.push({date:s,agent:n}),this._heartbeatsCache.heartbeats=this._heartbeatsCache.heartbeats.filter(i=>{const r=new Date(i.date).valueOf();return Date.now()-r<=Pu}),this._storage.overwrite(this._heartbeatsCache)}async getHeartbeatsHeader(){if(this._heartbeatsCache===null&&await this._heartbeatsCachePromise,this._heartbeatsCache===null||this._heartbeatsCache.heartbeats.length===0)return"";const t=O7(),{heartbeatsToSend:n,unsentEntries:s}=Lu(this._heartbeatsCache.heartbeats),i=u9(JSON.stringify({version:2,heartbeats:n}));return this._heartbeatsCache.lastSentHeartbeatDate=t,s.length>0?(this._heartbeatsCache.heartbeats=s,await this._storage.overwrite(this._heartbeatsCache)):(this._heartbeatsCache.heartbeats=[],this._storage.overwrite(this._heartbeatsCache)),i}}function O7(){return new Date().toISOString().substring(0,10)}function Lu(e,t=Mu){const n=[];let s=e.slice();for(const i of e){const r=n.find(o=>o.agent===i.agent);if(r){if(r.dates.push(i.date),M7(n)>t){r.dates.pop();break}}else if(n.push({agent:i.agent,dates:[i.date]}),M7(n)>t){n.pop();break}s=s.slice(1)}return{heartbeatsToSend:n,unsentEntries:s}}class Fu{constructor(t){this.app=t,this._canUseIndexedDBPromise=this.runIndexedDBEnvironmentCheck()}async runIndexedDBEnvironmentCheck(){return Ic()?Sc().then(()=>!0).catch(()=>!1):!1}async read(){return await this._canUseIndexedDBPromise?await Ou(this.app)||{heartbeats:[]}:{heartbeats:[]}}async overwrite(t){var n;if(await this._canUseIndexedDBPromise){const i=await this.read();return R7(this.app,{lastSentHeartbeatDate:(n=t.lastSentHeartbeatDate)!==null&&n!==void 0?n:i.lastSentHeartbeatDate,heartbeats:t.heartbeats})}else return}async add(t){var n;if(await this._canUseIndexedDBPromise){const i=await this.read();return R7(this.app,{lastSentHeartbeatDate:(n=t.lastSentHeartbeatDate)!==null&&n!==void 0?n:i.lastSentHeartbeatDate,heartbeats:[...i.heartbeats,...t.heartbeats]})}else return}}function M7(e){return u9(JSON.stringify({version:2,heartbeats:e})).length}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function Bu(e){qe(new qt("platform-logger",t=>new Xc(t),"PRIVATE")),qe(new qt("heartbeat",t=>new zu(t),"PRIVATE")),X3(B5,k7,e),X3(B5,k7,"esm2017"),X3("fire-js","")}Bu("");var Vu=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},M,B6=B6||{},H=Vu||self;function Ge(){}function $5(e){var t=typeof e;return t=t!="object"?t:e?Array.isArray(e)?"array":t:"null",t=="array"||t=="object"&&typeof e.length=="number"}function re(e){var t=typeof e;return t=="object"&&e!=null||t=="function"}function $u(e){return Object.prototype.hasOwnProperty.call(e,n5)&&e[n5]||(e[n5]=++Uu)}var n5="closure_uid_"+(1e9*Math.random()>>>0),Uu=0;function ju(e,t,n){return e.call.apply(e.bind,arguments)}function Hu(e,t,n){if(!e)throw Error();if(2<arguments.length){var s=Array.prototype.slice.call(arguments,2);return function(){var i=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(i,s),e.apply(t,i)}}return function(){return e.apply(t,arguments)}}function $1(e,t,n){return Function.prototype.bind&&Function.prototype.bind.toString().indexOf("native code")!=-1?$1=ju:$1=Hu,$1.apply(null,arguments)}function xe(e,t){var n=Array.prototype.slice.call(arguments,1);return function(){var s=n.slice();return s.push.apply(s,arguments),e.apply(this,s)}}function H1(e,t){function n(){}n.prototype=t.prototype,e.Z=t.prototype,e.prototype=new n,e.prototype.constructor=e,e.Vb=function(s,i,r){for(var o=Array(arguments.length-2),l=2;l<arguments.length;l++)o[l-2]=arguments[l];return t.prototype[i].apply(s,o)}}function a3(){this.s=this.s,this.o=this.o}var Ku=0;a3.prototype.s=!1;a3.prototype.na=function(){!this.s&&(this.s=!0,this.M(),Ku!=0)&&$u(this)};a3.prototype.M=function(){if(this.o)for(;this.o.length;)this.o.shift()()};const w9=Array.prototype.indexOf?function(e,t){return Array.prototype.indexOf.call(e,t,void 0)}:function(e,t){if(typeof e=="string")return typeof t!="string"||t.length!=1?-1:e.indexOf(t,0);for(let n=0;n<e.length;n++)if(n in e&&e[n]===t)return n;return-1},E9=Array.prototype.forEach?function(e,t,n){Array.prototype.forEach.call(e,t,n)}:function(e,t,n){const s=e.length,i=typeof e=="string"?e.split(""):e;for(let r=0;r<s;r++)r in i&&t.call(n,i[r],r,e)};function qu(e){t:{var t=Lh;const n=e.length,s=typeof e=="string"?e.split(""):e;for(let i=0;i<n;i++)if(i in s&&t.call(void 0,s[i],i,e)){t=i;break t}t=-1}return 0>t?null:typeof e=="string"?e.charAt(t):e[t]}function P7(e){return Array.prototype.concat.apply([],arguments)}function V6(e){const t=e.length;if(0<t){const n=Array(t);for(let s=0;s<t;s++)n[s]=e[s];return n}return[]}function We(e){return/^[\s\xa0]*$/.test(e)}var z7=String.prototype.trim?function(e){return e.trim()}:function(e){return/^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(e)[1]};function Q1(e,t){return e.indexOf(t)!=-1}function s5(e,t){return e<t?-1:e>t?1:0}var X1;t:{var L7=H.navigator;if(L7){var F7=L7.userAgent;if(F7){X1=F7;break t}}X1=""}function $6(e,t,n){for(const s in e)t.call(n,e[s],s,e)}function b9(e){const t={};for(const n in e)t[n]=e[n];return t}var B7="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");function _9(e,t){let n,s;for(let i=1;i<arguments.length;i++){s=arguments[i];for(n in s)e[n]=s[n];for(let r=0;r<B7.length;r++)n=B7[r],Object.prototype.hasOwnProperty.call(s,n)&&(e[n]=s[n])}}function U6(e){return U6[" "](e),e}U6[" "]=Ge;function Gu(e){var t=Xu;return Object.prototype.hasOwnProperty.call(t,9)?t[9]:t[9]=e(9)}var Wu=Q1(X1,"Opera"),nt=Q1(X1,"Trident")||Q1(X1,"MSIE"),T9=Q1(X1,"Edge"),U5=T9||nt,x9=Q1(X1,"Gecko")&&!(Q1(X1.toLowerCase(),"webkit")&&!Q1(X1,"Edge"))&&!(Q1(X1,"Trident")||Q1(X1,"MSIE"))&&!Q1(X1,"Edge"),Qu=Q1(X1.toLowerCase(),"webkit")&&!Q1(X1,"Edge");function C9(){var e=H.document;return e?e.documentMode:void 0}var Qe;t:{var i5="",r5=function(){var e=X1;if(x9)return/rv:([^\);]+)(\)|;)/.exec(e);if(T9)return/Edge\/([\d\.]+)/.exec(e);if(nt)return/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(e);if(Qu)return/WebKit\/(\S+)/.exec(e);if(Wu)return/(?:Version)[ \/]?(\S+)/.exec(e)}();if(r5&&(i5=r5?r5[1]:""),nt){var o5=C9();if(o5!=null&&o5>parseFloat(i5)){Qe=String(o5);break t}}Qe=i5}var Xu={};function Yu(){return Gu(function(){let e=0;const t=z7(String(Qe)).split("."),n=z7("9").split("."),s=Math.max(t.length,n.length);for(let o=0;e==0&&o<s;o++){var i=t[o]||"",r=n[o]||"";do{if(i=/(\d*)(\D*)(.*)/.exec(i)||["","","",""],r=/(\d*)(\D*)(.*)/.exec(r)||["","","",""],i[0].length==0&&r[0].length==0)break;e=s5(i[1].length==0?0:parseInt(i[1],10),r[1].length==0?0:parseInt(r[1],10))||s5(i[2].length==0,r[2].length==0)||s5(i[2],r[2]),i=i[3],r=r[3]}while(e==0)}return 0<=e})}var j5;if(H.document&&nt){var V7=C9();j5=V7||parseInt(Qe,10)||void 0}else j5=void 0;var Ju=j5,Zu=function(){if(!H.addEventListener||!Object.defineProperty)return!1;var e=!1,t=Object.defineProperty({},"passive",{get:function(){e=!0}});try{H.addEventListener("test",Ge,t),H.removeEventListener("test",Ge,t)}catch{}return e}();function q1(e,t){this.type=e,this.g=this.target=t,this.defaultPrevented=!1}q1.prototype.h=function(){this.defaultPrevented=!0};function Wt(e,t){if(q1.call(this,e?e.type:""),this.relatedTarget=this.g=this.target=null,this.button=this.screenY=this.screenX=this.clientY=this.clientX=0,this.key="",this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1,this.state=null,this.pointerId=0,this.pointerType="",this.i=null,e){var n=this.type=e.type,s=e.changedTouches&&e.changedTouches.length?e.changedTouches[0]:null;if(this.target=e.target||e.srcElement,this.g=t,t=e.relatedTarget){if(x9){t:{try{U6(t.nodeName);var i=!0;break t}catch{}i=!1}i||(t=null)}}else n=="mouseover"?t=e.fromElement:n=="mouseout"&&(t=e.toElement);this.relatedTarget=t,s?(this.clientX=s.clientX!==void 0?s.clientX:s.pageX,this.clientY=s.clientY!==void 0?s.clientY:s.pageY,this.screenX=s.screenX||0,this.screenY=s.screenY||0):(this.clientX=e.clientX!==void 0?e.clientX:e.pageX,this.clientY=e.clientY!==void 0?e.clientY:e.pageY,this.screenX=e.screenX||0,this.screenY=e.screenY||0),this.button=e.button,this.key=e.key||"",this.ctrlKey=e.ctrlKey,this.altKey=e.altKey,this.shiftKey=e.shiftKey,this.metaKey=e.metaKey,this.pointerId=e.pointerId||0,this.pointerType=typeof e.pointerType=="string"?e.pointerType:th[e.pointerType]||"",this.state=e.state,this.i=e,e.defaultPrevented&&Wt.Z.h.call(this)}}H1(Wt,q1);var th={2:"touch",3:"pen",4:"mouse"};Wt.prototype.h=function(){Wt.Z.h.call(this);var e=this.i;e.preventDefault?e.preventDefault():e.returnValue=!1};var oe="closure_listenable_"+(1e6*Math.random()|0),eh=0;function nh(e,t,n,s,i){this.listener=e,this.proxy=null,this.src=t,this.type=n,this.capture=!!s,this.ia=i,this.key=++eh,this.ca=this.fa=!1}function _4(e){e.ca=!0,e.listener=null,e.proxy=null,e.src=null,e.ia=null}function T4(e){this.src=e,this.g={},this.h=0}T4.prototype.add=function(e,t,n,s,i){var r=e.toString();e=this.g[r],e||(e=this.g[r]=[],this.h++);var o=K5(e,t,s,i);return-1<o?(t=e[o],n||(t.fa=!1)):(t=new nh(t,this.src,r,!!s,i),t.fa=n,e.push(t)),t};function H5(e,t){var n=t.type;if(n in e.g){var s=e.g[n],i=w9(s,t),r;(r=0<=i)&&Array.prototype.splice.call(s,i,1),r&&(_4(t),e.g[n].length==0&&(delete e.g[n],e.h--))}}function K5(e,t,n,s){for(var i=0;i<e.length;++i){var r=e[i];if(!r.ca&&r.listener==t&&r.capture==!!n&&r.ia==s)return i}return-1}var j6="closure_lm_"+(1e6*Math.random()|0),l5={};function I9(e,t,n,s,i){if(s&&s.once)return A9(e,t,n,s,i);if(Array.isArray(t)){for(var r=0;r<t.length;r++)I9(e,t[r],n,s,i);return null}return n=q6(n),e&&e[oe]?e.N(t,n,re(s)?!!s.capture:!!s,i):S9(e,t,n,!1,s,i)}function S9(e,t,n,s,i,r){if(!t)throw Error("Invalid event type");var o=re(i)?!!i.capture:!!i,l=K6(e);if(l||(e[j6]=l=new T4(e)),n=l.add(t,n,s,o,r),n.proxy)return n;if(s=sh(),n.proxy=s,s.src=e,s.listener=n,e.addEventListener)Zu||(i=o),i===void 0&&(i=!1),e.addEventListener(t.toString(),s,i);else if(e.attachEvent)e.attachEvent(D9(t.toString()),s);else if(e.addListener&&e.removeListener)e.addListener(s);else throw Error("addEventListener and attachEvent are unavailable.");return n}function sh(){function e(n){return t.call(e.src,e.listener,n)}var t=ih;return e}function A9(e,t,n,s,i){if(Array.isArray(t)){for(var r=0;r<t.length;r++)A9(e,t[r],n,s,i);return null}return n=q6(n),e&&e[oe]?e.O(t,n,re(s)?!!s.capture:!!s,i):S9(e,t,n,!0,s,i)}function N9(e,t,n,s,i){if(Array.isArray(t))for(var r=0;r<t.length;r++)N9(e,t[r],n,s,i);else s=re(s)?!!s.capture:!!s,n=q6(n),e&&e[oe]?(e=e.i,t=String(t).toString(),t in e.g&&(r=e.g[t],n=K5(r,n,s,i),-1<n&&(_4(r[n]),Array.prototype.splice.call(r,n,1),r.length==0&&(delete e.g[t],e.h--)))):e&&(e=K6(e))&&(t=e.g[t.toString()],e=-1,t&&(e=K5(t,n,s,i)),(n=-1<e?t[e]:null)&&H6(n))}function H6(e){if(typeof e!="number"&&e&&!e.ca){var t=e.src;if(t&&t[oe])H5(t.i,e);else{var n=e.type,s=e.proxy;t.removeEventListener?t.removeEventListener(n,s,e.capture):t.detachEvent?t.detachEvent(D9(n),s):t.addListener&&t.removeListener&&t.removeListener(s),(n=K6(t))?(H5(n,e),n.h==0&&(n.src=null,t[j6]=null)):_4(e)}}}function D9(e){return e in l5?l5[e]:l5[e]="on"+e}function ih(e,t){if(e.ca)e=!0;else{t=new Wt(t,this);var n=e.listener,s=e.ia||e.src;e.fa&&H6(e),e=n.call(s,t)}return e}function K6(e){return e=e[j6],e instanceof T4?e:null}var a5="__closure_events_fn_"+(1e9*Math.random()>>>0);function q6(e){return typeof e=="function"?e:(e[a5]||(e[a5]=function(t){return e.handleEvent(t)}),e[a5])}function L1(){a3.call(this),this.i=new T4(this),this.P=this,this.I=null}H1(L1,a3);L1.prototype[oe]=!0;L1.prototype.removeEventListener=function(e,t,n,s){N9(this,e,t,n,s)};function U1(e,t){var n,s=e.I;if(s)for(n=[];s;s=s.I)n.push(s);if(e=e.P,s=t.type||t,typeof t=="string")t=new q1(t,e);else if(t instanceof q1)t.target=t.target||e;else{var i=t;t=new q1(s,e),_9(t,i)}if(i=!0,n)for(var r=n.length-1;0<=r;r--){var o=t.g=n[r];i=Ce(o,s,!0,t)&&i}if(o=t.g=e,i=Ce(o,s,!0,t)&&i,i=Ce(o,s,!1,t)&&i,n)for(r=0;r<n.length;r++)o=t.g=n[r],i=Ce(o,s,!1,t)&&i}L1.prototype.M=function(){if(L1.Z.M.call(this),this.i){var e=this.i,t;for(t in e.g){for(var n=e.g[t],s=0;s<n.length;s++)_4(n[s]);delete e.g[t],e.h--}}this.I=null};L1.prototype.N=function(e,t,n,s){return this.i.add(String(e),t,!1,n,s)};L1.prototype.O=function(e,t,n,s){return this.i.add(String(e),t,!0,n,s)};function Ce(e,t,n,s){if(t=e.i.g[String(t)],!t)return!0;t=t.concat();for(var i=!0,r=0;r<t.length;++r){var o=t[r];if(o&&!o.ca&&o.capture==n){var l=o.listener,a=o.ia||o.src;o.fa&&H5(e.i,o),i=l.call(a,s)!==!1&&i}}return i&&!s.defaultPrevented}var G6=H.JSON.stringify;function rh(){var e=R9;let t=null;return e.g&&(t=e.g,e.g=e.g.next,e.g||(e.h=null),t.next=null),t}class oh{constructor(){this.h=this.g=null}add(t,n){const s=k9.get();s.set(t,n),this.h?this.h.next=s:this.g=s,this.h=s}}var k9=new class{constructor(e,t){this.i=e,this.j=t,this.h=0,this.g=null}get(){let e;return 0<this.h?(this.h--,e=this.g,this.g=e.next,e.next=null):e=this.i(),e}}(()=>new lh,e=>e.reset());class lh{constructor(){this.next=this.g=this.h=null}set(t,n){this.h=t,this.g=n,this.next=null}reset(){this.next=this.g=this.h=null}}function ah(e){H.setTimeout(()=>{throw e},0)}function W6(e,t){q5||ch(),G5||(q5(),G5=!0),R9.add(e,t)}var q5;function ch(){var e=H.Promise.resolve(void 0);q5=function(){e.then(uh)}}var G5=!1,R9=new oh;function uh(){for(var e;e=rh();){try{e.h.call(e.g)}catch(n){ah(n)}var t=k9;t.j(e),100>t.h&&(t.h++,e.next=t.g,t.g=e)}G5=!1}function x4(e,t){L1.call(this),this.h=e||1,this.g=t||H,this.j=$1(this.kb,this),this.l=Date.now()}H1(x4,L1);M=x4.prototype;M.da=!1;M.S=null;M.kb=function(){if(this.da){var e=Date.now()-this.l;0<e&&e<.8*this.h?this.S=this.g.setTimeout(this.j,this.h-e):(this.S&&(this.g.clearTimeout(this.S),this.S=null),U1(this,"tick"),this.da&&(Q6(this),this.start()))}};M.start=function(){this.da=!0,this.S||(this.S=this.g.setTimeout(this.j,this.h),this.l=Date.now())};function Q6(e){e.da=!1,e.S&&(e.g.clearTimeout(e.S),e.S=null)}M.M=function(){x4.Z.M.call(this),Q6(this),delete this.g};function X6(e,t,n){if(typeof e=="function")n&&(e=$1(e,n));else if(e&&typeof e.handleEvent=="function")e=$1(e.handleEvent,e);else throw Error("Invalid listener argument");return 2147483647<Number(t)?-1:H.setTimeout(e,t||0)}function O9(e){e.g=X6(()=>{e.g=null,e.i&&(e.i=!1,O9(e))},e.j);const t=e.h;e.h=null,e.m.apply(null,t)}class hh extends a3{constructor(t,n){super(),this.m=t,this.j=n,this.h=null,this.i=!1,this.g=null}l(t){this.h=arguments,this.g?this.i=!0:O9(this)}M(){super.M(),this.g&&(H.clearTimeout(this.g),this.g=null,this.i=!1,this.h=null)}}function Qt(e){a3.call(this),this.h=e,this.g={}}H1(Qt,a3);var $7=[];function M9(e,t,n,s){Array.isArray(n)||(n&&($7[0]=n.toString()),n=$7);for(var i=0;i<n.length;i++){var r=I9(t,n[i],s||e.handleEvent,!1,e.h||e);if(!r)break;e.g[r.key]=r}}function P9(e){$6(e.g,function(t,n){this.g.hasOwnProperty(n)&&H6(t)},e),e.g={}}Qt.prototype.M=function(){Qt.Z.M.call(this),P9(this)};Qt.prototype.handleEvent=function(){throw Error("EventHandler.handleEvent not implemented")};function C4(){this.g=!0}C4.prototype.Aa=function(){this.g=!1};function fh(e,t,n,s,i,r){e.info(function(){if(e.g)if(r)for(var o="",l=r.split("&"),a=0;a<l.length;a++){var c=l[a].split("=");if(1<c.length){var u=c[0];c=c[1];var h=u.split("_");o=2<=h.length&&h[1]=="type"?o+(u+"="+c+"&"):o+(u+"=redacted&")}}else o=null;else o=r;return"XMLHTTP REQ ("+s+") [attempt "+i+"]: "+t+`
`+n+`
`+o})}function dh(e,t,n,s,i,r,o){e.info(function(){return"XMLHTTP RESP ("+s+") [ attempt "+i+"]: "+t+`
`+n+`
`+r+" "+o})}function j3(e,t,n,s){e.info(function(){return"XMLHTTP TEXT ("+t+"): "+mh(e,n)+(s?" "+s:"")})}function ph(e,t){e.info(function(){return"TIMEOUT: "+t})}C4.prototype.info=function(){};function mh(e,t){if(!e.g)return t;if(!t)return null;try{var n=JSON.parse(t);if(n){for(e=0;e<n.length;e++)if(Array.isArray(n[e])){var s=n[e];if(!(2>s.length)){var i=s[1];if(Array.isArray(i)&&!(1>i.length)){var r=i[0];if(r!="noop"&&r!="stop"&&r!="close")for(var o=1;o<i.length;o++)i[o]=""}}}}return G6(n)}catch{return t}}var k3={},U7=null;function I4(){return U7=U7||new L1}k3.Ma="serverreachability";function z9(e){q1.call(this,k3.Ma,e)}H1(z9,q1);function Xt(e){const t=I4();U1(t,new z9(t))}k3.STAT_EVENT="statevent";function L9(e,t){q1.call(this,k3.STAT_EVENT,e),this.stat=t}H1(L9,q1);function Y1(e){const t=I4();U1(t,new L9(t,e))}k3.Na="timingevent";function F9(e,t){q1.call(this,k3.Na,e),this.size=t}H1(F9,q1);function le(e,t){if(typeof e!="function")throw Error("Fn must not be null and must be a function");return H.setTimeout(function(){e()},t)}var S4={NO_ERROR:0,lb:1,yb:2,xb:3,sb:4,wb:5,zb:6,Ja:7,TIMEOUT:8,Cb:9},B9={qb:"complete",Mb:"success",Ka:"error",Ja:"abort",Eb:"ready",Fb:"readystatechange",TIMEOUT:"timeout",Ab:"incrementaldata",Db:"progress",tb:"downloadprogress",Ub:"uploadprogress"};function Y6(){}Y6.prototype.h=null;function j7(e){return e.h||(e.h=e.i())}function V9(){}var ae={OPEN:"a",pb:"b",Ka:"c",Bb:"d"};function J6(){q1.call(this,"d")}H1(J6,q1);function Z6(){q1.call(this,"c")}H1(Z6,q1);var W5;function A4(){}H1(A4,Y6);A4.prototype.g=function(){return new XMLHttpRequest};A4.prototype.i=function(){return{}};W5=new A4;function ce(e,t,n,s){this.l=e,this.j=t,this.m=n,this.X=s||1,this.V=new Qt(this),this.P=gh,e=U5?125:void 0,this.W=new x4(e),this.H=null,this.i=!1,this.s=this.A=this.v=this.K=this.F=this.Y=this.B=null,this.D=[],this.g=null,this.C=0,this.o=this.u=null,this.N=-1,this.I=!1,this.O=0,this.L=null,this.aa=this.J=this.$=this.U=!1,this.h=new $9}function $9(){this.i=null,this.g="",this.h=!1}var gh=45e3,Q5={},Xe={};M=ce.prototype;M.setTimeout=function(e){this.P=e};function X5(e,t,n){e.K=1,e.v=D4(U2(t)),e.s=n,e.U=!0,U9(e,null)}function U9(e,t){e.F=Date.now(),ue(e),e.A=U2(e.v);var n=e.A,s=e.X;Array.isArray(s)||(s=[String(s)]),Q9(n.h,"t",s),e.C=0,n=e.l.H,e.h=new $9,e.g=mi(e.l,n?t:null,!e.s),0<e.O&&(e.L=new hh($1(e.Ia,e,e.g),e.O)),M9(e.V,e.g,"readystatechange",e.gb),t=e.H?b9(e.H):{},e.s?(e.u||(e.u="POST"),t["Content-Type"]="application/x-www-form-urlencoded",e.g.ea(e.A,e.u,e.s,t)):(e.u="GET",e.g.ea(e.A,e.u,null,t)),Xt(),fh(e.j,e.u,e.A,e.m,e.X,e.s)}M.gb=function(e){e=e.target;const t=this.L;t&&B2(e)==3?t.l():this.Ia(e)};M.Ia=function(e){try{if(e==this.g)t:{const u=B2(this.g);var t=this.g.Da();const h=this.g.ba();if(!(3>u)&&(u!=3||U5||this.g&&(this.h.h||this.g.ga()||G7(this.g)))){this.I||u!=4||t==7||(t==8||0>=h?Xt(3):Xt(2)),N4(this);var n=this.g.ba();this.N=n;e:if(j9(this)){var s=G7(this.g);e="";var i=s.length,r=B2(this.g)==4;if(!this.h.i){if(typeof TextDecoder>"u"){m3(this),Ot(this);var o="";break e}this.h.i=new H.TextDecoder}for(t=0;t<i;t++)this.h.h=!0,e+=this.h.i.decode(s[t],{stream:r&&t==i-1});s.splice(0,i),this.h.g+=e,this.C=0,o=this.h.g}else o=this.g.ga();if(this.i=n==200,dh(this.j,this.u,this.A,this.m,this.X,u,n),this.i){if(this.$&&!this.J){e:{if(this.g){var l,a=this.g;if((l=a.g?a.g.getResponseHeader("X-HTTP-Initial-Response"):null)&&!We(l)){var c=l;break e}}c=null}if(n=c)j3(this.j,this.m,n,"Initial handshake response via X-HTTP-Initial-Response"),this.J=!0,Y5(this,n);else{this.i=!1,this.o=3,Y1(12),m3(this),Ot(this);break t}}this.U?(H9(this,u,o),U5&&this.i&&u==3&&(M9(this.V,this.W,"tick",this.fb),this.W.start())):(j3(this.j,this.m,o,null),Y5(this,o)),u==4&&m3(this),this.i&&!this.I&&(u==4?hi(this.l,this):(this.i=!1,ue(this)))}else n==400&&0<o.indexOf("Unknown SID")?(this.o=3,Y1(12)):(this.o=0,Y1(13)),m3(this),Ot(this)}}}catch{}finally{}};function j9(e){return e.g?e.u=="GET"&&e.K!=2&&e.l.Ba:!1}function H9(e,t,n){let s=!0,i;for(;!e.I&&e.C<n.length;)if(i=vh(e,n),i==Xe){t==4&&(e.o=4,Y1(14),s=!1),j3(e.j,e.m,null,"[Incomplete Response]");break}else if(i==Q5){e.o=4,Y1(15),j3(e.j,e.m,n,"[Invalid Chunk]"),s=!1;break}else j3(e.j,e.m,i,null),Y5(e,i);j9(e)&&i!=Xe&&i!=Q5&&(e.h.g="",e.C=0),t!=4||n.length!=0||e.h.h||(e.o=1,Y1(16),s=!1),e.i=e.i&&s,s?0<n.length&&!e.aa&&(e.aa=!0,t=e.l,t.g==e&&t.$&&!t.L&&(t.h.info("Great, no buffering proxy detected. Bytes received: "+n.length),cn(t),t.L=!0,Y1(11))):(j3(e.j,e.m,n,"[Invalid Chunked Response]"),m3(e),Ot(e))}M.fb=function(){if(this.g){var e=B2(this.g),t=this.g.ga();this.C<t.length&&(N4(this),H9(this,e,t),this.i&&e!=4&&ue(this))}};function vh(e,t){var n=e.C,s=t.indexOf(`
`,n);return s==-1?Xe:(n=Number(t.substring(n,s)),isNaN(n)?Q5:(s+=1,s+n>t.length?Xe:(t=t.substr(s,n),e.C=s+n,t)))}M.cancel=function(){this.I=!0,m3(this)};function ue(e){e.Y=Date.now()+e.P,K9(e,e.P)}function K9(e,t){if(e.B!=null)throw Error("WatchDog timer not null");e.B=le($1(e.eb,e),t)}function N4(e){e.B&&(H.clearTimeout(e.B),e.B=null)}M.eb=function(){this.B=null;const e=Date.now();0<=e-this.Y?(ph(this.j,this.A),this.K!=2&&(Xt(),Y1(17)),m3(this),this.o=2,Ot(this)):K9(this,this.Y-e)};function Ot(e){e.l.G==0||e.I||hi(e.l,e)}function m3(e){N4(e);var t=e.L;t&&typeof t.na=="function"&&t.na(),e.L=null,Q6(e.W),P9(e.V),e.g&&(t=e.g,e.g=null,t.abort(),t.na())}function Y5(e,t){try{var n=e.l;if(n.G!=0&&(n.g==e||J5(n.i,e))){if(n.I=e.N,!e.J&&J5(n.i,e)&&n.G==3){try{var s=n.Ca.g.parse(t)}catch{s=null}if(Array.isArray(s)&&s.length==3){var i=s;if(i[0]==0){t:if(!n.u){if(n.g)if(n.g.F+3e3<e.F)t4(n),O4(n);else break t;an(n),Y1(18)}}else n.ta=i[1],0<n.ta-n.U&&37500>i[2]&&n.N&&n.A==0&&!n.v&&(n.v=le($1(n.ab,n),6e3));if(1>=J9(n.i)&&n.ka){try{n.ka()}catch{}n.ka=void 0}}else g3(n,11)}else if((e.J||n.g==e)&&t4(n),!We(t))for(i=n.Ca.g.parse(t),t=0;t<i.length;t++){let c=i[t];if(n.U=c[0],c=c[1],n.G==2)if(c[0]=="c"){n.J=c[1],n.la=c[2];const u=c[3];u!=null&&(n.ma=u,n.h.info("VER="+n.ma));const h=c[4];h!=null&&(n.za=h,n.h.info("SVER="+n.za));const f=c[5];f!=null&&typeof f=="number"&&0<f&&(s=1.5*f,n.K=s,n.h.info("backChannelRequestTimeoutMs_="+s)),s=n;const m=e.g;if(m){const v=m.g?m.g.getResponseHeader("X-Client-Wire-Protocol"):null;if(v){var r=s.i;!r.g&&(Q1(v,"spdy")||Q1(v,"quic")||Q1(v,"h2"))&&(r.j=r.l,r.g=new Set,r.h&&(nn(r,r.h),r.h=null))}if(s.D){const A=m.g?m.g.getResponseHeader("X-HTTP-Session-Id"):null;A&&(s.sa=A,x1(s.F,s.D,A))}}n.G=3,n.j&&n.j.xa(),n.$&&(n.O=Date.now()-e.F,n.h.info("Handshake RTT: "+n.O+"ms")),s=n;var o=e;if(s.oa=pi(s,s.H?s.la:null,s.W),o.J){Z9(s.i,o);var l=o,a=s.K;a&&l.setTimeout(a),l.B&&(N4(l),ue(l)),s.g=o}else ci(s);0<n.l.length&&M4(n)}else c[0]!="stop"&&c[0]!="close"||g3(n,7);else n.G==3&&(c[0]=="stop"||c[0]=="close"?c[0]=="stop"?g3(n,7):ln(n):c[0]!="noop"&&n.j&&n.j.wa(c),n.A=0)}}Xt(4)}catch{}}function yh(e){if(e.R&&typeof e.R=="function")return e.R();if(typeof e=="string")return e.split("");if($5(e)){for(var t=[],n=e.length,s=0;s<n;s++)t.push(e[s]);return t}t=[],n=0;for(s in e)t[n++]=e[s];return t}function tn(e,t){if(e.forEach&&typeof e.forEach=="function")e.forEach(t,void 0);else if($5(e)||typeof e=="string")E9(e,t,void 0);else{if(e.T&&typeof e.T=="function")var n=e.T();else if(e.R&&typeof e.R=="function")n=void 0;else if($5(e)||typeof e=="string"){n=[];for(var s=e.length,i=0;i<s;i++)n.push(i)}else for(i in n=[],s=0,e)n[s++]=i;s=yh(e),i=s.length;for(var r=0;r<i;r++)t.call(void 0,s[r],n&&n[r],e)}}function pt(e,t){this.h={},this.g=[],this.i=0;var n=arguments.length;if(1<n){if(n%2)throw Error("Uneven number of arguments");for(var s=0;s<n;s+=2)this.set(arguments[s],arguments[s+1])}else if(e)if(e instanceof pt)for(n=e.T(),s=0;s<n.length;s++)this.set(n[s],e.get(n[s]));else for(s in e)this.set(s,e[s])}M=pt.prototype;M.R=function(){en(this);for(var e=[],t=0;t<this.g.length;t++)e.push(this.h[this.g[t]]);return e};M.T=function(){return en(this),this.g.concat()};function en(e){if(e.i!=e.g.length){for(var t=0,n=0;t<e.g.length;){var s=e.g[t];x3(e.h,s)&&(e.g[n++]=s),t++}e.g.length=n}if(e.i!=e.g.length){var i={};for(n=t=0;t<e.g.length;)s=e.g[t],x3(i,s)||(e.g[n++]=s,i[s]=1),t++;e.g.length=n}}M.get=function(e,t){return x3(this.h,e)?this.h[e]:t};M.set=function(e,t){x3(this.h,e)||(this.i++,this.g.push(e)),this.h[e]=t};M.forEach=function(e,t){for(var n=this.T(),s=0;s<n.length;s++){var i=n[s],r=this.get(i);e.call(t,r,i,this)}};function x3(e,t){return Object.prototype.hasOwnProperty.call(e,t)}var q9=/^(?:([^:/?#.]+):)?(?:\/\/(?:([^\\/?#]*)@)?([^\\/?#]*?)(?::([0-9]+))?(?=[\\/?#]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;function wh(e,t){if(e){e=e.split("&");for(var n=0;n<e.length;n++){var s=e[n].indexOf("="),i=null;if(0<=s){var r=e[n].substring(0,s);i=e[n].substring(s+1)}else r=e[n];t(r,i?decodeURIComponent(i.replace(/\+/g," ")):"")}}}function C3(e,t){if(this.i=this.s=this.j="",this.m=null,this.o=this.l="",this.g=!1,e instanceof C3){this.g=t!==void 0?t:e.g,Ye(this,e.j),this.s=e.s,Je(this,e.i),Ze(this,e.m),this.l=e.l,t=e.h;var n=new Yt;n.i=t.i,t.g&&(n.g=new pt(t.g),n.h=t.h),H7(this,n),this.o=e.o}else e&&(n=String(e).match(q9))?(this.g=!!t,Ye(this,n[1]||"",!0),this.s=Mt(n[2]||""),Je(this,n[3]||"",!0),Ze(this,n[4]),this.l=Mt(n[5]||"",!0),H7(this,n[6]||"",!0),this.o=Mt(n[7]||"")):(this.g=!!t,this.h=new Yt(null,this.g))}C3.prototype.toString=function(){var e=[],t=this.j;t&&e.push(It(t,K7,!0),":");var n=this.i;return(n||t=="file")&&(e.push("//"),(t=this.s)&&e.push(It(t,K7,!0),"@"),e.push(encodeURIComponent(String(n)).replace(/%25([0-9a-fA-F]{2})/g,"%$1")),n=this.m,n!=null&&e.push(":",String(n))),(n=this.l)&&(this.i&&n.charAt(0)!="/"&&e.push("/"),e.push(It(n,n.charAt(0)=="/"?xh:Th,!0))),(n=this.h.toString())&&e.push("?",n),(n=this.o)&&e.push("#",It(n,Ih)),e.join("")};function U2(e){return new C3(e)}function Ye(e,t,n){e.j=n?Mt(t,!0):t,e.j&&(e.j=e.j.replace(/:$/,""))}function Je(e,t,n){e.i=n?Mt(t,!0):t}function Ze(e,t){if(t){if(t=Number(t),isNaN(t)||0>t)throw Error("Bad port number "+t);e.m=t}else e.m=null}function H7(e,t,n){t instanceof Yt?(e.h=t,Sh(e.h,e.g)):(n||(t=It(t,Ch)),e.h=new Yt(t,e.g))}function x1(e,t,n){e.h.set(t,n)}function D4(e){return x1(e,"zx",Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^Date.now()).toString(36)),e}function Eh(e){return e instanceof C3?U2(e):new C3(e,void 0)}function bh(e,t,n,s){var i=new C3(null,void 0);return e&&Ye(i,e),t&&Je(i,t),n&&Ze(i,n),s&&(i.l=s),i}function Mt(e,t){return e?t?decodeURI(e.replace(/%25/g,"%2525")):decodeURIComponent(e):""}function It(e,t,n){return typeof e=="string"?(e=encodeURI(e).replace(t,_h),n&&(e=e.replace(/%25([0-9a-fA-F]{2})/g,"%$1")),e):null}function _h(e){return e=e.charCodeAt(0),"%"+(e>>4&15).toString(16)+(e&15).toString(16)}var K7=/[#\/\?@]/g,Th=/[#\?:]/g,xh=/[#\?]/g,Ch=/[#\?@]/g,Ih=/#/g;function Yt(e,t){this.h=this.g=null,this.i=e||null,this.j=!!t}function c3(e){e.g||(e.g=new pt,e.h=0,e.i&&wh(e.i,function(t,n){e.add(decodeURIComponent(t.replace(/\+/g," ")),n)}))}M=Yt.prototype;M.add=function(e,t){c3(this),this.i=null,e=mt(this,e);var n=this.g.get(e);return n||this.g.set(e,n=[]),n.push(t),this.h+=1,this};function G9(e,t){c3(e),t=mt(e,t),x3(e.g.h,t)&&(e.i=null,e.h-=e.g.get(t).length,e=e.g,x3(e.h,t)&&(delete e.h[t],e.i--,e.g.length>2*e.i&&en(e)))}function W9(e,t){return c3(e),t=mt(e,t),x3(e.g.h,t)}M.forEach=function(e,t){c3(this),this.g.forEach(function(n,s){E9(n,function(i){e.call(t,i,s,this)},this)},this)};M.T=function(){c3(this);for(var e=this.g.R(),t=this.g.T(),n=[],s=0;s<t.length;s++)for(var i=e[s],r=0;r<i.length;r++)n.push(t[s]);return n};M.R=function(e){c3(this);var t=[];if(typeof e=="string")W9(this,e)&&(t=P7(t,this.g.get(mt(this,e))));else{e=this.g.R();for(var n=0;n<e.length;n++)t=P7(t,e[n])}return t};M.set=function(e,t){return c3(this),this.i=null,e=mt(this,e),W9(this,e)&&(this.h-=this.g.get(e).length),this.g.set(e,[t]),this.h+=1,this};M.get=function(e,t){return e?(e=this.R(e),0<e.length?String(e[0]):t):t};function Q9(e,t,n){G9(e,t),0<n.length&&(e.i=null,e.g.set(mt(e,t),V6(n)),e.h+=n.length)}M.toString=function(){if(this.i)return this.i;if(!this.g)return"";for(var e=[],t=this.g.T(),n=0;n<t.length;n++){var s=t[n],i=encodeURIComponent(String(s));s=this.R(s);for(var r=0;r<s.length;r++){var o=i;s[r]!==""&&(o+="="+encodeURIComponent(String(s[r]))),e.push(o)}}return this.i=e.join("&")};function mt(e,t){return t=String(t),e.j&&(t=t.toLowerCase()),t}function Sh(e,t){t&&!e.j&&(c3(e),e.i=null,e.g.forEach(function(n,s){var i=s.toLowerCase();s!=i&&(G9(this,s),Q9(this,i,n))},e)),e.j=t}var Ah=class{constructor(e,t){this.h=e,this.g=t}};function X9(e){this.l=e||Nh,H.PerformanceNavigationTiming?(e=H.performance.getEntriesByType("navigation"),e=0<e.length&&(e[0].nextHopProtocol=="hq"||e[0].nextHopProtocol=="h2")):e=!!(H.g&&H.g.Ea&&H.g.Ea()&&H.g.Ea().Zb),this.j=e?this.l:1,this.g=null,1<this.j&&(this.g=new Set),this.h=null,this.i=[]}var Nh=10;function Y9(e){return e.h?!0:e.g?e.g.size>=e.j:!1}function J9(e){return e.h?1:e.g?e.g.size:0}function J5(e,t){return e.h?e.h==t:e.g?e.g.has(t):!1}function nn(e,t){e.g?e.g.add(t):e.h=t}function Z9(e,t){e.h&&e.h==t?e.h=null:e.g&&e.g.has(t)&&e.g.delete(t)}X9.prototype.cancel=function(){if(this.i=ti(this),this.h)this.h.cancel(),this.h=null;else if(this.g&&this.g.size!==0){for(const e of this.g.values())e.cancel();this.g.clear()}};function ti(e){if(e.h!=null)return e.i.concat(e.h.D);if(e.g!=null&&e.g.size!==0){let t=e.i;for(const n of e.g.values())t=t.concat(n.D);return t}return V6(e.i)}function sn(){}sn.prototype.stringify=function(e){return H.JSON.stringify(e,void 0)};sn.prototype.parse=function(e){return H.JSON.parse(e,void 0)};function Dh(){this.g=new sn}function kh(e,t,n){const s=n||"";try{tn(e,function(i,r){let o=i;re(i)&&(o=G6(i)),t.push(s+r+"="+encodeURIComponent(o))})}catch(i){throw t.push(s+"type="+encodeURIComponent("_badmap")),i}}function Rh(e,t){const n=new C4;if(H.Image){const s=new Image;s.onload=xe(Ie,n,s,"TestLoadImage: loaded",!0,t),s.onerror=xe(Ie,n,s,"TestLoadImage: error",!1,t),s.onabort=xe(Ie,n,s,"TestLoadImage: abort",!1,t),s.ontimeout=xe(Ie,n,s,"TestLoadImage: timeout",!1,t),H.setTimeout(function(){s.ontimeout&&s.ontimeout()},1e4),s.src=e}else t(!1)}function Ie(e,t,n,s,i){try{t.onload=null,t.onerror=null,t.onabort=null,t.ontimeout=null,i(s)}catch{}}function he(e){this.l=e.$b||null,this.j=e.ib||!1}H1(he,Y6);he.prototype.g=function(){return new k4(this.l,this.j)};he.prototype.i=function(e){return function(){return e}}({});function k4(e,t){L1.call(this),this.D=e,this.u=t,this.m=void 0,this.readyState=rn,this.status=0,this.responseType=this.responseText=this.response=this.statusText="",this.onreadystatechange=null,this.v=new Headers,this.h=null,this.C="GET",this.B="",this.g=!1,this.A=this.j=this.l=null}H1(k4,L1);var rn=0;M=k4.prototype;M.open=function(e,t){if(this.readyState!=rn)throw this.abort(),Error("Error reopening a connection");this.C=e,this.B=t,this.readyState=1,Jt(this)};M.send=function(e){if(this.readyState!=1)throw this.abort(),Error("need to call open() first. ");this.g=!0;const t={headers:this.v,method:this.C,credentials:this.m,cache:void 0};e&&(t.body=e),(this.D||H).fetch(new Request(this.B,t)).then(this.Va.bind(this),this.ha.bind(this))};M.abort=function(){this.response=this.responseText="",this.v=new Headers,this.status=0,this.j&&this.j.cancel("Request was aborted."),1<=this.readyState&&this.g&&this.readyState!=4&&(this.g=!1,fe(this)),this.readyState=rn};M.Va=function(e){if(this.g&&(this.l=e,this.h||(this.status=this.l.status,this.statusText=this.l.statusText,this.h=e.headers,this.readyState=2,Jt(this)),this.g&&(this.readyState=3,Jt(this),this.g)))if(this.responseType==="arraybuffer")e.arrayBuffer().then(this.Ta.bind(this),this.ha.bind(this));else if(typeof H.ReadableStream<"u"&&"body"in e){if(this.j=e.body.getReader(),this.u){if(this.responseType)throw Error('responseType must be empty for "streamBinaryChunks" mode responses.');this.response=[]}else this.response=this.responseText="",this.A=new TextDecoder;ei(this)}else e.text().then(this.Ua.bind(this),this.ha.bind(this))};function ei(e){e.j.read().then(e.Sa.bind(e)).catch(e.ha.bind(e))}M.Sa=function(e){if(this.g){if(this.u&&e.value)this.response.push(e.value);else if(!this.u){var t=e.value?e.value:new Uint8Array(0);(t=this.A.decode(t,{stream:!e.done}))&&(this.response=this.responseText+=t)}e.done?fe(this):Jt(this),this.readyState==3&&ei(this)}};M.Ua=function(e){this.g&&(this.response=this.responseText=e,fe(this))};M.Ta=function(e){this.g&&(this.response=e,fe(this))};M.ha=function(){this.g&&fe(this)};function fe(e){e.readyState=4,e.l=null,e.j=null,e.A=null,Jt(e)}M.setRequestHeader=function(e,t){this.v.append(e,t)};M.getResponseHeader=function(e){return this.h&&this.h.get(e.toLowerCase())||""};M.getAllResponseHeaders=function(){if(!this.h)return"";const e=[],t=this.h.entries();for(var n=t.next();!n.done;)n=n.value,e.push(n[0]+": "+n[1]),n=t.next();return e.join(`\r
`)};function Jt(e){e.onreadystatechange&&e.onreadystatechange.call(e)}Object.defineProperty(k4.prototype,"withCredentials",{get:function(){return this.m==="include"},set:function(e){this.m=e?"include":"same-origin"}});var Oh=H.JSON.parse;function D1(e){L1.call(this),this.headers=new pt,this.u=e||null,this.h=!1,this.C=this.g=null,this.H="",this.m=0,this.j="",this.l=this.F=this.v=this.D=!1,this.B=0,this.A=null,this.J=ni,this.K=this.L=!1}H1(D1,L1);var ni="",Mh=/^https?$/i,Ph=["POST","PUT"];M=D1.prototype;M.ea=function(e,t,n,s){if(this.g)throw Error("[goog.net.XhrIo] Object is active with another request="+this.H+"; newUri="+e);t=t?t.toUpperCase():"GET",this.H=e,this.j="",this.m=0,this.D=!1,this.h=!0,this.g=this.u?this.u.g():W5.g(),this.C=this.u?j7(this.u):j7(W5),this.g.onreadystatechange=$1(this.Fa,this);try{this.F=!0,this.g.open(t,String(e),!0),this.F=!1}catch(r){q7(this,r);return}e=n||"";const i=new pt(this.headers);s&&tn(s,function(r,o){i.set(o,r)}),s=qu(i.T()),n=H.FormData&&e instanceof H.FormData,!(0<=w9(Ph,t))||s||n||i.set("Content-Type","application/x-www-form-urlencoded;charset=utf-8"),i.forEach(function(r,o){this.g.setRequestHeader(o,r)},this),this.J&&(this.g.responseType=this.J),"withCredentials"in this.g&&this.g.withCredentials!==this.L&&(this.g.withCredentials=this.L);try{ri(this),0<this.B&&((this.K=zh(this.g))?(this.g.timeout=this.B,this.g.ontimeout=$1(this.pa,this)):this.A=X6(this.pa,this.B,this)),this.v=!0,this.g.send(e),this.v=!1}catch(r){q7(this,r)}};function zh(e){return nt&&Yu()&&typeof e.timeout=="number"&&e.ontimeout!==void 0}function Lh(e){return e.toLowerCase()=="content-type"}M.pa=function(){typeof B6<"u"&&this.g&&(this.j="Timed out after "+this.B+"ms, aborting",this.m=8,U1(this,"timeout"),this.abort(8))};function q7(e,t){e.h=!1,e.g&&(e.l=!0,e.g.abort(),e.l=!1),e.j=t,e.m=5,si(e),R4(e)}function si(e){e.D||(e.D=!0,U1(e,"complete"),U1(e,"error"))}M.abort=function(e){this.g&&this.h&&(this.h=!1,this.l=!0,this.g.abort(),this.l=!1,this.m=e||7,U1(this,"complete"),U1(this,"abort"),R4(this))};M.M=function(){this.g&&(this.h&&(this.h=!1,this.l=!0,this.g.abort(),this.l=!1),R4(this,!0)),D1.Z.M.call(this)};M.Fa=function(){this.s||(this.F||this.v||this.l?ii(this):this.cb())};M.cb=function(){ii(this)};function ii(e){if(e.h&&typeof B6<"u"&&(!e.C[1]||B2(e)!=4||e.ba()!=2)){if(e.v&&B2(e)==4)X6(e.Fa,0,e);else if(U1(e,"readystatechange"),B2(e)==4){e.h=!1;try{const l=e.ba();t:switch(l){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var t=!0;break t;default:t=!1}var n;if(!(n=t)){var s;if(s=l===0){var i=String(e.H).match(q9)[1]||null;if(!i&&H.self&&H.self.location){var r=H.self.location.protocol;i=r.substr(0,r.length-1)}s=!Mh.test(i?i.toLowerCase():"")}n=s}if(n)U1(e,"complete"),U1(e,"success");else{e.m=6;try{var o=2<B2(e)?e.g.statusText:""}catch{o=""}e.j=o+" ["+e.ba()+"]",si(e)}}finally{R4(e)}}}}function R4(e,t){if(e.g){ri(e);const n=e.g,s=e.C[0]?Ge:null;e.g=null,e.C=null,t||U1(e,"ready");try{n.onreadystatechange=s}catch{}}}function ri(e){e.g&&e.K&&(e.g.ontimeout=null),e.A&&(H.clearTimeout(e.A),e.A=null)}function B2(e){return e.g?e.g.readyState:0}M.ba=function(){try{return 2<B2(this)?this.g.status:-1}catch{return-1}};M.ga=function(){try{return this.g?this.g.responseText:""}catch{return""}};M.Qa=function(e){if(this.g){var t=this.g.responseText;return e&&t.indexOf(e)==0&&(t=t.substring(e.length)),Oh(t)}};function G7(e){try{if(!e.g)return null;if("response"in e.g)return e.g.response;switch(e.J){case ni:case"text":return e.g.responseText;case"arraybuffer":if("mozResponseArrayBuffer"in e.g)return e.g.mozResponseArrayBuffer}return null}catch{return null}}M.Da=function(){return this.m};M.La=function(){return typeof this.j=="string"?this.j:String(this.j)};function Fh(e){let t="";return $6(e,function(n,s){t+=s,t+=":",t+=n,t+=`\r
`}),t}function on(e,t,n){t:{for(s in n){var s=!1;break t}s=!0}s||(n=Fh(n),typeof e=="string"?n!=null&&encodeURIComponent(String(n)):x1(e,t,n))}function Tt(e,t,n){return n&&n.internalChannelParams&&n.internalChannelParams[e]||t}function oi(e){this.za=0,this.l=[],this.h=new C4,this.la=this.oa=this.F=this.W=this.g=this.sa=this.D=this.aa=this.o=this.P=this.s=null,this.Za=this.V=0,this.Xa=Tt("failFast",!1,e),this.N=this.v=this.u=this.m=this.j=null,this.X=!0,this.I=this.ta=this.U=-1,this.Y=this.A=this.C=0,this.Pa=Tt("baseRetryDelayMs",5e3,e),this.$a=Tt("retryDelaySeedMs",1e4,e),this.Ya=Tt("forwardChannelMaxRetries",2,e),this.ra=Tt("forwardChannelRequestTimeoutMs",2e4,e),this.qa=e&&e.xmlHttpFactory||void 0,this.Ba=e&&e.Yb||!1,this.K=void 0,this.H=e&&e.supportsCrossDomainXhr||!1,this.J="",this.i=new X9(e&&e.concurrentRequestLimit),this.Ca=new Dh,this.ja=e&&e.fastHandshake||!1,this.Ra=e&&e.Wb||!1,e&&e.Aa&&this.h.Aa(),e&&e.forceLongPolling&&(this.X=!1),this.$=!this.ja&&this.X&&e&&e.detectBufferingProxy||!1,this.ka=void 0,this.O=0,this.L=!1,this.B=null,this.Wa=!e||e.Xb!==!1}M=oi.prototype;M.ma=8;M.G=1;function ln(e){if(li(e),e.G==3){var t=e.V++,n=U2(e.F);x1(n,"SID",e.J),x1(n,"RID",t),x1(n,"TYPE","terminate"),de(e,n),t=new ce(e,e.h,t,void 0),t.K=2,t.v=D4(U2(n)),n=!1,H.navigator&&H.navigator.sendBeacon&&(n=H.navigator.sendBeacon(t.v.toString(),"")),!n&&H.Image&&(new Image().src=t.v,n=!0),n||(t.g=mi(t.l,null),t.g.ea(t.v)),t.F=Date.now(),ue(t)}di(e)}M.hb=function(e){try{this.h.info("Origin Trials invoked: "+e)}catch{}};function O4(e){e.g&&(cn(e),e.g.cancel(),e.g=null)}function li(e){O4(e),e.u&&(H.clearTimeout(e.u),e.u=null),t4(e),e.i.cancel(),e.m&&(typeof e.m=="number"&&H.clearTimeout(e.m),e.m=null)}function c5(e,t){e.l.push(new Ah(e.Za++,t)),e.G==3&&M4(e)}function M4(e){Y9(e.i)||e.m||(e.m=!0,W6(e.Ha,e),e.C=0)}function Bh(e,t){return J9(e.i)>=e.i.j-(e.m?1:0)?!1:e.m?(e.l=t.D.concat(e.l),!0):e.G==1||e.G==2||e.C>=(e.Xa?0:e.Ya)?!1:(e.m=le($1(e.Ha,e,t),fi(e,e.C)),e.C++,!0)}M.Ha=function(e){if(this.m)if(this.m=null,this.G==1){if(!e){this.V=Math.floor(1e5*Math.random()),e=this.V++;const i=new ce(this,this.h,e,void 0);let r=this.s;if(this.P&&(r?(r=b9(r),_9(r,this.P)):r=this.P),this.o===null&&(i.H=r),this.ja)t:{for(var t=0,n=0;n<this.l.length;n++){e:{var s=this.l[n];if("__data__"in s.g&&(s=s.g.__data__,typeof s=="string")){s=s.length;break e}s=void 0}if(s===void 0)break;if(t+=s,4096<t){t=n;break t}if(t===4096||n===this.l.length-1){t=n+1;break t}}t=1e3}else t=1e3;t=ai(this,i,t),n=U2(this.F),x1(n,"RID",e),x1(n,"CVER",22),this.D&&x1(n,"X-HTTP-Session-Id",this.D),de(this,n),this.o&&r&&on(n,this.o,r),nn(this.i,i),this.Ra&&x1(n,"TYPE","init"),this.ja?(x1(n,"$req",t),x1(n,"SID","null"),i.$=!0,X5(i,n,null)):X5(i,n,t),this.G=2}}else this.G==3&&(e?W7(this,e):this.l.length==0||Y9(this.i)||W7(this))};function W7(e,t){var n;t?n=t.m:n=e.V++;const s=U2(e.F);x1(s,"SID",e.J),x1(s,"RID",n),x1(s,"AID",e.U),de(e,s),e.o&&e.s&&on(s,e.o,e.s),n=new ce(e,e.h,n,e.C+1),e.o===null&&(n.H=e.s),t&&(e.l=t.D.concat(e.l)),t=ai(e,n,1e3),n.setTimeout(Math.round(.5*e.ra)+Math.round(.5*e.ra*Math.random())),nn(e.i,n),X5(n,s,t)}function de(e,t){e.j&&tn({},function(n,s){x1(t,s,n)})}function ai(e,t,n){n=Math.min(e.l.length,n);var s=e.j?$1(e.j.Oa,e.j,e):null;t:{var i=e.l;let r=-1;for(;;){const o=["count="+n];r==-1?0<n?(r=i[0].h,o.push("ofs="+r)):r=0:o.push("ofs="+r);let l=!0;for(let a=0;a<n;a++){let c=i[a].h;const u=i[a].g;if(c-=r,0>c)r=Math.max(0,i[a].h-100),l=!1;else try{kh(u,o,"req"+c+"_")}catch{s&&s(u)}}if(l){s=o.join("&");break t}}}return e=e.l.splice(0,n),t.D=e,s}function ci(e){e.g||e.u||(e.Y=1,W6(e.Ga,e),e.A=0)}function an(e){return e.g||e.u||3<=e.A?!1:(e.Y++,e.u=le($1(e.Ga,e),fi(e,e.A)),e.A++,!0)}M.Ga=function(){if(this.u=null,ui(this),this.$&&!(this.L||this.g==null||0>=this.O)){var e=2*this.O;this.h.info("BP detection timer enabled: "+e),this.B=le($1(this.bb,this),e)}};M.bb=function(){this.B&&(this.B=null,this.h.info("BP detection timeout reached."),this.h.info("Buffering proxy detected and switch to long-polling!"),this.N=!1,this.L=!0,Y1(10),O4(this),ui(this))};function cn(e){e.B!=null&&(H.clearTimeout(e.B),e.B=null)}function ui(e){e.g=new ce(e,e.h,"rpc",e.Y),e.o===null&&(e.g.H=e.s),e.g.O=0;var t=U2(e.oa);x1(t,"RID","rpc"),x1(t,"SID",e.J),x1(t,"CI",e.N?"0":"1"),x1(t,"AID",e.U),de(e,t),x1(t,"TYPE","xmlhttp"),e.o&&e.s&&on(t,e.o,e.s),e.K&&e.g.setTimeout(e.K);var n=e.g;e=e.la,n.K=1,n.v=D4(U2(t)),n.s=null,n.U=!0,U9(n,e)}M.ab=function(){this.v!=null&&(this.v=null,O4(this),an(this),Y1(19))};function t4(e){e.v!=null&&(H.clearTimeout(e.v),e.v=null)}function hi(e,t){var n=null;if(e.g==t){t4(e),cn(e),e.g=null;var s=2}else if(J5(e.i,t))n=t.D,Z9(e.i,t),s=1;else return;if(e.I=t.N,e.G!=0){if(t.i)if(s==1){n=t.s?t.s.length:0,t=Date.now()-t.F;var i=e.C;s=I4(),U1(s,new F9(s,n)),M4(e)}else ci(e);else if(i=t.o,i==3||i==0&&0<e.I||!(s==1&&Bh(e,t)||s==2&&an(e)))switch(n&&0<n.length&&(t=e.i,t.i=t.i.concat(n)),i){case 1:g3(e,5);break;case 4:g3(e,10);break;case 3:g3(e,6);break;default:g3(e,2)}}}function fi(e,t){let n=e.Pa+Math.floor(Math.random()*e.$a);return e.j||(n*=2),n*t}function g3(e,t){if(e.h.info("Error code "+t),t==2){var n=null;e.j&&(n=null);var s=$1(e.jb,e);n||(n=new C3("//www.google.com/images/cleardot.gif"),H.location&&H.location.protocol=="http"||Ye(n,"https"),D4(n)),Rh(n.toString(),s)}else Y1(2);e.G=0,e.j&&e.j.va(t),di(e),li(e)}M.jb=function(e){e?(this.h.info("Successfully pinged google.com"),Y1(2)):(this.h.info("Failed to ping google.com"),Y1(1))};function di(e){e.G=0,e.I=-1,e.j&&((ti(e.i).length!=0||e.l.length!=0)&&(e.i.i.length=0,V6(e.l),e.l.length=0),e.j.ua())}function pi(e,t,n){let s=Eh(n);if(s.i!="")t&&Je(s,t+"."+s.i),Ze(s,s.m);else{const i=H.location;s=bh(i.protocol,t?t+"."+i.hostname:i.hostname,+i.port,n)}return e.aa&&$6(e.aa,function(i,r){x1(s,r,i)}),t=e.D,n=e.sa,t&&n&&x1(s,t,n),x1(s,"VER",e.ma),de(e,s),s}function mi(e,t,n){if(t&&!e.H)throw Error("Can't create secondary domain capable XhrIo object.");return t=n&&e.Ba&&!e.qa?new D1(new he({ib:!0})):new D1(e.qa),t.L=e.H,t}function gi(){}M=gi.prototype;M.xa=function(){};M.wa=function(){};M.va=function(){};M.ua=function(){};M.Oa=function(){};function e4(){if(nt&&!(10<=Number(Ju)))throw Error("Environmental error: no available transport.")}e4.prototype.g=function(e,t){return new u2(e,t)};function u2(e,t){L1.call(this),this.g=new oi(t),this.l=e,this.h=t&&t.messageUrlParams||null,e=t&&t.messageHeaders||null,t&&t.clientProtocolHeaderRequired&&(e?e["X-Client-Protocol"]="webchannel":e={"X-Client-Protocol":"webchannel"}),this.g.s=e,e=t&&t.initMessageHeaders||null,t&&t.messageContentType&&(e?e["X-WebChannel-Content-Type"]=t.messageContentType:e={"X-WebChannel-Content-Type":t.messageContentType}),t&&t.ya&&(e?e["X-WebChannel-Client-Profile"]=t.ya:e={"X-WebChannel-Client-Profile":t.ya}),this.g.P=e,(e=t&&t.httpHeadersOverwriteParam)&&!We(e)&&(this.g.o=e),this.A=t&&t.supportsCrossDomainXhr||!1,this.v=t&&t.sendRawJson||!1,(t=t&&t.httpSessionIdParam)&&!We(t)&&(this.g.D=t,e=this.h,e!==null&&t in e&&(e=this.h,t in e&&delete e[t])),this.j=new gt(this)}H1(u2,L1);u2.prototype.m=function(){this.g.j=this.j,this.A&&(this.g.H=!0);var e=this.g,t=this.l,n=this.h||void 0;e.Wa&&(e.h.info("Origin Trials enabled."),W6($1(e.hb,e,t))),Y1(0),e.W=t,e.aa=n||{},e.N=e.X,e.F=pi(e,null,e.W),M4(e)};u2.prototype.close=function(){ln(this.g)};u2.prototype.u=function(e){if(typeof e=="string"){var t={};t.__data__=e,c5(this.g,t)}else this.v?(t={},t.__data__=G6(e),c5(this.g,t)):c5(this.g,e)};u2.prototype.M=function(){this.g.j=null,delete this.j,ln(this.g),delete this.g,u2.Z.M.call(this)};function vi(e){J6.call(this);var t=e.__sm__;if(t){t:{for(const n in t){e=n;break t}e=void 0}(this.i=e)&&(e=this.i,t=t!==null&&e in t?t[e]:void 0),this.data=t}else this.data=e}H1(vi,J6);function yi(){Z6.call(this),this.status=1}H1(yi,Z6);function gt(e){this.g=e}H1(gt,gi);gt.prototype.xa=function(){U1(this.g,"a")};gt.prototype.wa=function(e){U1(this.g,new vi(e))};gt.prototype.va=function(e){U1(this.g,new yi)};gt.prototype.ua=function(){U1(this.g,"b")};e4.prototype.createWebChannel=e4.prototype.g;u2.prototype.send=u2.prototype.u;u2.prototype.open=u2.prototype.m;u2.prototype.close=u2.prototype.close;S4.NO_ERROR=0;S4.TIMEOUT=8;S4.HTTP_ERROR=6;B9.COMPLETE="complete";V9.EventType=ae;ae.OPEN="a";ae.CLOSE="b";ae.ERROR="c";ae.MESSAGE="d";L1.prototype.listen=L1.prototype.N;D1.prototype.listenOnce=D1.prototype.O;D1.prototype.getLastError=D1.prototype.La;D1.prototype.getLastErrorCode=D1.prototype.Da;D1.prototype.getStatus=D1.prototype.ba;D1.prototype.getResponseJson=D1.prototype.Qa;D1.prototype.getResponseText=D1.prototype.ga;D1.prototype.send=D1.prototype.ea;var Vh=function(){return new e4},$h=function(){return I4()},u5=S4,Uh=B9,jh=k3,Q7={rb:0,ub:1,vb:2,Ob:3,Tb:4,Qb:5,Rb:6,Pb:7,Nb:8,Sb:9,PROXY:10,NOPROXY:11,Lb:12,Hb:13,Ib:14,Gb:15,Jb:16,Kb:17,nb:18,mb:19,ob:20},Hh=he,Se=V9,Kh=D1;const X7="@firebase/firestore";/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class t2{constructor(t){this.uid=t}isAuthenticated(){return this.uid!=null}toKey(){return this.isAuthenticated()?"uid:"+this.uid:"anonymous-user"}isEqual(t){return t.uid===this.uid}}t2.UNAUTHENTICATED=new t2(null),t2.GOOGLE_CREDENTIALS=new t2("google-credentials-uid"),t2.FIRST_PARTY=new t2("first-party-uid"),t2.MOCK_USER=new t2("mock-user");/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */let vt="9.9.1";/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const I3=new d9("@firebase/firestore");function Y7(){return I3.logLevel}function F(e,...t){if(I3.logLevel<=c1.DEBUG){const n=t.map(un);I3.debug(`Firestore (${vt}): ${e}`,...n)}}function s3(e,...t){if(I3.logLevel<=c1.ERROR){const n=t.map(un);I3.error(`Firestore (${vt}): ${e}`,...n)}}function J7(e,...t){if(I3.logLevel<=c1.WARN){const n=t.map(un);I3.warn(`Firestore (${vt}): ${e}`,...n)}}function un(e){if(typeof e=="string")return e;try{return t=e,JSON.stringify(t)}catch{return e}/**
* @license
* Copyright 2020 Google LLC
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/var t}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function t1(e="Unexpected state"){const t=`FIRESTORE (${vt}) INTERNAL ASSERTION FAILED: `+e;throw s3(t),new Error(t)}function N1(e,t){e||t1()}function l1(e,t){return e}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const k={OK:"ok",CANCELLED:"cancelled",UNKNOWN:"unknown",INVALID_ARGUMENT:"invalid-argument",DEADLINE_EXCEEDED:"deadline-exceeded",NOT_FOUND:"not-found",ALREADY_EXISTS:"already-exists",PERMISSION_DENIED:"permission-denied",UNAUTHENTICATED:"unauthenticated",RESOURCE_EXHAUSTED:"resource-exhausted",FAILED_PRECONDITION:"failed-precondition",ABORTED:"aborted",OUT_OF_RANGE:"out-of-range",UNIMPLEMENTED:"unimplemented",INTERNAL:"internal",UNAVAILABLE:"unavailable",DATA_LOSS:"data-loss"};class j extends b4{constructor(t,n){super(t,n),this.code=t,this.message=n,this.toString=()=>`${this.name}: [code=${this.code}]: ${this.message}`}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class w3{constructor(){this.promise=new Promise((t,n)=>{this.resolve=t,this.reject=n})}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class qh{constructor(t,n){this.user=n,this.type="OAuth",this.headers=new Map,this.headers.set("Authorization",`Bearer ${t}`)}}class Gh{getToken(){return Promise.resolve(null)}invalidateToken(){}start(t,n){t.enqueueRetryable(()=>n(t2.UNAUTHENTICATED))}shutdown(){}}class Wh{constructor(t){this.t=t,this.currentUser=t2.UNAUTHENTICATED,this.i=0,this.forceRefresh=!1,this.auth=null}start(t,n){let s=this.i;const i=a=>this.i!==s?(s=this.i,n(a)):Promise.resolve();let r=new w3;this.o=()=>{this.i++,this.currentUser=this.u(),r.resolve(),r=new w3,t.enqueueRetryable(()=>i(this.currentUser))};const o=()=>{const a=r;t.enqueueRetryable(async()=>{await a.promise,await i(this.currentUser)})},l=a=>{F("FirebaseAuthCredentialsProvider","Auth detected"),this.auth=a,this.auth.addAuthTokenListener(this.o),o()};this.t.onInit(a=>l(a)),setTimeout(()=>{if(!this.auth){const a=this.t.getImmediate({optional:!0});a?l(a):(F("FirebaseAuthCredentialsProvider","Auth not yet detected"),r.resolve(),r=new w3)}},0),o()}getToken(){const t=this.i,n=this.forceRefresh;return this.forceRefresh=!1,this.auth?this.auth.getToken(n).then(s=>this.i!==t?(F("FirebaseAuthCredentialsProvider","getToken aborted due to token change."),this.getToken()):s?(N1(typeof s.accessToken=="string"),new qh(s.accessToken,this.currentUser)):null):Promise.resolve(null)}invalidateToken(){this.forceRefresh=!0}shutdown(){this.auth&&this.auth.removeAuthTokenListener(this.o)}u(){const t=this.auth&&this.auth.getUid();return N1(t===null||typeof t=="string"),new t2(t)}}class Qh{constructor(t,n,s){this.type="FirstParty",this.user=t2.FIRST_PARTY,this.headers=new Map,this.headers.set("X-Goog-AuthUser",n);const i=t.auth.getAuthHeaderValueForFirstParty([]);i&&this.headers.set("Authorization",i),s&&this.headers.set("X-Goog-Iam-Authorization-Token",s)}}class Xh{constructor(t,n,s){this.h=t,this.l=n,this.m=s}getToken(){return Promise.resolve(new Qh(this.h,this.l,this.m))}start(t,n){t.enqueueRetryable(()=>n(t2.FIRST_PARTY))}shutdown(){}invalidateToken(){}}class Yh{constructor(t){this.value=t,this.type="AppCheck",this.headers=new Map,t&&t.length>0&&this.headers.set("x-firebase-appcheck",this.value)}}class Jh{constructor(t){this.g=t,this.forceRefresh=!1,this.appCheck=null,this.p=null}start(t,n){const s=r=>{r.error!=null&&F("FirebaseAppCheckTokenProvider",`Error getting App Check token; using placeholder token instead. Error: ${r.error.message}`);const o=r.token!==this.p;return this.p=r.token,F("FirebaseAppCheckTokenProvider",`Received ${o?"new":"existing"} token.`),o?n(r.token):Promise.resolve()};this.o=r=>{t.enqueueRetryable(()=>s(r))};const i=r=>{F("FirebaseAppCheckTokenProvider","AppCheck detected"),this.appCheck=r,this.appCheck.addTokenListener(this.o)};this.g.onInit(r=>i(r)),setTimeout(()=>{if(!this.appCheck){const r=this.g.getImmediate({optional:!0});r?i(r):F("FirebaseAppCheckTokenProvider","AppCheck not yet detected")}},0)}getToken(){const t=this.forceRefresh;return this.forceRefresh=!1,this.appCheck?this.appCheck.getToken(t).then(n=>n?(N1(typeof n.token=="string"),this.p=n.token,new Yh(n.token)):null):Promise.resolve(null)}invalidateToken(){this.forceRefresh=!0}shutdown(){this.appCheck&&this.appCheck.removeTokenListener(this.o)}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function Zh(e){const t=typeof self<"u"&&(self.crypto||self.msCrypto),n=new Uint8Array(e);if(t&&typeof t.getRandomValues=="function")t.getRandomValues(n);else for(let s=0;s<e;s++)n[s]=Math.floor(256*Math.random());return n}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class wi{static I(){const t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",n=Math.floor(256/t.length)*t.length;let s="";for(;s.length<20;){const i=Zh(40);for(let r=0;r<i.length;++r)s.length<20&&i[r]<n&&(s+=t.charAt(i[r]%t.length))}return s}}function h1(e,t){return e<t?-1:e>t?1:0}function st(e,t,n){return e.length===t.length&&e.every((s,i)=>n(s,t[i]))}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class s2{constructor(t,n){if(this.seconds=t,this.nanoseconds=n,n<0)throw new j(k.INVALID_ARGUMENT,"Timestamp nanoseconds out of range: "+n);if(n>=1e9)throw new j(k.INVALID_ARGUMENT,"Timestamp nanoseconds out of range: "+n);if(t<-62135596800)throw new j(k.INVALID_ARGUMENT,"Timestamp seconds out of range: "+t);if(t>=253402300800)throw new j(k.INVALID_ARGUMENT,"Timestamp seconds out of range: "+t)}static now(){return s2.fromMillis(Date.now())}static fromDate(t){return s2.fromMillis(t.getTime())}static fromMillis(t){const n=Math.floor(t/1e3),s=Math.floor(1e6*(t-1e3*n));return new s2(n,s)}toDate(){return new Date(this.toMillis())}toMillis(){return 1e3*this.seconds+this.nanoseconds/1e6}_compareTo(t){return this.seconds===t.seconds?h1(this.nanoseconds,t.nanoseconds):h1(this.seconds,t.seconds)}isEqual(t){return t.seconds===this.seconds&&t.nanoseconds===this.nanoseconds}toString(){return"Timestamp(seconds="+this.seconds+", nanoseconds="+this.nanoseconds+")"}toJSON(){return{seconds:this.seconds,nanoseconds:this.nanoseconds}}valueOf(){const t=this.seconds- -62135596800;return String(t).padStart(12,"0")+"."+String(this.nanoseconds).padStart(9,"0")}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Z{constructor(t){this.timestamp=t}static fromTimestamp(t){return new Z(t)}static min(){return new Z(new s2(0,0))}static max(){return new Z(new s2(253402300799,999999999))}compareTo(t){return this.timestamp._compareTo(t.timestamp)}isEqual(t){return this.timestamp.isEqual(t.timestamp)}toMicroseconds(){return 1e6*this.timestamp.seconds+this.timestamp.nanoseconds/1e3}toString(){return"SnapshotVersion("+this.timestamp.toString()+")"}toTimestamp(){return this.timestamp}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Zt{constructor(t,n,s){n===void 0?n=0:n>t.length&&t1(),s===void 0?s=t.length-n:s>t.length-n&&t1(),this.segments=t,this.offset=n,this.len=s}get length(){return this.len}isEqual(t){return Zt.comparator(this,t)===0}child(t){const n=this.segments.slice(this.offset,this.limit());return t instanceof Zt?t.forEach(s=>{n.push(s)}):n.push(t),this.construct(n)}limit(){return this.offset+this.length}popFirst(t){return t=t===void 0?1:t,this.construct(this.segments,this.offset+t,this.length-t)}popLast(){return this.construct(this.segments,this.offset,this.length-1)}firstSegment(){return this.segments[this.offset]}lastSegment(){return this.get(this.length-1)}get(t){return this.segments[this.offset+t]}isEmpty(){return this.length===0}isPrefixOf(t){if(t.length<this.length)return!1;for(let n=0;n<this.length;n++)if(this.get(n)!==t.get(n))return!1;return!0}isImmediateParentOf(t){if(this.length+1!==t.length)return!1;for(let n=0;n<this.length;n++)if(this.get(n)!==t.get(n))return!1;return!0}forEach(t){for(let n=this.offset,s=this.limit();n<s;n++)t(this.segments[n])}toArray(){return this.segments.slice(this.offset,this.limit())}static comparator(t,n){const s=Math.min(t.length,n.length);for(let i=0;i<s;i++){const r=t.get(i),o=n.get(i);if(r<o)return-1;if(r>o)return 1}return t.length<n.length?-1:t.length>n.length?1:0}}class C1 extends Zt{construct(t,n,s){return new C1(t,n,s)}canonicalString(){return this.toArray().join("/")}toString(){return this.canonicalString()}static fromString(...t){const n=[];for(const s of t){if(s.indexOf("//")>=0)throw new j(k.INVALID_ARGUMENT,`Invalid segment (${s}). Paths must not contain // in them.`);n.push(...s.split("/").filter(i=>i.length>0))}return new C1(n)}static emptyPath(){return new C1([])}}const tf=/^[_a-zA-Z][_a-zA-Z0-9]*$/;class e2 extends Zt{construct(t,n,s){return new e2(t,n,s)}static isValidIdentifier(t){return tf.test(t)}canonicalString(){return this.toArray().map(t=>(t=t.replace(/\\/g,"\\\\").replace(/`/g,"\\`"),e2.isValidIdentifier(t)||(t="`"+t+"`"),t)).join(".")}toString(){return this.canonicalString()}isKeyField(){return this.length===1&&this.get(0)==="__name__"}static keyField(){return new e2(["__name__"])}static fromServerFormat(t){const n=[];let s="",i=0;const r=()=>{if(s.length===0)throw new j(k.INVALID_ARGUMENT,`Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);n.push(s),s=""};let o=!1;for(;i<t.length;){const l=t[i];if(l==="\\"){if(i+1===t.length)throw new j(k.INVALID_ARGUMENT,"Path has trailing escape character: "+t);const a=t[i+1];if(a!=="\\"&&a!=="."&&a!=="`")throw new j(k.INVALID_ARGUMENT,"Path has invalid escape sequence: "+t);s+=a,i+=2}else l==="`"?(o=!o,i++):l!=="."||o?(s+=l,i++):(r(),i++)}if(r(),o)throw new j(k.INVALID_ARGUMENT,"Unterminated ` in path: "+t);return new e2(n)}static emptyPath(){return new e2([])}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class ${constructor(t){this.path=t}static fromPath(t){return new $(C1.fromString(t))}static fromName(t){return new $(C1.fromString(t).popFirst(5))}static empty(){return new $(C1.emptyPath())}get collectionGroup(){return this.path.popLast().lastSegment()}hasCollectionId(t){return this.path.length>=2&&this.path.get(this.path.length-2)===t}getCollectionGroup(){return this.path.get(this.path.length-2)}getCollectionPath(){return this.path.popLast()}isEqual(t){return t!==null&&C1.comparator(this.path,t.path)===0}toString(){return this.path.toString()}static comparator(t,n){return C1.comparator(t.path,n.path)}static isDocumentKey(t){return t.length%2==0}static fromSegments(t){return new $(new C1(t.slice()))}}function ef(e,t){const n=e.toTimestamp().seconds,s=e.toTimestamp().nanoseconds+1,i=Z.fromTimestamp(s===1e9?new s2(n+1,0):new s2(n,s));return new i3(i,$.empty(),t)}function nf(e){return new i3(e.readTime,e.key,-1)}class i3{constructor(t,n,s){this.readTime=t,this.documentKey=n,this.largestBatchId=s}static min(){return new i3(Z.min(),$.empty(),-1)}static max(){return new i3(Z.max(),$.empty(),-1)}}function sf(e,t){let n=e.readTime.compareTo(t.readTime);return n!==0?n:(n=$.comparator(e.documentKey,t.documentKey),n!==0?n:h1(e.largestBatchId,t.largestBatchId))}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const rf="The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.";class of{constructor(){this.onCommittedListeners=[]}addOnCommittedListener(t){this.onCommittedListeners.push(t)}raiseOnCommittedEvent(){this.onCommittedListeners.forEach(t=>t())}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function hn(e){if(e.code!==k.FAILED_PRECONDITION||e.message!==rf)throw e;F("LocalStore","Unexpectedly lost primary lease")}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class T{constructor(t){this.nextCallback=null,this.catchCallback=null,this.result=void 0,this.error=void 0,this.isDone=!1,this.callbackAttached=!1,t(n=>{this.isDone=!0,this.result=n,this.nextCallback&&this.nextCallback(n)},n=>{this.isDone=!0,this.error=n,this.catchCallback&&this.catchCallback(n)})}catch(t){return this.next(void 0,t)}next(t,n){return this.callbackAttached&&t1(),this.callbackAttached=!0,this.isDone?this.error?this.wrapFailure(n,this.error):this.wrapSuccess(t,this.result):new T((s,i)=>{this.nextCallback=r=>{this.wrapSuccess(t,r).next(s,i)},this.catchCallback=r=>{this.wrapFailure(n,r).next(s,i)}})}toPromise(){return new Promise((t,n)=>{this.next(t,n)})}wrapUserFunction(t){try{const n=t();return n instanceof T?n:T.resolve(n)}catch(n){return T.reject(n)}}wrapSuccess(t,n){return t?this.wrapUserFunction(()=>t(n)):T.resolve(n)}wrapFailure(t,n){return t?this.wrapUserFunction(()=>t(n)):T.reject(n)}static resolve(t){return new T((n,s)=>{n(t)})}static reject(t){return new T((n,s)=>{s(t)})}static waitFor(t){return new T((n,s)=>{let i=0,r=0,o=!1;t.forEach(l=>{++i,l.next(()=>{++r,o&&r===i&&n()},a=>s(a))}),o=!0,r===i&&n()})}static or(t){let n=T.resolve(!1);for(const s of t)n=n.next(i=>i?T.resolve(i):s());return n}static forEach(t,n){const s=[];return t.forEach((i,r)=>{s.push(n.call(this,i,r))}),this.waitFor(s)}static mapArray(t,n){return new T((s,i)=>{const r=t.length,o=new Array(r);let l=0;for(let a=0;a<r;a++){const c=a;n(t[c]).next(u=>{o[c]=u,++l,l===r&&s(o)},u=>i(u))}})}static doWhile(t,n){return new T((s,i)=>{const r=()=>{t()===!0?n().next(()=>{r()},i):s()};r()})}}function pe(e){return e.name==="IndexedDbTransactionError"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class fn{constructor(t,n){this.previousValue=t,n&&(n.sequenceNumberHandler=s=>this.it(s),this.rt=s=>n.writeSequenceNumber(s))}it(t){return this.previousValue=Math.max(t,this.previousValue),this.previousValue}next(){const t=++this.previousValue;return this.rt&&this.rt(t),t}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function Z7(e){let t=0;for(const n in e)Object.prototype.hasOwnProperty.call(e,n)&&t++;return t}function P4(e,t){for(const n in e)Object.prototype.hasOwnProperty.call(e,n)&&t(n,e[n])}function lf(e){for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t))return!1;return!0}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */fn.ot=-1;class F1{constructor(t,n){this.comparator=t,this.root=n||B1.EMPTY}insert(t,n){return new F1(this.comparator,this.root.insert(t,n,this.comparator).copy(null,null,B1.BLACK,null,null))}remove(t){return new F1(this.comparator,this.root.remove(t,this.comparator).copy(null,null,B1.BLACK,null,null))}get(t){let n=this.root;for(;!n.isEmpty();){const s=this.comparator(t,n.key);if(s===0)return n.value;s<0?n=n.left:s>0&&(n=n.right)}return null}indexOf(t){let n=0,s=this.root;for(;!s.isEmpty();){const i=this.comparator(t,s.key);if(i===0)return n+s.left.size;i<0?s=s.left:(n+=s.left.size+1,s=s.right)}return-1}isEmpty(){return this.root.isEmpty()}get size(){return this.root.size}minKey(){return this.root.minKey()}maxKey(){return this.root.maxKey()}inorderTraversal(t){return this.root.inorderTraversal(t)}forEach(t){this.inorderTraversal((n,s)=>(t(n,s),!1))}toString(){const t=[];return this.inorderTraversal((n,s)=>(t.push(`${n}:${s}`),!1)),`{${t.join(", ")}}`}reverseTraversal(t){return this.root.reverseTraversal(t)}getIterator(){return new Ae(this.root,null,this.comparator,!1)}getIteratorFrom(t){return new Ae(this.root,t,this.comparator,!1)}getReverseIterator(){return new Ae(this.root,null,this.comparator,!0)}getReverseIteratorFrom(t){return new Ae(this.root,t,this.comparator,!0)}}class Ae{constructor(t,n,s,i){this.isReverse=i,this.nodeStack=[];let r=1;for(;!t.isEmpty();)if(r=n?s(t.key,n):1,n&&i&&(r*=-1),r<0)t=this.isReverse?t.left:t.right;else{if(r===0){this.nodeStack.push(t);break}this.nodeStack.push(t),t=this.isReverse?t.right:t.left}}getNext(){let t=this.nodeStack.pop();const n={key:t.key,value:t.value};if(this.isReverse)for(t=t.left;!t.isEmpty();)this.nodeStack.push(t),t=t.right;else for(t=t.right;!t.isEmpty();)this.nodeStack.push(t),t=t.left;return n}hasNext(){return this.nodeStack.length>0}peek(){if(this.nodeStack.length===0)return null;const t=this.nodeStack[this.nodeStack.length-1];return{key:t.key,value:t.value}}}class B1{constructor(t,n,s,i,r){this.key=t,this.value=n,this.color=s!=null?s:B1.RED,this.left=i!=null?i:B1.EMPTY,this.right=r!=null?r:B1.EMPTY,this.size=this.left.size+1+this.right.size}copy(t,n,s,i,r){return new B1(t!=null?t:this.key,n!=null?n:this.value,s!=null?s:this.color,i!=null?i:this.left,r!=null?r:this.right)}isEmpty(){return!1}inorderTraversal(t){return this.left.inorderTraversal(t)||t(this.key,this.value)||this.right.inorderTraversal(t)}reverseTraversal(t){return this.right.reverseTraversal(t)||t(this.key,this.value)||this.left.reverseTraversal(t)}min(){return this.left.isEmpty()?this:this.left.min()}minKey(){return this.min().key}maxKey(){return this.right.isEmpty()?this.key:this.right.maxKey()}insert(t,n,s){let i=this;const r=s(t,i.key);return i=r<0?i.copy(null,null,null,i.left.insert(t,n,s),null):r===0?i.copy(null,n,null,null,null):i.copy(null,null,null,null,i.right.insert(t,n,s)),i.fixUp()}removeMin(){if(this.left.isEmpty())return B1.EMPTY;let t=this;return t.left.isRed()||t.left.left.isRed()||(t=t.moveRedLeft()),t=t.copy(null,null,null,t.left.removeMin(),null),t.fixUp()}remove(t,n){let s,i=this;if(n(t,i.key)<0)i.left.isEmpty()||i.left.isRed()||i.left.left.isRed()||(i=i.moveRedLeft()),i=i.copy(null,null,null,i.left.remove(t,n),null);else{if(i.left.isRed()&&(i=i.rotateRight()),i.right.isEmpty()||i.right.isRed()||i.right.left.isRed()||(i=i.moveRedRight()),n(t,i.key)===0){if(i.right.isEmpty())return B1.EMPTY;s=i.right.min(),i=i.copy(s.key,s.value,null,null,i.right.removeMin())}i=i.copy(null,null,null,null,i.right.remove(t,n))}return i.fixUp()}isRed(){return this.color}fixUp(){let t=this;return t.right.isRed()&&!t.left.isRed()&&(t=t.rotateLeft()),t.left.isRed()&&t.left.left.isRed()&&(t=t.rotateRight()),t.left.isRed()&&t.right.isRed()&&(t=t.colorFlip()),t}moveRedLeft(){let t=this.colorFlip();return t.right.left.isRed()&&(t=t.copy(null,null,null,null,t.right.rotateRight()),t=t.rotateLeft(),t=t.colorFlip()),t}moveRedRight(){let t=this.colorFlip();return t.left.left.isRed()&&(t=t.rotateRight(),t=t.colorFlip()),t}rotateLeft(){const t=this.copy(null,null,B1.RED,null,this.right.left);return this.right.copy(null,null,this.color,t,null)}rotateRight(){const t=this.copy(null,null,B1.RED,this.left.right,null);return this.left.copy(null,null,this.color,null,t)}colorFlip(){const t=this.left.copy(null,null,!this.left.color,null,null),n=this.right.copy(null,null,!this.right.color,null,null);return this.copy(null,null,!this.color,t,n)}checkMaxDepth(){const t=this.check();return Math.pow(2,t)<=this.size+1}check(){if(this.isRed()&&this.left.isRed()||this.right.isRed())throw t1();const t=this.left.check();if(t!==this.right.check())throw t1();return t+(this.isRed()?0:1)}}B1.EMPTY=null,B1.RED=!0,B1.BLACK=!1;B1.EMPTY=new class{constructor(){this.size=0}get key(){throw t1()}get value(){throw t1()}get color(){throw t1()}get left(){throw t1()}get right(){throw t1()}copy(e,t,n,s,i){return this}insert(e,t,n){return new B1(e,t)}remove(e,t){return this}isEmpty(){return!0}inorderTraversal(e){return!1}reverseTraversal(e){return!1}minKey(){return null}maxKey(){return null}isRed(){return!1}checkMaxDepth(){return!0}check(){return 0}};/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class R1{constructor(t){this.comparator=t,this.data=new F1(this.comparator)}has(t){return this.data.get(t)!==null}first(){return this.data.minKey()}last(){return this.data.maxKey()}get size(){return this.data.size}indexOf(t){return this.data.indexOf(t)}forEach(t){this.data.inorderTraversal((n,s)=>(t(n),!1))}forEachInRange(t,n){const s=this.data.getIteratorFrom(t[0]);for(;s.hasNext();){const i=s.getNext();if(this.comparator(i.key,t[1])>=0)return;n(i.key)}}forEachWhile(t,n){let s;for(s=n!==void 0?this.data.getIteratorFrom(n):this.data.getIterator();s.hasNext();)if(!t(s.getNext().key))return}firstAfterOrEqual(t){const n=this.data.getIteratorFrom(t);return n.hasNext()?n.getNext().key:null}getIterator(){return new t8(this.data.getIterator())}getIteratorFrom(t){return new t8(this.data.getIteratorFrom(t))}add(t){return this.copy(this.data.remove(t).insert(t,!0))}delete(t){return this.has(t)?this.copy(this.data.remove(t)):this}isEmpty(){return this.data.isEmpty()}unionWith(t){let n=this;return n.size<t.size&&(n=t,t=this),t.forEach(s=>{n=n.add(s)}),n}isEqual(t){if(!(t instanceof R1)||this.size!==t.size)return!1;const n=this.data.getIterator(),s=t.data.getIterator();for(;n.hasNext();){const i=n.getNext().key,r=s.getNext().key;if(this.comparator(i,r)!==0)return!1}return!0}toArray(){const t=[];return this.forEach(n=>{t.push(n)}),t}toString(){const t=[];return this.forEach(n=>t.push(n)),"SortedSet("+t.toString()+")"}copy(t){const n=new R1(this.comparator);return n.data=t,n}}class t8{constructor(t){this.iter=t}getNext(){return this.iter.getNext().key}hasNext(){return this.iter.hasNext()}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class E3{constructor(t){this.fields=t,t.sort(e2.comparator)}static empty(){return new E3([])}unionWith(t){let n=new R1(e2.comparator);for(const s of this.fields)n=n.add(s);for(const s of t)n=n.add(s);return new E3(n.toArray())}covers(t){for(const n of this.fields)if(n.isPrefixOf(t))return!0;return!1}isEqual(t){return st(this.fields,t.fields,(n,s)=>n.isEqual(s))}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class j1{constructor(t){this.binaryString=t}static fromBase64String(t){const n=atob(t);return new j1(n)}static fromUint8Array(t){const n=function(s){let i="";for(let r=0;r<s.length;++r)i+=String.fromCharCode(s[r]);return i}(t);return new j1(n)}[Symbol.iterator](){let t=0;return{next:()=>t<this.binaryString.length?{value:this.binaryString.charCodeAt(t++),done:!1}:{value:void 0,done:!0}}}toBase64(){return t=this.binaryString,btoa(t);var t}toUint8Array(){return function(t){const n=new Uint8Array(t.length);for(let s=0;s<t.length;s++)n[s]=t.charCodeAt(s);return n}(this.binaryString)}approximateByteSize(){return 2*this.binaryString.length}compareTo(t){return h1(this.binaryString,t.binaryString)}isEqual(t){return this.binaryString===t.binaryString}}j1.EMPTY_BYTE_STRING=new j1("");const af=new RegExp(/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(?:\.(\d+))?Z$/);function r3(e){if(N1(!!e),typeof e=="string"){let t=0;const n=af.exec(e);if(N1(!!n),n[1]){let i=n[1];i=(i+"000000000").substr(0,9),t=Number(i)}const s=new Date(e);return{seconds:Math.floor(s.getTime()/1e3),nanos:t}}return{seconds:A1(e.seconds),nanos:A1(e.nanos)}}function A1(e){return typeof e=="number"?e:typeof e=="string"?Number(e):0}function it(e){return typeof e=="string"?j1.fromBase64String(e):j1.fromUint8Array(e)}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function Ei(e){var t,n;return((n=(((t=e==null?void 0:e.mapValue)===null||t===void 0?void 0:t.fields)||{}).__type__)===null||n===void 0?void 0:n.stringValue)==="server_timestamp"}function bi(e){const t=e.mapValue.fields.__previous_value__;return Ei(t)?bi(t):t}function te(e){const t=r3(e.mapValue.fields.__local_write_time__.timestampValue);return new s2(t.seconds,t.nanos)}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class cf{constructor(t,n,s,i,r,o,l,a){this.databaseId=t,this.appId=n,this.persistenceKey=s,this.host=i,this.ssl=r,this.forceLongPolling=o,this.autoDetectLongPolling=l,this.useFetchStreams=a}}class rt{constructor(t,n){this.projectId=t,this.database=n||"(default)"}static empty(){return new rt("","")}get isDefaultDatabase(){return this.database==="(default)"}isEqual(t){return t instanceof rt&&t.projectId===this.projectId&&t.database===this.database}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function z4(e){return e==null}function Z5(e){return e===0&&1/e==-1/0}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Ne={mapValue:{fields:{__type__:{stringValue:"__max__"}}}};function S3(e){return"nullValue"in e?0:"booleanValue"in e?1:"integerValue"in e||"doubleValue"in e?2:"timestampValue"in e?3:"stringValue"in e?5:"bytesValue"in e?6:"referenceValue"in e?7:"geoPointValue"in e?8:"arrayValue"in e?9:"mapValue"in e?Ei(e)?4:uf(e)?9007199254740991:10:t1()}function M2(e,t){if(e===t)return!0;const n=S3(e);if(n!==S3(t))return!1;switch(n){case 0:case 9007199254740991:return!0;case 1:return e.booleanValue===t.booleanValue;case 4:return te(e).isEqual(te(t));case 3:return function(s,i){if(typeof s.timestampValue=="string"&&typeof i.timestampValue=="string"&&s.timestampValue.length===i.timestampValue.length)return s.timestampValue===i.timestampValue;const r=r3(s.timestampValue),o=r3(i.timestampValue);return r.seconds===o.seconds&&r.nanos===o.nanos}(e,t);case 5:return e.stringValue===t.stringValue;case 6:return function(s,i){return it(s.bytesValue).isEqual(it(i.bytesValue))}(e,t);case 7:return e.referenceValue===t.referenceValue;case 8:return function(s,i){return A1(s.geoPointValue.latitude)===A1(i.geoPointValue.latitude)&&A1(s.geoPointValue.longitude)===A1(i.geoPointValue.longitude)}(e,t);case 2:return function(s,i){if("integerValue"in s&&"integerValue"in i)return A1(s.integerValue)===A1(i.integerValue);if("doubleValue"in s&&"doubleValue"in i){const r=A1(s.doubleValue),o=A1(i.doubleValue);return r===o?Z5(r)===Z5(o):isNaN(r)&&isNaN(o)}return!1}(e,t);case 9:return st(e.arrayValue.values||[],t.arrayValue.values||[],M2);case 10:return function(s,i){const r=s.mapValue.fields||{},o=i.mapValue.fields||{};if(Z7(r)!==Z7(o))return!1;for(const l in r)if(r.hasOwnProperty(l)&&(o[l]===void 0||!M2(r[l],o[l])))return!1;return!0}(e,t);default:return t1()}}function ee(e,t){return(e.values||[]).find(n=>M2(n,t))!==void 0}function ot(e,t){if(e===t)return 0;const n=S3(e),s=S3(t);if(n!==s)return h1(n,s);switch(n){case 0:case 9007199254740991:return 0;case 1:return h1(e.booleanValue,t.booleanValue);case 2:return function(i,r){const o=A1(i.integerValue||i.doubleValue),l=A1(r.integerValue||r.doubleValue);return o<l?-1:o>l?1:o===l?0:isNaN(o)?isNaN(l)?0:-1:1}(e,t);case 3:return e8(e.timestampValue,t.timestampValue);case 4:return e8(te(e),te(t));case 5:return h1(e.stringValue,t.stringValue);case 6:return function(i,r){const o=it(i),l=it(r);return o.compareTo(l)}(e.bytesValue,t.bytesValue);case 7:return function(i,r){const o=i.split("/"),l=r.split("/");for(let a=0;a<o.length&&a<l.length;a++){const c=h1(o[a],l[a]);if(c!==0)return c}return h1(o.length,l.length)}(e.referenceValue,t.referenceValue);case 8:return function(i,r){const o=h1(A1(i.latitude),A1(r.latitude));return o!==0?o:h1(A1(i.longitude),A1(r.longitude))}(e.geoPointValue,t.geoPointValue);case 9:return function(i,r){const o=i.values||[],l=r.values||[];for(let a=0;a<o.length&&a<l.length;++a){const c=ot(o[a],l[a]);if(c)return c}return h1(o.length,l.length)}(e.arrayValue,t.arrayValue);case 10:return function(i,r){if(i===Ne.mapValue&&r===Ne.mapValue)return 0;if(i===Ne.mapValue)return 1;if(r===Ne.mapValue)return-1;const o=i.fields||{},l=Object.keys(o),a=r.fields||{},c=Object.keys(a);l.sort(),c.sort();for(let u=0;u<l.length&&u<c.length;++u){const h=h1(l[u],c[u]);if(h!==0)return h;const f=ot(o[l[u]],a[c[u]]);if(f!==0)return f}return h1(l.length,c.length)}(e.mapValue,t.mapValue);default:throw t1()}}function e8(e,t){if(typeof e=="string"&&typeof t=="string"&&e.length===t.length)return h1(e,t);const n=r3(e),s=r3(t),i=h1(n.seconds,s.seconds);return i!==0?i:h1(n.nanos,s.nanos)}function Y3(e){return t6(e)}function t6(e){return"nullValue"in e?"null":"booleanValue"in e?""+e.booleanValue:"integerValue"in e?""+e.integerValue:"doubleValue"in e?""+e.doubleValue:"timestampValue"in e?function(s){const i=r3(s);return`time(${i.seconds},${i.nanos})`}(e.timestampValue):"stringValue"in e?e.stringValue:"bytesValue"in e?it(e.bytesValue).toBase64():"referenceValue"in e?(n=e.referenceValue,$.fromName(n).toString()):"geoPointValue"in e?`geo(${(t=e.geoPointValue).latitude},${t.longitude})`:"arrayValue"in e?function(s){let i="[",r=!0;for(const o of s.values||[])r?r=!1:i+=",",i+=t6(o);return i+"]"}(e.arrayValue):"mapValue"in e?function(s){const i=Object.keys(s.fields||{}).sort();let r="{",o=!0;for(const l of i)o?o=!1:r+=",",r+=`${l}:${t6(s.fields[l])}`;return r+"}"}(e.mapValue):t1();var t,n}function e6(e){return!!e&&"integerValue"in e}function dn(e){return!!e&&"arrayValue"in e}function n8(e){return!!e&&"nullValue"in e}function s8(e){return!!e&&"doubleValue"in e&&isNaN(Number(e.doubleValue))}function h5(e){return!!e&&"mapValue"in e}function Pt(e){if(e.geoPointValue)return{geoPointValue:Object.assign({},e.geoPointValue)};if(e.timestampValue&&typeof e.timestampValue=="object")return{timestampValue:Object.assign({},e.timestampValue)};if(e.mapValue){const t={mapValue:{fields:{}}};return P4(e.mapValue.fields,(n,s)=>t.mapValue.fields[n]=Pt(s)),t}if(e.arrayValue){const t={arrayValue:{values:[]}};for(let n=0;n<(e.arrayValue.values||[]).length;++n)t.arrayValue.values[n]=Pt(e.arrayValue.values[n]);return t}return Object.assign({},e)}function uf(e){return(((e.mapValue||{}).fields||{}).__type__||{}).stringValue==="__max__"}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class k2{constructor(t){this.value=t}static empty(){return new k2({mapValue:{}})}field(t){if(t.isEmpty())return this.value;{let n=this.value;for(let s=0;s<t.length-1;++s)if(n=(n.mapValue.fields||{})[t.get(s)],!h5(n))return null;return n=(n.mapValue.fields||{})[t.lastSegment()],n||null}}set(t,n){this.getFieldsMap(t.popLast())[t.lastSegment()]=Pt(n)}setAll(t){let n=e2.emptyPath(),s={},i=[];t.forEach((o,l)=>{if(!n.isImmediateParentOf(l)){const a=this.getFieldsMap(n);this.applyChanges(a,s,i),s={},i=[],n=l.popLast()}o?s[l.lastSegment()]=Pt(o):i.push(l.lastSegment())});const r=this.getFieldsMap(n);this.applyChanges(r,s,i)}delete(t){const n=this.field(t.popLast());h5(n)&&n.mapValue.fields&&delete n.mapValue.fields[t.lastSegment()]}isEqual(t){return M2(this.value,t.value)}getFieldsMap(t){let n=this.value;n.mapValue.fields||(n.mapValue={fields:{}});for(let s=0;s<t.length;++s){let i=n.mapValue.fields[t.get(s)];h5(i)&&i.mapValue.fields||(i={mapValue:{fields:{}}},n.mapValue.fields[t.get(s)]=i),n=i}return n.mapValue.fields}applyChanges(t,n,s){P4(n,(i,r)=>t[i]=r);for(const i of s)delete t[i]}clone(){return new k2(Pt(this.value))}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class V1{constructor(t,n,s,i,r,o){this.key=t,this.documentType=n,this.version=s,this.readTime=i,this.data=r,this.documentState=o}static newInvalidDocument(t){return new V1(t,0,Z.min(),Z.min(),k2.empty(),0)}static newFoundDocument(t,n,s){return new V1(t,1,n,Z.min(),s,0)}static newNoDocument(t,n){return new V1(t,2,n,Z.min(),k2.empty(),0)}static newUnknownDocument(t,n){return new V1(t,3,n,Z.min(),k2.empty(),2)}convertToFoundDocument(t,n){return this.version=t,this.documentType=1,this.data=n,this.documentState=0,this}convertToNoDocument(t){return this.version=t,this.documentType=2,this.data=k2.empty(),this.documentState=0,this}convertToUnknownDocument(t){return this.version=t,this.documentType=3,this.data=k2.empty(),this.documentState=2,this}setHasCommittedMutations(){return this.documentState=2,this}setHasLocalMutations(){return this.documentState=1,this.version=Z.min(),this}setReadTime(t){return this.readTime=t,this}get hasLocalMutations(){return this.documentState===1}get hasCommittedMutations(){return this.documentState===2}get hasPendingWrites(){return this.hasLocalMutations||this.hasCommittedMutations}isValidDocument(){return this.documentType!==0}isFoundDocument(){return this.documentType===1}isNoDocument(){return this.documentType===2}isUnknownDocument(){return this.documentType===3}isEqual(t){return t instanceof V1&&this.key.isEqual(t.key)&&this.version.isEqual(t.version)&&this.documentType===t.documentType&&this.documentState===t.documentState&&this.data.isEqual(t.data)}mutableCopy(){return new V1(this.key,this.documentType,this.version,this.readTime,this.data.clone(),this.documentState)}toString(){return`Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`}}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class hf{constructor(t,n=null,s=[],i=[],r=null,o=null,l=null){this.path=t,this.collectionGroup=n,this.orderBy=s,this.filters=i,this.limit=r,this.startAt=o,this.endAt=l,this.ut=null}}function i8(e,t=null,n=[],s=[],i=null,r=null,o=null){return new hf(e,t,n,s,i,r,o)}function pn(e){const t=l1(e);if(t.ut===null){let n=t.path.canonicalString();t.collectionGroup!==null&&(n+="|cg:"+t.collectionGroup),n+="|f:",n+=t.filters.map(s=>{return(i=s).field.canonicalString()+i.op.toString()+Y3(i.value);var i}).join(","),n+="|ob:",n+=t.orderBy.map(s=>function(i){return i.field.canonicalString()+i.dir}(s)).join(","),z4(t.limit)||(n+="|l:",n+=t.limit),t.startAt&&(n+="|lb:",n+=t.startAt.inclusive?"b:":"a:",n+=t.startAt.position.map(s=>Y3(s)).join(",")),t.endAt&&(n+="|ub:",n+=t.endAt.inclusive?"a:":"b:",n+=t.endAt.position.map(s=>Y3(s)).join(",")),t.ut=n}return t.ut}function ff(e){let t=e.path.canonicalString();return e.collectionGroup!==null&&(t+=" collectionGroup="+e.collectionGroup),e.filters.length>0&&(t+=`, filters: [${e.filters.map(n=>{return`${(s=n).field.canonicalString()} ${s.op} ${Y3(s.value)}`;var s}).join(", ")}]`),z4(e.limit)||(t+=", limit: "+e.limit),e.orderBy.length>0&&(t+=`, orderBy: [${e.orderBy.map(n=>function(s){return`${s.field.canonicalString()} (${s.dir})`}(n)).join(", ")}]`),e.startAt&&(t+=", startAt: ",t+=e.startAt.inclusive?"b:":"a:",t+=e.startAt.position.map(n=>Y3(n)).join(",")),e.endAt&&(t+=", endAt: ",t+=e.endAt.inclusive?"a:":"b:",t+=e.endAt.position.map(n=>Y3(n)).join(",")),`Target(${t})`}function mn(e,t){if(e.limit!==t.limit||e.orderBy.length!==t.orderBy.length)return!1;for(let i=0;i<e.orderBy.length;i++)if(!Ef(e.orderBy[i],t.orderBy[i]))return!1;if(e.filters.length!==t.filters.length)return!1;for(let i=0;i<e.filters.length;i++)if(n=e.filters[i],s=t.filters[i],n.op!==s.op||!n.field.isEqual(s.field)||!M2(n.value,s.value))return!1;var n,s;return e.collectionGroup===t.collectionGroup&&!!e.path.isEqual(t.path)&&!!o8(e.startAt,t.startAt)&&o8(e.endAt,t.endAt)}function n6(e){return $.isDocumentKey(e.path)&&e.collectionGroup===null&&e.filters.length===0}class n2 extends class{}{constructor(t,n,s){super(),this.field=t,this.op=n,this.value=s}static create(t,n,s){return t.isKeyField()?n==="in"||n==="not-in"?this.ct(t,n,s):new df(t,n,s):n==="array-contains"?new gf(t,s):n==="in"?new vf(t,s):n==="not-in"?new yf(t,s):n==="array-contains-any"?new wf(t,s):new n2(t,n,s)}static ct(t,n,s){return n==="in"?new pf(t,s):new mf(t,s)}matches(t){const n=t.data.field(this.field);return this.op==="!="?n!==null&&this.at(ot(n,this.value)):n!==null&&S3(this.value)===S3(n)&&this.at(ot(n,this.value))}at(t){switch(this.op){case"<":return t<0;case"<=":return t<=0;case"==":return t===0;case"!=":return t!==0;case">":return t>0;case">=":return t>=0;default:return t1()}}ht(){return["<","<=",">",">=","!=","not-in"].indexOf(this.op)>=0}}class df extends n2{constructor(t,n,s){super(t,n,s),this.key=$.fromName(s.referenceValue)}matches(t){const n=$.comparator(t.key,this.key);return this.at(n)}}class pf extends n2{constructor(t,n){super(t,"in",n),this.keys=_i("in",n)}matches(t){return this.keys.some(n=>n.isEqual(t.key))}}class mf extends n2{constructor(t,n){super(t,"not-in",n),this.keys=_i("not-in",n)}matches(t){return!this.keys.some(n=>n.isEqual(t.key))}}function _i(e,t){var n;return(((n=t.arrayValue)===null||n===void 0?void 0:n.values)||[]).map(s=>$.fromName(s.referenceValue))}class gf extends n2{constructor(t,n){super(t,"array-contains",n)}matches(t){const n=t.data.field(this.field);return dn(n)&&ee(n.arrayValue,this.value)}}class vf extends n2{constructor(t,n){super(t,"in",n)}matches(t){const n=t.data.field(this.field);return n!==null&&ee(this.value.arrayValue,n)}}class yf extends n2{constructor(t,n){super(t,"not-in",n)}matches(t){if(ee(this.value.arrayValue,{nullValue:"NULL_VALUE"}))return!1;const n=t.data.field(this.field);return n!==null&&!ee(this.value.arrayValue,n)}}class wf extends n2{constructor(t,n){super(t,"array-contains-any",n)}matches(t){const n=t.data.field(this.field);return!(!dn(n)||!n.arrayValue.values)&&n.arrayValue.values.some(s=>ee(this.value.arrayValue,s))}}class n4{constructor(t,n){this.position=t,this.inclusive=n}}class zt{constructor(t,n="asc"){this.field=t,this.dir=n}}function Ef(e,t){return e.dir===t.dir&&e.field.isEqual(t.field)}function r8(e,t,n){let s=0;for(let i=0;i<e.position.length;i++){const r=t[i],o=e.position[i];if(r.field.isKeyField()?s=$.comparator($.fromName(o.referenceValue),n.key):s=ot(o,n.data.field(r.field)),r.dir==="desc"&&(s*=-1),s!==0)break}return s}function o8(e,t){if(e===null)return t===null;if(t===null||e.inclusive!==t.inclusive||e.position.length!==t.position.length)return!1;for(let n=0;n<e.position.length;n++)if(!M2(e.position[n],t.position[n]))return!1;return!0}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class L4{constructor(t,n=null,s=[],i=[],r=null,o="F",l=null,a=null){this.path=t,this.collectionGroup=n,this.explicitOrderBy=s,this.filters=i,this.limit=r,this.limitType=o,this.startAt=l,this.endAt=a,this.lt=null,this.ft=null,this.startAt,this.endAt}}function bf(e,t,n,s,i,r,o,l){return new L4(e,t,n,s,i,r,o,l)}function gn(e){return new L4(e)}function _f(e){return e.filters.length===0&&e.limit===null&&e.startAt==null&&e.endAt==null&&(e.explicitOrderBy.length===0||e.explicitOrderBy.length===1&&e.explicitOrderBy[0].field.isKeyField())}function Tf(e){return e.explicitOrderBy.length>0?e.explicitOrderBy[0].field:null}function xf(e){for(const t of e.filters)if(t.ht())return t.field;return null}function Cf(e){return e.collectionGroup!==null}function ne(e){const t=l1(e);if(t.lt===null){t.lt=[];const n=xf(t),s=Tf(t);if(n!==null&&s===null)n.isKeyField()||t.lt.push(new zt(n)),t.lt.push(new zt(e2.keyField(),"asc"));else{let i=!1;for(const r of t.explicitOrderBy)t.lt.push(r),r.field.isKeyField()&&(i=!0);if(!i){const r=t.explicitOrderBy.length>0?t.explicitOrderBy[t.explicitOrderBy.length-1].dir:"asc";t.lt.push(new zt(e2.keyField(),r))}}}return t.lt}function A3(e){const t=l1(e);if(!t.ft)if(t.limitType==="F")t.ft=i8(t.path,t.collectionGroup,ne(t),t.filters,t.limit,t.startAt,t.endAt);else{const n=[];for(const r of ne(t)){const o=r.dir==="desc"?"asc":"desc";n.push(new zt(r.field,o))}const s=t.endAt?new n4(t.endAt.position,t.endAt.inclusive):null,i=t.startAt?new n4(t.startAt.position,t.startAt.inclusive):null;t.ft=i8(t.path,t.collectionGroup,n,t.filters,t.limit,s,i)}return t.ft}function If(e,t,n){return new L4(e.path,e.collectionGroup,e.explicitOrderBy.slice(),e.filters.slice(),t,n,e.startAt,e.endAt)}function F4(e,t){return mn(A3(e),A3(t))&&e.limitType===t.limitType}function Ti(e){return`${pn(A3(e))}|lt:${e.limitType}`}function s6(e){return`Query(target=${ff(A3(e))}; limitType=${e.limitType})`}function vn(e,t){return t.isFoundDocument()&&function(n,s){const i=s.key.path;return n.collectionGroup!==null?s.key.hasCollectionId(n.collectionGroup)&&n.path.isPrefixOf(i):$.isDocumentKey(n.path)?n.path.isEqual(i):n.path.isImmediateParentOf(i)}(e,t)&&function(n,s){for(const i of n.explicitOrderBy)if(!i.field.isKeyField()&&s.data.field(i.field)===null)return!1;return!0}(e,t)&&function(n,s){for(const i of n.filters)if(!i.matches(s))return!1;return!0}(e,t)&&function(n,s){return!(n.startAt&&!function(i,r,o){const l=r8(i,r,o);return i.inclusive?l<=0:l<0}(n.startAt,ne(n),s)||n.endAt&&!function(i,r,o){const l=r8(i,r,o);return i.inclusive?l>=0:l>0}(n.endAt,ne(n),s))}(e,t)}function Sf(e){return e.collectionGroup||(e.path.length%2==1?e.path.lastSegment():e.path.get(e.path.length-2))}function xi(e){return(t,n)=>{let s=!1;for(const i of ne(e)){const r=Af(i,t,n);if(r!==0)return r;s=s||i.field.isKeyField()}return 0}}function Af(e,t,n){const s=e.field.isKeyField()?$.comparator(t.key,n.key):function(i,r,o){const l=r.data.field(i),a=o.data.field(i);return l!==null&&a!==null?ot(l,a):t1()}(e.field,t,n);switch(e.dir){case"asc":return s;case"desc":return-1*s;default:return t1()}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function Nf(e,t){if(e.dt){if(isNaN(t))return{doubleValue:"NaN"};if(t===1/0)return{doubleValue:"Infinity"};if(t===-1/0)return{doubleValue:"-Infinity"}}return{doubleValue:Z5(t)?"-0":t}}function Df(e){return{integerValue:""+e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class B4{constructor(){this._=void 0}}function kf(e,t,n){return e instanceof i6?function(s,i){const r={fields:{__type__:{stringValue:"server_timestamp"},__local_write_time__:{timestampValue:{seconds:s.seconds,nanos:s.nanoseconds}}}};return i&&(r.fields.__previous_value__=i),{mapValue:r}}(n,t):e instanceof s4?Ci(e,t):e instanceof i4?Ii(e,t):function(s,i){const r=Of(s,i),o=l8(r)+l8(s._t);return e6(r)&&e6(s._t)?Df(o):Nf(s.wt,o)}(e,t)}function Rf(e,t,n){return e instanceof s4?Ci(e,t):e instanceof i4?Ii(e,t):n}function Of(e,t){return e instanceof r6?e6(n=t)||function(s){return!!s&&"doubleValue"in s}(n)?t:{integerValue:0}:null;var n}class i6 extends B4{}class s4 extends B4{constructor(t){super(),this.elements=t}}function Ci(e,t){const n=Si(t);for(const s of e.elements)n.some(i=>M2(i,s))||n.push(s);return{arrayValue:{values:n}}}class i4 extends B4{constructor(t){super(),this.elements=t}}function Ii(e,t){let n=Si(t);for(const s of e.elements)n=n.filter(i=>!M2(i,s));return{arrayValue:{values:n}}}class r6 extends B4{constructor(t,n){super(),this.wt=t,this._t=n}}function l8(e){return A1(e.integerValue||e.doubleValue)}function Si(e){return dn(e)&&e.arrayValue.values?e.arrayValue.values.slice():[]}function Mf(e,t){return e.field.isEqual(t.field)&&function(n,s){return n instanceof s4&&s instanceof s4||n instanceof i4&&s instanceof i4?st(n.elements,s.elements,M2):n instanceof r6&&s instanceof r6?M2(n._t,s._t):n instanceof i6&&s instanceof i6}(e.transform,t.transform)}class b3{constructor(t,n){this.updateTime=t,this.exists=n}static none(){return new b3}static exists(t){return new b3(void 0,t)}static updateTime(t){return new b3(t)}get isNone(){return this.updateTime===void 0&&this.exists===void 0}isEqual(t){return this.exists===t.exists&&(this.updateTime?!!t.updateTime&&this.updateTime.isEqual(t.updateTime):!t.updateTime)}}function Pe(e,t){return e.updateTime!==void 0?t.isFoundDocument()&&t.version.isEqual(e.updateTime):e.exists===void 0||e.exists===t.isFoundDocument()}class yn{}function Ai(e,t){if(!e.hasLocalMutations||t&&t.fields.length===0)return null;if(t===null)return e.isNoDocument()?new zf(e.key,b3.none()):new wn(e.key,e.data,b3.none());{const n=e.data,s=k2.empty();let i=new R1(e2.comparator);for(let r of t.fields)if(!i.has(r)){let o=n.field(r);o===null&&r.length>1&&(r=r.popLast(),o=n.field(r)),o===null?s.delete(r):s.set(r,o),i=i.add(r)}return new V4(e.key,s,new E3(i.toArray()),b3.none())}}function Pf(e,t,n){e instanceof wn?function(s,i,r){const o=s.value.clone(),l=c8(s.fieldTransforms,i,r.transformResults);o.setAll(l),i.convertToFoundDocument(r.version,o).setHasCommittedMutations()}(e,t,n):e instanceof V4?function(s,i,r){if(!Pe(s.precondition,i))return void i.convertToUnknownDocument(r.version);const o=c8(s.fieldTransforms,i,r.transformResults),l=i.data;l.setAll(Ni(s)),l.setAll(o),i.convertToFoundDocument(r.version,l).setHasCommittedMutations()}(e,t,n):function(s,i,r){i.convertToNoDocument(r.version).setHasCommittedMutations()}(0,t,n)}function Lt(e,t,n,s){return e instanceof wn?function(i,r,o,l){if(!Pe(i.precondition,r))return o;const a=i.value.clone(),c=u8(i.fieldTransforms,l,r);return a.setAll(c),r.convertToFoundDocument(r.version,a).setHasLocalMutations(),null}(e,t,n,s):e instanceof V4?function(i,r,o,l){if(!Pe(i.precondition,r))return o;const a=u8(i.fieldTransforms,l,r),c=r.data;return c.setAll(Ni(i)),c.setAll(a),r.convertToFoundDocument(r.version,c).setHasLocalMutations(),o===null?null:o.unionWith(i.fieldMask.fields).unionWith(i.fieldTransforms.map(u=>u.field))}(e,t,n,s):function(i,r,o){return Pe(i.precondition,r)?(r.convertToNoDocument(r.version).setHasLocalMutations(),null):o}(e,t,n)}function a8(e,t){return e.type===t.type&&!!e.key.isEqual(t.key)&&!!e.precondition.isEqual(t.precondition)&&!!function(n,s){return n===void 0&&s===void 0||!(!n||!s)&&st(n,s,(i,r)=>Mf(i,r))}(e.fieldTransforms,t.fieldTransforms)&&(e.type===0?e.value.isEqual(t.value):e.type!==1||e.data.isEqual(t.data)&&e.fieldMask.isEqual(t.fieldMask))}class wn extends yn{constructor(t,n,s,i=[]){super(),this.key=t,this.value=n,this.precondition=s,this.fieldTransforms=i,this.type=0}getFieldMask(){return null}}class V4 extends yn{constructor(t,n,s,i,r=[]){super(),this.key=t,this.data=n,this.fieldMask=s,this.precondition=i,this.fieldTransforms=r,this.type=1}getFieldMask(){return this.fieldMask}}function Ni(e){const t=new Map;return e.fieldMask.fields.forEach(n=>{if(!n.isEmpty()){const s=e.data.field(n);t.set(n,s)}}),t}function c8(e,t,n){const s=new Map;N1(e.length===n.length);for(let i=0;i<n.length;i++){const r=e[i],o=r.transform,l=t.data.field(r.field);s.set(r.field,Rf(o,l,n[i]))}return s}function u8(e,t,n){const s=new Map;for(const i of e){const r=i.transform,o=n.data.field(i.field);s.set(i.field,kf(r,o,t))}return s}class zf extends yn{constructor(t,n){super(),this.key=t,this.precondition=n,this.type=2,this.fieldTransforms=[]}getFieldMask(){return null}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Lf{constructor(t){this.count=t}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var S1,e1;function Di(e){if(e===void 0)return s3("GRPC error has no .code"),k.UNKNOWN;switch(e){case S1.OK:return k.OK;case S1.CANCELLED:return k.CANCELLED;case S1.UNKNOWN:return k.UNKNOWN;case S1.DEADLINE_EXCEEDED:return k.DEADLINE_EXCEEDED;case S1.RESOURCE_EXHAUSTED:return k.RESOURCE_EXHAUSTED;case S1.INTERNAL:return k.INTERNAL;case S1.UNAVAILABLE:return k.UNAVAILABLE;case S1.UNAUTHENTICATED:return k.UNAUTHENTICATED;case S1.INVALID_ARGUMENT:return k.INVALID_ARGUMENT;case S1.NOT_FOUND:return k.NOT_FOUND;case S1.ALREADY_EXISTS:return k.ALREADY_EXISTS;case S1.PERMISSION_DENIED:return k.PERMISSION_DENIED;case S1.FAILED_PRECONDITION:return k.FAILED_PRECONDITION;case S1.ABORTED:return k.ABORTED;case S1.OUT_OF_RANGE:return k.OUT_OF_RANGE;case S1.UNIMPLEMENTED:return k.UNIMPLEMENTED;case S1.DATA_LOSS:return k.DATA_LOSS;default:return t1()}}(e1=S1||(S1={}))[e1.OK=0]="OK",e1[e1.CANCELLED=1]="CANCELLED",e1[e1.UNKNOWN=2]="UNKNOWN",e1[e1.INVALID_ARGUMENT=3]="INVALID_ARGUMENT",e1[e1.DEADLINE_EXCEEDED=4]="DEADLINE_EXCEEDED",e1[e1.NOT_FOUND=5]="NOT_FOUND",e1[e1.ALREADY_EXISTS=6]="ALREADY_EXISTS",e1[e1.PERMISSION_DENIED=7]="PERMISSION_DENIED",e1[e1.UNAUTHENTICATED=16]="UNAUTHENTICATED",e1[e1.RESOURCE_EXHAUSTED=8]="RESOURCE_EXHAUSTED",e1[e1.FAILED_PRECONDITION=9]="FAILED_PRECONDITION",e1[e1.ABORTED=10]="ABORTED",e1[e1.OUT_OF_RANGE=11]="OUT_OF_RANGE",e1[e1.UNIMPLEMENTED=12]="UNIMPLEMENTED",e1[e1.INTERNAL=13]="INTERNAL",e1[e1.UNAVAILABLE=14]="UNAVAILABLE",e1[e1.DATA_LOSS=15]="DATA_LOSS";/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class yt{constructor(t,n){this.mapKeyFn=t,this.equalsFn=n,this.inner={},this.innerSize=0}get(t){const n=this.mapKeyFn(t),s=this.inner[n];if(s!==void 0){for(const[i,r]of s)if(this.equalsFn(i,t))return r}}has(t){return this.get(t)!==void 0}set(t,n){const s=this.mapKeyFn(t),i=this.inner[s];if(i===void 0)return this.inner[s]=[[t,n]],void this.innerSize++;for(let r=0;r<i.length;r++)if(this.equalsFn(i[r][0],t))return void(i[r]=[t,n]);i.push([t,n]),this.innerSize++}delete(t){const n=this.mapKeyFn(t),s=this.inner[n];if(s===void 0)return!1;for(let i=0;i<s.length;i++)if(this.equalsFn(s[i][0],t))return s.length===1?delete this.inner[n]:s.splice(i,1),this.innerSize--,!0;return!1}forEach(t){P4(this.inner,(n,s)=>{for(const[i,r]of s)t(i,r)})}isEmpty(){return lf(this.inner)}size(){return this.innerSize}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Ff=new F1($.comparator);function o3(){return Ff}const ki=new F1($.comparator);function St(...e){let t=ki;for(const n of e)t=t.insert(n.key,n);return t}function Bf(e){let t=ki;return e.forEach((n,s)=>t=t.insert(n,s.overlayedDocument)),t}function v3(){return Ft()}function Ri(){return Ft()}function Ft(){return new yt(e=>e.toString(),(e,t)=>e.isEqual(t))}new F1($.comparator);const Vf=new R1($.comparator);function o1(...e){let t=Vf;for(const n of e)t=t.add(n);return t}const $f=new R1(h1);function Oi(){return $f}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class $4{constructor(t,n,s,i,r){this.snapshotVersion=t,this.targetChanges=n,this.targetMismatches=s,this.documentUpdates=i,this.resolvedLimboDocuments=r}static createSynthesizedRemoteEventForCurrentChange(t,n){const s=new Map;return s.set(t,me.createSynthesizedTargetChangeForCurrentChange(t,n)),new $4(Z.min(),s,Oi(),o3(),o1())}}class me{constructor(t,n,s,i,r){this.resumeToken=t,this.current=n,this.addedDocuments=s,this.modifiedDocuments=i,this.removedDocuments=r}static createSynthesizedTargetChangeForCurrentChange(t,n){return new me(j1.EMPTY_BYTE_STRING,n,o1(),o1(),o1())}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class ze{constructor(t,n,s,i){this.gt=t,this.removedTargetIds=n,this.key=s,this.yt=i}}class Mi{constructor(t,n){this.targetId=t,this.It=n}}class Pi{constructor(t,n,s=j1.EMPTY_BYTE_STRING,i=null){this.state=t,this.targetIds=n,this.resumeToken=s,this.cause=i}}class h8{constructor(){this.Tt=0,this.Et=d8(),this.At=j1.EMPTY_BYTE_STRING,this.Rt=!1,this.bt=!0}get current(){return this.Rt}get resumeToken(){return this.At}get Pt(){return this.Tt!==0}get vt(){return this.bt}Vt(t){t.approximateByteSize()>0&&(this.bt=!0,this.At=t)}St(){let t=o1(),n=o1(),s=o1();return this.Et.forEach((i,r)=>{switch(r){case 0:t=t.add(i);break;case 2:n=n.add(i);break;case 1:s=s.add(i);break;default:t1()}}),new me(this.At,this.Rt,t,n,s)}Dt(){this.bt=!1,this.Et=d8()}Ct(t,n){this.bt=!0,this.Et=this.Et.insert(t,n)}xt(t){this.bt=!0,this.Et=this.Et.remove(t)}Nt(){this.Tt+=1}kt(){this.Tt-=1}Ot(){this.bt=!0,this.Rt=!0}}class Uf{constructor(t){this.Mt=t,this.Ft=new Map,this.$t=o3(),this.Bt=f8(),this.Lt=new R1(h1)}Ut(t){for(const n of t.gt)t.yt&&t.yt.isFoundDocument()?this.qt(n,t.yt):this.Kt(n,t.key,t.yt);for(const n of t.removedTargetIds)this.Kt(n,t.key,t.yt)}Gt(t){this.forEachTarget(t,n=>{const s=this.Qt(n);switch(t.state){case 0:this.jt(n)&&s.Vt(t.resumeToken);break;case 1:s.kt(),s.Pt||s.Dt(),s.Vt(t.resumeToken);break;case 2:s.kt(),s.Pt||this.removeTarget(n);break;case 3:this.jt(n)&&(s.Ot(),s.Vt(t.resumeToken));break;case 4:this.jt(n)&&(this.Wt(n),s.Vt(t.resumeToken));break;default:t1()}})}forEachTarget(t,n){t.targetIds.length>0?t.targetIds.forEach(n):this.Ft.forEach((s,i)=>{this.jt(i)&&n(i)})}zt(t){const n=t.targetId,s=t.It.count,i=this.Ht(n);if(i){const r=i.target;if(n6(r))if(s===0){const o=new $(r.path);this.Kt(n,o,V1.newNoDocument(o,Z.min()))}else N1(s===1);else this.Jt(n)!==s&&(this.Wt(n),this.Lt=this.Lt.add(n))}}Yt(t){const n=new Map;this.Ft.forEach((r,o)=>{const l=this.Ht(o);if(l){if(r.current&&n6(l.target)){const a=new $(l.target.path);this.$t.get(a)!==null||this.Xt(o,a)||this.Kt(o,a,V1.newNoDocument(a,t))}r.vt&&(n.set(o,r.St()),r.Dt())}});let s=o1();this.Bt.forEach((r,o)=>{let l=!0;o.forEachWhile(a=>{const c=this.Ht(a);return!c||c.purpose===2||(l=!1,!1)}),l&&(s=s.add(r))}),this.$t.forEach((r,o)=>o.setReadTime(t));const i=new $4(t,n,this.Lt,this.$t,s);return this.$t=o3(),this.Bt=f8(),this.Lt=new R1(h1),i}qt(t,n){if(!this.jt(t))return;const s=this.Xt(t,n.key)?2:0;this.Qt(t).Ct(n.key,s),this.$t=this.$t.insert(n.key,n),this.Bt=this.Bt.insert(n.key,this.Zt(n.key).add(t))}Kt(t,n,s){if(!this.jt(t))return;const i=this.Qt(t);this.Xt(t,n)?i.Ct(n,1):i.xt(n),this.Bt=this.Bt.insert(n,this.Zt(n).delete(t)),s&&(this.$t=this.$t.insert(n,s))}removeTarget(t){this.Ft.delete(t)}Jt(t){const n=this.Qt(t).St();return this.Mt.getRemoteKeysForTarget(t).size+n.addedDocuments.size-n.removedDocuments.size}Nt(t){this.Qt(t).Nt()}Qt(t){let n=this.Ft.get(t);return n||(n=new h8,this.Ft.set(t,n)),n}Zt(t){let n=this.Bt.get(t);return n||(n=new R1(h1),this.Bt=this.Bt.insert(t,n)),n}jt(t){const n=this.Ht(t)!==null;return n||F("WatchChangeAggregator","Detected inactive target",t),n}Ht(t){const n=this.Ft.get(t);return n&&n.Pt?null:this.Mt.te(t)}Wt(t){this.Ft.set(t,new h8),this.Mt.getRemoteKeysForTarget(t).forEach(n=>{this.Kt(t,n,null)})}Xt(t,n){return this.Mt.getRemoteKeysForTarget(t).has(n)}}function f8(){return new F1($.comparator)}function d8(){return new F1($.comparator)}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const jf=(()=>({asc:"ASCENDING",desc:"DESCENDING"}))(),Hf=(()=>({"<":"LESS_THAN","<=":"LESS_THAN_OR_EQUAL",">":"GREATER_THAN",">=":"GREATER_THAN_OR_EQUAL","==":"EQUAL","!=":"NOT_EQUAL","array-contains":"ARRAY_CONTAINS",in:"IN","not-in":"NOT_IN","array-contains-any":"ARRAY_CONTAINS_ANY"}))();class Kf{constructor(t,n){this.databaseId=t,this.dt=n}}function qf(e,t){return e.dt?`${new Date(1e3*t.seconds).toISOString().replace(/\.\d*/,"").replace("Z","")}.${("000000000"+t.nanoseconds).slice(-9)}Z`:{seconds:""+t.seconds,nanos:t.nanoseconds}}function Gf(e,t){return e.dt?t.toBase64():t.toUint8Array()}function se(e){return N1(!!e),Z.fromTimestamp(function(t){const n=r3(t);return new s2(n.seconds,n.nanos)}(e))}function Wf(e,t){return function(n){return new C1(["projects",n.projectId,"databases",n.database])}(e).child("documents").child(t).canonicalString()}function zi(e){const t=C1.fromString(e);return N1(Bi(t)),t}function f5(e,t){const n=zi(t);if(n.get(1)!==e.databaseId.projectId)throw new j(k.INVALID_ARGUMENT,"Tried to deserialize key from different project: "+n.get(1)+" vs "+e.databaseId.projectId);if(n.get(3)!==e.databaseId.database)throw new j(k.INVALID_ARGUMENT,"Tried to deserialize key from different database: "+n.get(3)+" vs "+e.databaseId.database);return new $(Li(n))}function o6(e,t){return Wf(e.databaseId,t)}function Qf(e){const t=zi(e);return t.length===4?C1.emptyPath():Li(t)}function p8(e){return new C1(["projects",e.databaseId.projectId,"databases",e.databaseId.database]).canonicalString()}function Li(e){return N1(e.length>4&&e.get(4)==="documents"),e.popFirst(5)}function Xf(e,t){let n;if("targetChange"in t){t.targetChange;const s=function(a){return a==="NO_CHANGE"?0:a==="ADD"?1:a==="REMOVE"?2:a==="CURRENT"?3:a==="RESET"?4:t1()}(t.targetChange.targetChangeType||"NO_CHANGE"),i=t.targetChange.targetIds||[],r=function(a,c){return a.dt?(N1(c===void 0||typeof c=="string"),j1.fromBase64String(c||"")):(N1(c===void 0||c instanceof Uint8Array),j1.fromUint8Array(c||new Uint8Array))}(e,t.targetChange.resumeToken),o=t.targetChange.cause,l=o&&function(a){const c=a.code===void 0?k.UNKNOWN:Di(a.code);return new j(c,a.message||"")}(o);n=new Pi(s,i,r,l||null)}else if("documentChange"in t){t.documentChange;const s=t.documentChange;s.document,s.document.name,s.document.updateTime;const i=f5(e,s.document.name),r=se(s.document.updateTime),o=new k2({mapValue:{fields:s.document.fields}}),l=V1.newFoundDocument(i,r,o),a=s.targetIds||[],c=s.removedTargetIds||[];n=new ze(a,c,l.key,l)}else if("documentDelete"in t){t.documentDelete;const s=t.documentDelete;s.document;const i=f5(e,s.document),r=s.readTime?se(s.readTime):Z.min(),o=V1.newNoDocument(i,r),l=s.removedTargetIds||[];n=new ze([],l,o.key,o)}else if("documentRemove"in t){t.documentRemove;const s=t.documentRemove;s.document;const i=f5(e,s.document),r=s.removedTargetIds||[];n=new ze([],r,i,null)}else{if(!("filter"in t))return t1();{t.filter;const s=t.filter;s.targetId;const i=s.count||0,r=new Lf(i),o=s.targetId;n=new Mi(o,r)}}return n}function Yf(e,t){return{documents:[o6(e,t.path)]}}function Jf(e,t){const n={structuredQuery:{}},s=t.path;t.collectionGroup!==null?(n.parent=o6(e,s),n.structuredQuery.from=[{collectionId:t.collectionGroup,allDescendants:!0}]):(n.parent=o6(e,s.popLast()),n.structuredQuery.from=[{collectionId:s.lastSegment()}]);const i=function(a){if(a.length===0)return;const c=a.map(u=>function(h){if(h.op==="=="){if(s8(h.value))return{unaryFilter:{field:F3(h.field),op:"IS_NAN"}};if(n8(h.value))return{unaryFilter:{field:F3(h.field),op:"IS_NULL"}}}else if(h.op==="!="){if(s8(h.value))return{unaryFilter:{field:F3(h.field),op:"IS_NOT_NAN"}};if(n8(h.value))return{unaryFilter:{field:F3(h.field),op:"IS_NOT_NULL"}}}return{fieldFilter:{field:F3(h.field),op:nd(h.op),value:h.value}}}(u));return c.length===1?c[0]:{compositeFilter:{op:"AND",filters:c}}}(t.filters);i&&(n.structuredQuery.where=i);const r=function(a){if(a.length!==0)return a.map(c=>function(u){return{field:F3(u.field),direction:ed(u.dir)}}(c))}(t.orderBy);r&&(n.structuredQuery.orderBy=r);const o=function(a,c){return a.dt||z4(c)?c:{value:c}}(e,t.limit);var l;return o!==null&&(n.structuredQuery.limit=o),t.startAt&&(n.structuredQuery.startAt={before:(l=t.startAt).inclusive,values:l.position}),t.endAt&&(n.structuredQuery.endAt=function(a){return{before:!a.inclusive,values:a.position}}(t.endAt)),n}function Zf(e){let t=Qf(e.parent);const n=e.structuredQuery,s=n.from?n.from.length:0;let i=null;if(s>0){N1(s===1);const u=n.from[0];u.allDescendants?i=u.collectionId:t=t.child(u.collectionId)}let r=[];n.where&&(r=Fi(n.where));let o=[];n.orderBy&&(o=n.orderBy.map(u=>function(h){return new zt(H3(h.field),function(f){switch(f){case"ASCENDING":return"asc";case"DESCENDING":return"desc";default:return}}(h.direction))}(u)));let l=null;n.limit&&(l=function(u){let h;return h=typeof u=="object"?u.value:u,z4(h)?null:h}(n.limit));let a=null;n.startAt&&(a=function(u){const h=!!u.before,f=u.values||[];return new n4(f,h)}(n.startAt));let c=null;return n.endAt&&(c=function(u){const h=!u.before,f=u.values||[];return new n4(f,h)}(n.endAt)),bf(t,i,o,r,l,"F",a,c)}function td(e,t){const n=function(s,i){switch(i){case 0:return null;case 1:return"existence-filter-mismatch";case 2:return"limbo-document";default:return t1()}}(0,t.purpose);return n==null?null:{"goog-listen-tags":n}}function Fi(e){return e?e.unaryFilter!==void 0?[id(e)]:e.fieldFilter!==void 0?[sd(e)]:e.compositeFilter!==void 0?e.compositeFilter.filters.map(t=>Fi(t)).reduce((t,n)=>t.concat(n)):t1():[]}function ed(e){return jf[e]}function nd(e){return Hf[e]}function F3(e){return{fieldPath:e.canonicalString()}}function H3(e){return e2.fromServerFormat(e.fieldPath)}function sd(e){return n2.create(H3(e.fieldFilter.field),function(t){switch(t){case"EQUAL":return"==";case"NOT_EQUAL":return"!=";case"GREATER_THAN":return">";case"GREATER_THAN_OR_EQUAL":return">=";case"LESS_THAN":return"<";case"LESS_THAN_OR_EQUAL":return"<=";case"ARRAY_CONTAINS":return"array-contains";case"IN":return"in";case"NOT_IN":return"not-in";case"ARRAY_CONTAINS_ANY":return"array-contains-any";default:return t1()}}(e.fieldFilter.op),e.fieldFilter.value)}function id(e){switch(e.unaryFilter.op){case"IS_NAN":const t=H3(e.unaryFilter.field);return n2.create(t,"==",{doubleValue:NaN});case"IS_NULL":const n=H3(e.unaryFilter.field);return n2.create(n,"==",{nullValue:"NULL_VALUE"});case"IS_NOT_NAN":const s=H3(e.unaryFilter.field);return n2.create(s,"!=",{doubleValue:NaN});case"IS_NOT_NULL":const i=H3(e.unaryFilter.field);return n2.create(i,"!=",{nullValue:"NULL_VALUE"});default:return t1()}}function Bi(e){return e.length>=4&&e.get(0)==="projects"&&e.get(2)==="databases"}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class rd{constructor(t,n,s,i){this.batchId=t,this.localWriteTime=n,this.baseMutations=s,this.mutations=i}applyToRemoteDocument(t,n){const s=n.mutationResults;for(let i=0;i<this.mutations.length;i++){const r=this.mutations[i];r.key.isEqual(t.key)&&Pf(r,t,s[i])}}applyToLocalView(t,n){for(const s of this.baseMutations)s.key.isEqual(t.key)&&(n=Lt(s,t,n,this.localWriteTime));for(const s of this.mutations)s.key.isEqual(t.key)&&(n=Lt(s,t,n,this.localWriteTime));return n}applyToLocalDocumentSet(t,n){const s=Ri();return this.mutations.forEach(i=>{const r=t.get(i.key),o=r.overlayedDocument;let l=this.applyToLocalView(o,r.mutatedFields);l=n.has(i.key)?null:l;const a=Ai(o,l);a!==null&&s.set(i.key,a),o.isValidDocument()||o.convertToNoDocument(Z.min())}),s}keys(){return this.mutations.reduce((t,n)=>t.add(n.key),o1())}isEqual(t){return this.batchId===t.batchId&&st(this.mutations,t.mutations,(n,s)=>a8(n,s))&&st(this.baseMutations,t.baseMutations,(n,s)=>a8(n,s))}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class od{constructor(t,n){this.largestBatchId=t,this.mutation=n}getKey(){return this.mutation.key}isEqual(t){return t!==null&&this.mutation===t.mutation}toString(){return`Overlay{
      largestBatchId: ${this.largestBatchId},
      mutation: ${this.mutation.toString()}
    }`}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class _3{constructor(t,n,s,i,r=Z.min(),o=Z.min(),l=j1.EMPTY_BYTE_STRING){this.target=t,this.targetId=n,this.purpose=s,this.sequenceNumber=i,this.snapshotVersion=r,this.lastLimboFreeSnapshotVersion=o,this.resumeToken=l}withSequenceNumber(t){return new _3(this.target,this.targetId,this.purpose,t,this.snapshotVersion,this.lastLimboFreeSnapshotVersion,this.resumeToken)}withResumeToken(t,n){return new _3(this.target,this.targetId,this.purpose,this.sequenceNumber,n,this.lastLimboFreeSnapshotVersion,t)}withLastLimboFreeSnapshotVersion(t){return new _3(this.target,this.targetId,this.purpose,this.sequenceNumber,this.snapshotVersion,t,this.resumeToken)}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class ld{constructor(t){this.ne=t}}function ad(e){const t=Zf({parent:e.parent,structuredQuery:e.structuredQuery});return e.limitType==="LAST"?If(t,t.limit,"L"):t}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class cd{constructor(){this.ze=new ud}addToCollectionParentIndex(t,n){return this.ze.add(n),T.resolve()}getCollectionParents(t,n){return T.resolve(this.ze.getEntries(n))}addFieldIndex(t,n){return T.resolve()}deleteFieldIndex(t,n){return T.resolve()}getDocumentsMatchingTarget(t,n){return T.resolve(null)}getIndexType(t,n){return T.resolve(0)}getFieldIndexes(t,n){return T.resolve([])}getNextCollectionGroupToUpdate(t){return T.resolve(null)}getMinOffset(t,n){return T.resolve(i3.min())}getMinOffsetFromCollectionGroup(t,n){return T.resolve(i3.min())}updateCollectionGroup(t,n,s){return T.resolve()}updateIndexEntries(t,n){return T.resolve()}}class ud{constructor(){this.index={}}add(t){const n=t.lastSegment(),s=t.popLast(),i=this.index[n]||new R1(C1.comparator),r=!i.has(s);return this.index[n]=i.add(s),r}has(t){const n=t.lastSegment(),s=t.popLast(),i=this.index[n];return i&&i.has(s)}getEntries(t){return(this.index[t]||new R1(C1.comparator)).toArray()}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class lt{constructor(t){this.En=t}next(){return this.En+=2,this.En}static An(){return new lt(0)}static Rn(){return new lt(-1)}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class hd{constructor(){this.changes=new yt(t=>t.toString(),(t,n)=>t.isEqual(n)),this.changesApplied=!1}addEntry(t){this.assertNotApplied(),this.changes.set(t.key,t)}removeEntry(t,n){this.assertNotApplied(),this.changes.set(t,V1.newInvalidDocument(t).setReadTime(n))}getEntry(t,n){this.assertNotApplied();const s=this.changes.get(n);return s!==void 0?T.resolve(s):this.getFromCache(t,n)}getEntries(t,n){return this.getAllFromCache(t,n)}apply(t){return this.assertNotApplied(),this.changesApplied=!0,this.applyChanges(t)}assertNotApplied(){}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class fd{constructor(t,n){this.overlayedDocument=t,this.mutatedFields=n}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class dd{constructor(t,n,s,i){this.remoteDocumentCache=t,this.mutationQueue=n,this.documentOverlayCache=s,this.indexManager=i}getDocument(t,n){let s=null;return this.documentOverlayCache.getOverlay(t,n).next(i=>(s=i,this.getBaseDocument(t,n,s))).next(i=>(s!==null&&Lt(s.mutation,i,E3.empty(),s2.now()),i))}getDocuments(t,n){return this.remoteDocumentCache.getEntries(t,n).next(s=>this.getLocalViewOfDocuments(t,s,o1()).next(()=>s))}getLocalViewOfDocuments(t,n,s=o1()){const i=v3();return this.populateOverlays(t,i,n).next(()=>this.computeViews(t,n,i,s).next(r=>{let o=St();return r.forEach((l,a)=>{o=o.insert(l,a.overlayedDocument)}),o}))}getOverlayedDocuments(t,n){const s=v3();return this.populateOverlays(t,s,n).next(()=>this.computeViews(t,n,s,o1()))}populateOverlays(t,n,s){const i=[];return s.forEach(r=>{n.has(r)||i.push(r)}),this.documentOverlayCache.getOverlays(t,i).next(r=>{r.forEach((o,l)=>{n.set(o,l)})})}computeViews(t,n,s,i){let r=o3();const o=Ft(),l=Ft();return n.forEach((a,c)=>{const u=s.get(c.key);i.has(c.key)&&(u===void 0||u.mutation instanceof V4)?r=r.insert(c.key,c):u!==void 0&&(o.set(c.key,u.mutation.getFieldMask()),Lt(u.mutation,c,u.mutation.getFieldMask(),s2.now()))}),this.recalculateAndSaveOverlays(t,r).next(a=>(a.forEach((c,u)=>o.set(c,u)),n.forEach((c,u)=>{var h;return l.set(c,new fd(u,(h=o.get(c))!==null&&h!==void 0?h:null))}),l))}recalculateAndSaveOverlays(t,n){const s=Ft();let i=new F1((o,l)=>o-l),r=o1();return this.mutationQueue.getAllMutationBatchesAffectingDocumentKeys(t,n).next(o=>{for(const l of o)l.keys().forEach(a=>{const c=n.get(a);if(c===null)return;let u=s.get(a)||E3.empty();u=l.applyToLocalView(c,u),s.set(a,u);const h=(i.get(l.batchId)||o1()).add(a);i=i.insert(l.batchId,h)})}).next(()=>{const o=[],l=i.getReverseIterator();for(;l.hasNext();){const a=l.getNext(),c=a.key,u=a.value,h=Ri();u.forEach(f=>{if(!r.has(f)){const m=Ai(n.get(f),s.get(f));m!==null&&h.set(f,m),r=r.add(f)}}),o.push(this.documentOverlayCache.saveOverlays(t,c,h))}return T.waitFor(o)}).next(()=>s)}recalculateAndSaveOverlaysForDocumentKeys(t,n){return this.remoteDocumentCache.getEntries(t,n).next(s=>this.recalculateAndSaveOverlays(t,s))}getDocumentsMatchingQuery(t,n,s){return function(i){return $.isDocumentKey(i.path)&&i.collectionGroup===null&&i.filters.length===0}(n)?this.getDocumentsMatchingDocumentQuery(t,n.path):Cf(n)?this.getDocumentsMatchingCollectionGroupQuery(t,n,s):this.getDocumentsMatchingCollectionQuery(t,n,s)}getNextDocuments(t,n,s,i){return this.remoteDocumentCache.getAllFromCollectionGroup(t,n,s,i).next(r=>{const o=i-r.size>0?this.documentOverlayCache.getOverlaysForCollectionGroup(t,n,s.largestBatchId,i-r.size):T.resolve(v3());let l=-1,a=r;return o.next(c=>T.forEach(c,(u,h)=>(l<h.largestBatchId&&(l=h.largestBatchId),r.get(u)?T.resolve():this.getBaseDocument(t,u,h).next(f=>{a=a.insert(u,f)}))).next(()=>this.populateOverlays(t,c,r)).next(()=>this.computeViews(t,a,c,o1())).next(u=>({batchId:l,changes:Bf(u)})))})}getDocumentsMatchingDocumentQuery(t,n){return this.getDocument(t,new $(n)).next(s=>{let i=St();return s.isFoundDocument()&&(i=i.insert(s.key,s)),i})}getDocumentsMatchingCollectionGroupQuery(t,n,s){const i=n.collectionGroup;let r=St();return this.indexManager.getCollectionParents(t,i).next(o=>T.forEach(o,l=>{const a=function(c,u){return new L4(u,null,c.explicitOrderBy.slice(),c.filters.slice(),c.limit,c.limitType,c.startAt,c.endAt)}(n,l.child(i));return this.getDocumentsMatchingCollectionQuery(t,a,s).next(c=>{c.forEach((u,h)=>{r=r.insert(u,h)})})}).next(()=>r))}getDocumentsMatchingCollectionQuery(t,n,s){let i;return this.remoteDocumentCache.getAllFromCollection(t,n.path,s).next(r=>(i=r,this.documentOverlayCache.getOverlaysForCollection(t,n.path,s.largestBatchId))).next(r=>{r.forEach((l,a)=>{const c=a.getKey();i.get(c)===null&&(i=i.insert(c,V1.newInvalidDocument(c)))});let o=St();return i.forEach((l,a)=>{const c=r.get(l);c!==void 0&&Lt(c.mutation,a,E3.empty(),s2.now()),vn(n,a)&&(o=o.insert(l,a))}),o})}getBaseDocument(t,n,s){return s===null||s.mutation.type===1?this.remoteDocumentCache.getEntry(t,n):T.resolve(V1.newInvalidDocument(n))}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class pd{constructor(t){this.wt=t,this.Jn=new Map,this.Yn=new Map}getBundleMetadata(t,n){return T.resolve(this.Jn.get(n))}saveBundleMetadata(t,n){var s;return this.Jn.set(n.id,{id:(s=n).id,version:s.version,createTime:se(s.createTime)}),T.resolve()}getNamedQuery(t,n){return T.resolve(this.Yn.get(n))}saveNamedQuery(t,n){return this.Yn.set(n.name,function(s){return{name:s.name,query:ad(s.bundledQuery),readTime:se(s.readTime)}}(n)),T.resolve()}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class md{constructor(){this.overlays=new F1($.comparator),this.Xn=new Map}getOverlay(t,n){return T.resolve(this.overlays.get(n))}getOverlays(t,n){const s=v3();return T.forEach(n,i=>this.getOverlay(t,i).next(r=>{r!==null&&s.set(i,r)})).next(()=>s)}saveOverlays(t,n,s){return s.forEach((i,r)=>{this.ie(t,n,r)}),T.resolve()}removeOverlaysForBatchId(t,n,s){const i=this.Xn.get(s);return i!==void 0&&(i.forEach(r=>this.overlays=this.overlays.remove(r)),this.Xn.delete(s)),T.resolve()}getOverlaysForCollection(t,n,s){const i=v3(),r=n.length+1,o=new $(n.child("")),l=this.overlays.getIteratorFrom(o);for(;l.hasNext();){const a=l.getNext().value,c=a.getKey();if(!n.isPrefixOf(c.path))break;c.path.length===r&&a.largestBatchId>s&&i.set(a.getKey(),a)}return T.resolve(i)}getOverlaysForCollectionGroup(t,n,s,i){let r=new F1((c,u)=>c-u);const o=this.overlays.getIterator();for(;o.hasNext();){const c=o.getNext().value;if(c.getKey().getCollectionGroup()===n&&c.largestBatchId>s){let u=r.get(c.largestBatchId);u===null&&(u=v3(),r=r.insert(c.largestBatchId,u)),u.set(c.getKey(),c)}}const l=v3(),a=r.getIterator();for(;a.hasNext()&&(a.getNext().value.forEach((c,u)=>l.set(c,u)),!(l.size()>=i)););return T.resolve(l)}ie(t,n,s){const i=this.overlays.get(s.key);if(i!==null){const o=this.Xn.get(i.largestBatchId).delete(s.key);this.Xn.set(i.largestBatchId,o)}this.overlays=this.overlays.insert(s.key,new od(n,s));let r=this.Xn.get(n);r===void 0&&(r=o1(),this.Xn.set(n,r)),this.Xn.set(n,r.add(s.key))}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class En{constructor(){this.Zn=new R1(M1.ts),this.es=new R1(M1.ns)}isEmpty(){return this.Zn.isEmpty()}addReference(t,n){const s=new M1(t,n);this.Zn=this.Zn.add(s),this.es=this.es.add(s)}ss(t,n){t.forEach(s=>this.addReference(s,n))}removeReference(t,n){this.rs(new M1(t,n))}os(t,n){t.forEach(s=>this.removeReference(s,n))}us(t){const n=new $(new C1([])),s=new M1(n,t),i=new M1(n,t+1),r=[];return this.es.forEachInRange([s,i],o=>{this.rs(o),r.push(o.key)}),r}cs(){this.Zn.forEach(t=>this.rs(t))}rs(t){this.Zn=this.Zn.delete(t),this.es=this.es.delete(t)}hs(t){const n=new $(new C1([])),s=new M1(n,t),i=new M1(n,t+1);let r=o1();return this.es.forEachInRange([s,i],o=>{r=r.add(o.key)}),r}containsKey(t){const n=new M1(t,0),s=this.Zn.firstAfterOrEqual(n);return s!==null&&t.isEqual(s.key)}}class M1{constructor(t,n){this.key=t,this.ls=n}static ts(t,n){return $.comparator(t.key,n.key)||h1(t.ls,n.ls)}static ns(t,n){return h1(t.ls,n.ls)||$.comparator(t.key,n.key)}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class gd{constructor(t,n){this.indexManager=t,this.referenceDelegate=n,this.mutationQueue=[],this.fs=1,this.ds=new R1(M1.ts)}checkEmpty(t){return T.resolve(this.mutationQueue.length===0)}addMutationBatch(t,n,s,i){const r=this.fs;this.fs++,this.mutationQueue.length>0&&this.mutationQueue[this.mutationQueue.length-1];const o=new rd(r,n,s,i);this.mutationQueue.push(o);for(const l of i)this.ds=this.ds.add(new M1(l.key,r)),this.indexManager.addToCollectionParentIndex(t,l.key.path.popLast());return T.resolve(o)}lookupMutationBatch(t,n){return T.resolve(this._s(n))}getNextMutationBatchAfterBatchId(t,n){const s=n+1,i=this.ws(s),r=i<0?0:i;return T.resolve(this.mutationQueue.length>r?this.mutationQueue[r]:null)}getHighestUnacknowledgedBatchId(){return T.resolve(this.mutationQueue.length===0?-1:this.fs-1)}getAllMutationBatches(t){return T.resolve(this.mutationQueue.slice())}getAllMutationBatchesAffectingDocumentKey(t,n){const s=new M1(n,0),i=new M1(n,Number.POSITIVE_INFINITY),r=[];return this.ds.forEachInRange([s,i],o=>{const l=this._s(o.ls);r.push(l)}),T.resolve(r)}getAllMutationBatchesAffectingDocumentKeys(t,n){let s=new R1(h1);return n.forEach(i=>{const r=new M1(i,0),o=new M1(i,Number.POSITIVE_INFINITY);this.ds.forEachInRange([r,o],l=>{s=s.add(l.ls)})}),T.resolve(this.gs(s))}getAllMutationBatchesAffectingQuery(t,n){const s=n.path,i=s.length+1;let r=s;$.isDocumentKey(r)||(r=r.child(""));const o=new M1(new $(r),0);let l=new R1(h1);return this.ds.forEachWhile(a=>{const c=a.key.path;return!!s.isPrefixOf(c)&&(c.length===i&&(l=l.add(a.ls)),!0)},o),T.resolve(this.gs(l))}gs(t){const n=[];return t.forEach(s=>{const i=this._s(s);i!==null&&n.push(i)}),n}removeMutationBatch(t,n){N1(this.ys(n.batchId,"removed")===0),this.mutationQueue.shift();let s=this.ds;return T.forEach(n.mutations,i=>{const r=new M1(i.key,n.batchId);return s=s.delete(r),this.referenceDelegate.markPotentiallyOrphaned(t,i.key)}).next(()=>{this.ds=s})}In(t){}containsKey(t,n){const s=new M1(n,0),i=this.ds.firstAfterOrEqual(s);return T.resolve(n.isEqual(i&&i.key))}performConsistencyCheck(t){return this.mutationQueue.length,T.resolve()}ys(t,n){return this.ws(t)}ws(t){return this.mutationQueue.length===0?0:t-this.mutationQueue[0].batchId}_s(t){const n=this.ws(t);return n<0||n>=this.mutationQueue.length?null:this.mutationQueue[n]}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class vd{constructor(t){this.ps=t,this.docs=new F1($.comparator),this.size=0}setIndexManager(t){this.indexManager=t}addEntry(t,n){const s=n.key,i=this.docs.get(s),r=i?i.size:0,o=this.ps(n);return this.docs=this.docs.insert(s,{document:n.mutableCopy(),size:o}),this.size+=o-r,this.indexManager.addToCollectionParentIndex(t,s.path.popLast())}removeEntry(t){const n=this.docs.get(t);n&&(this.docs=this.docs.remove(t),this.size-=n.size)}getEntry(t,n){const s=this.docs.get(n);return T.resolve(s?s.document.mutableCopy():V1.newInvalidDocument(n))}getEntries(t,n){let s=o3();return n.forEach(i=>{const r=this.docs.get(i);s=s.insert(i,r?r.document.mutableCopy():V1.newInvalidDocument(i))}),T.resolve(s)}getAllFromCollection(t,n,s){let i=o3();const r=new $(n.child("")),o=this.docs.getIteratorFrom(r);for(;o.hasNext();){const{key:l,value:{document:a}}=o.getNext();if(!n.isPrefixOf(l.path))break;l.path.length>n.length+1||sf(nf(a),s)<=0||(i=i.insert(a.key,a.mutableCopy()))}return T.resolve(i)}getAllFromCollectionGroup(t,n,s,i){t1()}Is(t,n){return T.forEach(this.docs,s=>n(s))}newChangeBuffer(t){return new yd(this)}getSize(t){return T.resolve(this.size)}}class yd extends hd{constructor(t){super(),this.zn=t}applyChanges(t){const n=[];return this.changes.forEach((s,i)=>{i.isValidDocument()?n.push(this.zn.addEntry(t,i)):this.zn.removeEntry(s)}),T.waitFor(n)}getFromCache(t,n){return this.zn.getEntry(t,n)}getAllFromCache(t,n){return this.zn.getEntries(t,n)}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class wd{constructor(t){this.persistence=t,this.Ts=new yt(n=>pn(n),mn),this.lastRemoteSnapshotVersion=Z.min(),this.highestTargetId=0,this.Es=0,this.As=new En,this.targetCount=0,this.Rs=lt.An()}forEachTarget(t,n){return this.Ts.forEach((s,i)=>n(i)),T.resolve()}getLastRemoteSnapshotVersion(t){return T.resolve(this.lastRemoteSnapshotVersion)}getHighestSequenceNumber(t){return T.resolve(this.Es)}allocateTargetId(t){return this.highestTargetId=this.Rs.next(),T.resolve(this.highestTargetId)}setTargetsMetadata(t,n,s){return s&&(this.lastRemoteSnapshotVersion=s),n>this.Es&&(this.Es=n),T.resolve()}vn(t){this.Ts.set(t.target,t);const n=t.targetId;n>this.highestTargetId&&(this.Rs=new lt(n),this.highestTargetId=n),t.sequenceNumber>this.Es&&(this.Es=t.sequenceNumber)}addTargetData(t,n){return this.vn(n),this.targetCount+=1,T.resolve()}updateTargetData(t,n){return this.vn(n),T.resolve()}removeTargetData(t,n){return this.Ts.delete(n.target),this.As.us(n.targetId),this.targetCount-=1,T.resolve()}removeTargets(t,n,s){let i=0;const r=[];return this.Ts.forEach((o,l)=>{l.sequenceNumber<=n&&s.get(l.targetId)===null&&(this.Ts.delete(o),r.push(this.removeMatchingKeysForTargetId(t,l.targetId)),i++)}),T.waitFor(r).next(()=>i)}getTargetCount(t){return T.resolve(this.targetCount)}getTargetData(t,n){const s=this.Ts.get(n)||null;return T.resolve(s)}addMatchingKeys(t,n,s){return this.As.ss(n,s),T.resolve()}removeMatchingKeys(t,n,s){this.As.os(n,s);const i=this.persistence.referenceDelegate,r=[];return i&&n.forEach(o=>{r.push(i.markPotentiallyOrphaned(t,o))}),T.waitFor(r)}removeMatchingKeysForTargetId(t,n){return this.As.us(n),T.resolve()}getMatchingKeysForTargetId(t,n){const s=this.As.hs(n);return T.resolve(s)}containsKey(t,n){return T.resolve(this.As.containsKey(n))}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Ed{constructor(t,n){this.bs={},this.overlays={},this.Ps=new fn(0),this.vs=!1,this.vs=!0,this.referenceDelegate=t(this),this.Vs=new wd(this),this.indexManager=new cd,this.remoteDocumentCache=function(s){return new vd(s)}(s=>this.referenceDelegate.Ss(s)),this.wt=new ld(n),this.Ds=new pd(this.wt)}start(){return Promise.resolve()}shutdown(){return this.vs=!1,Promise.resolve()}get started(){return this.vs}setDatabaseDeletedListener(){}setNetworkEnabled(){}getIndexManager(t){return this.indexManager}getDocumentOverlayCache(t){let n=this.overlays[t.toKey()];return n||(n=new md,this.overlays[t.toKey()]=n),n}getMutationQueue(t,n){let s=this.bs[t.toKey()];return s||(s=new gd(n,this.referenceDelegate),this.bs[t.toKey()]=s),s}getTargetCache(){return this.Vs}getRemoteDocumentCache(){return this.remoteDocumentCache}getBundleCache(){return this.Ds}runTransaction(t,n,s){F("MemoryPersistence","Starting transaction:",t);const i=new bd(this.Ps.next());return this.referenceDelegate.Cs(),s(i).next(r=>this.referenceDelegate.xs(i).next(()=>r)).toPromise().then(r=>(i.raiseOnCommittedEvent(),r))}Ns(t,n){return T.or(Object.values(this.bs).map(s=>()=>s.containsKey(t,n)))}}class bd extends of{constructor(t){super(),this.currentSequenceNumber=t}}class bn{constructor(t){this.persistence=t,this.ks=new En,this.Os=null}static Ms(t){return new bn(t)}get Fs(){if(this.Os)return this.Os;throw t1()}addReference(t,n,s){return this.ks.addReference(s,n),this.Fs.delete(s.toString()),T.resolve()}removeReference(t,n,s){return this.ks.removeReference(s,n),this.Fs.add(s.toString()),T.resolve()}markPotentiallyOrphaned(t,n){return this.Fs.add(n.toString()),T.resolve()}removeTarget(t,n){this.ks.us(n.targetId).forEach(i=>this.Fs.add(i.toString()));const s=this.persistence.getTargetCache();return s.getMatchingKeysForTargetId(t,n.targetId).next(i=>{i.forEach(r=>this.Fs.add(r.toString()))}).next(()=>s.removeTargetData(t,n))}Cs(){this.Os=new Set}xs(t){const n=this.persistence.getRemoteDocumentCache().newChangeBuffer();return T.forEach(this.Fs,s=>{const i=$.fromPath(s);return this.$s(t,i).next(r=>{r||n.removeEntry(i,Z.min())})}).next(()=>(this.Os=null,n.apply(t)))}updateLimboDocument(t,n){return this.$s(t,n).next(s=>{s?this.Fs.delete(n.toString()):this.Fs.add(n.toString())})}Ss(t){return 0}$s(t,n){return T.or([()=>T.resolve(this.ks.containsKey(n)),()=>this.persistence.getTargetCache().containsKey(t,n),()=>this.persistence.Ns(t,n)])}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class _n{constructor(t,n,s,i){this.targetId=t,this.fromCache=n,this.Pi=s,this.vi=i}static Vi(t,n){let s=o1(),i=o1();for(const r of n.docChanges)switch(r.type){case 0:s=s.add(r.doc.key);break;case 1:i=i.add(r.doc.key)}return new _n(t,n.fromCache,s,i)}}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class _d{constructor(){this.Si=!1}initialize(t,n){this.Di=t,this.indexManager=n,this.Si=!0}getDocumentsMatchingQuery(t,n,s,i){return this.Ci(t,n).next(r=>r||this.xi(t,n,i,s)).next(r=>r||this.Ni(t,n))}Ci(t,n){return T.resolve(null)}xi(t,n,s,i){return _f(n)||i.isEqual(Z.min())?this.Ni(t,n):this.Di.getDocuments(t,s).next(r=>{const o=this.ki(n,r);return this.Oi(n,o,s,i)?this.Ni(t,n):(Y7()<=c1.DEBUG&&F("QueryEngine","Re-using previous result from %s to execute query: %s",i.toString(),s6(n)),this.Mi(t,o,n,ef(i,-1)))})}ki(t,n){let s=new R1(xi(t));return n.forEach((i,r)=>{vn(t,r)&&(s=s.add(r))}),s}Oi(t,n,s,i){if(t.limit===null)return!1;if(s.size!==n.size)return!0;const r=t.limitType==="F"?n.last():n.first();return!!r&&(r.hasPendingWrites||r.version.compareTo(i)>0)}Ni(t,n){return Y7()<=c1.DEBUG&&F("QueryEngine","Using full collection scan to execute query:",s6(n)),this.Di.getDocumentsMatchingQuery(t,n,i3.min())}Mi(t,n,s,i){return this.Di.getDocumentsMatchingQuery(t,s,i).next(r=>(n.forEach(o=>{r=r.insert(o.key,o)}),r))}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Td{constructor(t,n,s,i){this.persistence=t,this.Fi=n,this.wt=i,this.$i=new F1(h1),this.Bi=new yt(r=>pn(r),mn),this.Li=new Map,this.Ui=t.getRemoteDocumentCache(),this.Vs=t.getTargetCache(),this.Ds=t.getBundleCache(),this.qi(s)}qi(t){this.documentOverlayCache=this.persistence.getDocumentOverlayCache(t),this.indexManager=this.persistence.getIndexManager(t),this.mutationQueue=this.persistence.getMutationQueue(t,this.indexManager),this.localDocuments=new dd(this.Ui,this.mutationQueue,this.documentOverlayCache,this.indexManager),this.Ui.setIndexManager(this.indexManager),this.Fi.initialize(this.localDocuments,this.indexManager)}collectGarbage(t){return this.persistence.runTransaction("Collect garbage","readwrite-primary",n=>t.collect(n,this.$i))}}function xd(e,t,n,s){return new Td(e,t,n,s)}async function Vi(e,t){const n=l1(e);return await n.persistence.runTransaction("Handle user change","readonly",s=>{let i;return n.mutationQueue.getAllMutationBatches(s).next(r=>(i=r,n.qi(t),n.mutationQueue.getAllMutationBatches(s))).next(r=>{const o=[],l=[];let a=o1();for(const c of i){o.push(c.batchId);for(const u of c.mutations)a=a.add(u.key)}for(const c of r){l.push(c.batchId);for(const u of c.mutations)a=a.add(u.key)}return n.localDocuments.getDocuments(s,a).next(c=>({Ki:c,removedBatchIds:o,addedBatchIds:l}))})})}function $i(e){const t=l1(e);return t.persistence.runTransaction("Get last remote snapshot version","readonly",n=>t.Vs.getLastRemoteSnapshotVersion(n))}function Cd(e,t){const n=l1(e),s=t.snapshotVersion;let i=n.$i;return n.persistence.runTransaction("Apply remote event","readwrite-primary",r=>{const o=n.Ui.newChangeBuffer({trackRemovals:!0});i=n.$i;const l=[];t.targetChanges.forEach((u,h)=>{const f=i.get(h);if(!f)return;l.push(n.Vs.removeMatchingKeys(r,u.removedDocuments,h).next(()=>n.Vs.addMatchingKeys(r,u.addedDocuments,h)));let m=f.withSequenceNumber(r.currentSequenceNumber);t.targetMismatches.has(h)?m=m.withResumeToken(j1.EMPTY_BYTE_STRING,Z.min()).withLastLimboFreeSnapshotVersion(Z.min()):u.resumeToken.approximateByteSize()>0&&(m=m.withResumeToken(u.resumeToken,s)),i=i.insert(h,m),function(v,A,x){return v.resumeToken.approximateByteSize()===0||A.snapshotVersion.toMicroseconds()-v.snapshotVersion.toMicroseconds()>=3e8?!0:x.addedDocuments.size+x.modifiedDocuments.size+x.removedDocuments.size>0}(f,m,u)&&l.push(n.Vs.updateTargetData(r,m))});let a=o3(),c=o1();if(t.documentUpdates.forEach(u=>{t.resolvedLimboDocuments.has(u)&&l.push(n.persistence.referenceDelegate.updateLimboDocument(r,u))}),l.push(Id(r,o,t.documentUpdates).next(u=>{a=u.Gi,c=u.Qi})),!s.isEqual(Z.min())){const u=n.Vs.getLastRemoteSnapshotVersion(r).next(h=>n.Vs.setTargetsMetadata(r,r.currentSequenceNumber,s));l.push(u)}return T.waitFor(l).next(()=>o.apply(r)).next(()=>n.localDocuments.getLocalViewOfDocuments(r,a,c)).next(()=>a)}).then(r=>(n.$i=i,r))}function Id(e,t,n){let s=o1(),i=o1();return n.forEach(r=>s=s.add(r)),t.getEntries(e,s).next(r=>{let o=o3();return n.forEach((l,a)=>{const c=r.get(l);a.isFoundDocument()!==c.isFoundDocument()&&(i=i.add(l)),a.isNoDocument()&&a.version.isEqual(Z.min())?(t.removeEntry(l,a.readTime),o=o.insert(l,a)):!c.isValidDocument()||a.version.compareTo(c.version)>0||a.version.compareTo(c.version)===0&&c.hasPendingWrites?(t.addEntry(a),o=o.insert(l,a)):F("LocalStore","Ignoring outdated watch update for ",l,". Current version:",c.version," Watch version:",a.version)}),{Gi:o,Qi:i}})}function Sd(e,t){const n=l1(e);return n.persistence.runTransaction("Allocate target","readwrite",s=>{let i;return n.Vs.getTargetData(s,t).next(r=>r?(i=r,T.resolve(i)):n.Vs.allocateTargetId(s).next(o=>(i=new _3(t,o,0,s.currentSequenceNumber),n.Vs.addTargetData(s,i).next(()=>i))))}).then(s=>{const i=n.$i.get(s.targetId);return(i===null||s.snapshotVersion.compareTo(i.snapshotVersion)>0)&&(n.$i=n.$i.insert(s.targetId,s),n.Bi.set(t,s.targetId)),s})}async function l6(e,t,n){const s=l1(e),i=s.$i.get(t),r=n?"readwrite":"readwrite-primary";try{n||await s.persistence.runTransaction("Release target",r,o=>s.persistence.referenceDelegate.removeTarget(o,i))}catch(o){if(!pe(o))throw o;F("LocalStore",`Failed to update sequence numbers for target ${t}: ${o}`)}s.$i=s.$i.remove(t),s.Bi.delete(i.target)}function m8(e,t,n){const s=l1(e);let i=Z.min(),r=o1();return s.persistence.runTransaction("Execute query","readonly",o=>function(l,a,c){const u=l1(l),h=u.Bi.get(c);return h!==void 0?T.resolve(u.$i.get(h)):u.Vs.getTargetData(a,c)}(s,o,A3(t)).next(l=>{if(l)return i=l.lastLimboFreeSnapshotVersion,s.Vs.getMatchingKeysForTargetId(o,l.targetId).next(a=>{r=a})}).next(()=>s.Fi.getDocumentsMatchingQuery(o,t,n?i:Z.min(),n?r:o1())).next(l=>(Ad(s,Sf(t),l),{documents:l,ji:r})))}function Ad(e,t,n){let s=Z.min();n.forEach((i,r)=>{r.readTime.compareTo(s)>0&&(s=r.readTime)}),e.Li.set(t,s)}class g8{constructor(){this.activeTargetIds=Oi()}Xi(t){this.activeTargetIds=this.activeTargetIds.add(t)}Zi(t){this.activeTargetIds=this.activeTargetIds.delete(t)}Yi(){const t={activeTargetIds:this.activeTargetIds.toArray(),updateTimeMs:Date.now()};return JSON.stringify(t)}}class Nd{constructor(){this.Fr=new g8,this.$r={},this.onlineStateHandler=null,this.sequenceNumberHandler=null}addPendingMutation(t){}updateMutationState(t,n,s){}addLocalQueryTarget(t){return this.Fr.Xi(t),this.$r[t]||"not-current"}updateQueryState(t,n,s){this.$r[t]=n}removeLocalQueryTarget(t){this.Fr.Zi(t)}isLocalQueryTarget(t){return this.Fr.activeTargetIds.has(t)}clearQueryState(t){delete this.$r[t]}getAllActiveQueryTargets(){return this.Fr.activeTargetIds}isActiveQueryTarget(t){return this.Fr.activeTargetIds.has(t)}start(){return this.Fr=new g8,Promise.resolve()}handleUserChange(t,n,s){}setOnlineState(t){}shutdown(){}writeSequenceNumber(t){}notifyBundleLoaded(t){}}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Dd{Br(t){}shutdown(){}}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class v8{constructor(){this.Lr=()=>this.Ur(),this.qr=()=>this.Kr(),this.Gr=[],this.Qr()}Br(t){this.Gr.push(t)}shutdown(){window.removeEventListener("online",this.Lr),window.removeEventListener("offline",this.qr)}Qr(){window.addEventListener("online",this.Lr),window.addEventListener("offline",this.qr)}Ur(){F("ConnectivityMonitor","Network connectivity changed: AVAILABLE");for(const t of this.Gr)t(0)}Kr(){F("ConnectivityMonitor","Network connectivity changed: UNAVAILABLE");for(const t of this.Gr)t(1)}static V(){return typeof window<"u"&&window.addEventListener!==void 0&&window.removeEventListener!==void 0}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const kd={BatchGetDocuments:"batchGet",Commit:"commit",RunQuery:"runQuery"};/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Rd{constructor(t){this.jr=t.jr,this.Wr=t.Wr}zr(t){this.Hr=t}Jr(t){this.Yr=t}onMessage(t){this.Xr=t}close(){this.Wr()}send(t){this.jr(t)}Zr(){this.Hr()}eo(t){this.Yr(t)}no(t){this.Xr(t)}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Od extends class{constructor(t){this.databaseInfo=t,this.databaseId=t.databaseId;const n=t.ssl?"https":"http";this.so=n+"://"+t.host,this.io="projects/"+this.databaseId.projectId+"/databases/"+this.databaseId.database+"/documents"}ro(t,n,s,i,r){const o=this.oo(t,n);F("RestConnection","Sending: ",o,s);const l={};return this.uo(l,i,r),this.co(t,o,l,s).then(a=>(F("RestConnection","Received: ",a),a),a=>{throw J7("RestConnection",`${t} failed with error: `,a,"url: ",o,"request:",s),a})}ao(t,n,s,i,r,o){return this.ro(t,n,s,i,r)}uo(t,n,s){t["X-Goog-Api-Client"]="gl-js/ fire/"+vt,t["Content-Type"]="text/plain",this.databaseInfo.appId&&(t["X-Firebase-GMPID"]=this.databaseInfo.appId),n&&n.headers.forEach((i,r)=>t[r]=i),s&&s.headers.forEach((i,r)=>t[r]=i)}oo(t,n){const s=kd[t];return`${this.so}/v1/${n}:${s}`}}{constructor(t){super(t),this.forceLongPolling=t.forceLongPolling,this.autoDetectLongPolling=t.autoDetectLongPolling,this.useFetchStreams=t.useFetchStreams}co(t,n,s,i){return new Promise((r,o)=>{const l=new Kh;l.listenOnce(Uh.COMPLETE,()=>{try{switch(l.getLastErrorCode()){case u5.NO_ERROR:const c=l.getResponseJson();F("Connection","XHR received:",JSON.stringify(c)),r(c);break;case u5.TIMEOUT:F("Connection",'RPC "'+t+'" timed out'),o(new j(k.DEADLINE_EXCEEDED,"Request time out"));break;case u5.HTTP_ERROR:const u=l.getStatus();if(F("Connection",'RPC "'+t+'" failed with status:',u,"response text:",l.getResponseText()),u>0){const h=l.getResponseJson().error;if(h&&h.status&&h.message){const f=function(m){const v=m.toLowerCase().replace(/_/g,"-");return Object.values(k).indexOf(v)>=0?v:k.UNKNOWN}(h.status);o(new j(f,h.message))}else o(new j(k.UNKNOWN,"Server responded with status "+l.getStatus()))}else o(new j(k.UNAVAILABLE,"Connection failed."));break;default:t1()}}finally{F("Connection",'RPC "'+t+'" completed.')}});const a=JSON.stringify(i);l.send(n,"POST",a,s,15)})}ho(t,n,s){const i=[this.so,"/","google.firestore.v1.Firestore","/",t,"/channel"],r=Vh(),o=$h(),l={httpSessionIdParam:"gsessionid",initMessageHeaders:{},messageUrlParams:{database:`projects/${this.databaseId.projectId}/databases/${this.databaseId.database}`},sendRawJson:!0,supportsCrossDomainXhr:!0,internalChannelParams:{forwardChannelRequestTimeoutMs:6e5},forceLongPolling:this.forceLongPolling,detectBufferingProxy:this.autoDetectLongPolling};this.useFetchStreams&&(l.xmlHttpFactory=new Hh({})),this.uo(l.initMessageHeaders,n,s),Ec()||_c()||Tc()||xc()||Cc()||bc()||(l.httpHeadersOverwriteParam="$httpHeaders");const a=i.join("");F("Connection","Creating WebChannel: "+a,l);const c=r.createWebChannel(a,l);let u=!1,h=!1;const f=new Rd({jr:v=>{h?F("Connection","Not sending because WebChannel is closed:",v):(u||(F("Connection","Opening WebChannel transport."),c.open(),u=!0),F("Connection","WebChannel sending:",v),c.send(v))},Wr:()=>c.close()}),m=(v,A,x)=>{v.listen(A,S=>{try{x(S)}catch(_){setTimeout(()=>{throw _},0)}})};return m(c,Se.EventType.OPEN,()=>{h||F("Connection","WebChannel transport opened.")}),m(c,Se.EventType.CLOSE,()=>{h||(h=!0,F("Connection","WebChannel transport closed"),f.eo())}),m(c,Se.EventType.ERROR,v=>{h||(h=!0,J7("Connection","WebChannel transport errored:",v),f.eo(new j(k.UNAVAILABLE,"The operation could not be completed")))}),m(c,Se.EventType.MESSAGE,v=>{var A;if(!h){const x=v.data[0];N1(!!x);const S=x,_=S.error||((A=S[0])===null||A===void 0?void 0:A.error);if(_){F("Connection","WebChannel received error:",_);const O=_.status;let U=function(s1){const T1=S1[s1];if(T1!==void 0)return Di(T1)}(O),Q=_.message;U===void 0&&(U=k.INTERNAL,Q="Unknown error status: "+O+" with message "+_.message),h=!0,f.eo(new j(U,Q)),c.close()}else F("Connection","WebChannel received:",x),f.no(x)}}),m(o,jh.STAT_EVENT,v=>{v.stat===Q7.PROXY?F("Connection","Detected buffering proxy"):v.stat===Q7.NOPROXY&&F("Connection","Detected no buffering proxy")}),setTimeout(()=>{f.Zr()},0),f}}function d5(){return typeof document<"u"?document:null}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function Ui(e){return new Kf(e,!0)}class ji{constructor(t,n,s=1e3,i=1.5,r=6e4){this.js=t,this.timerId=n,this.lo=s,this.fo=i,this._o=r,this.wo=0,this.mo=null,this.yo=Date.now(),this.reset()}reset(){this.wo=0}po(){this.wo=this._o}Io(t){this.cancel();const n=Math.floor(this.wo+this.To()),s=Math.max(0,Date.now()-this.yo),i=Math.max(0,n-s);i>0&&F("ExponentialBackoff",`Backing off for ${i} ms (base delay: ${this.wo} ms, delay with jitter: ${n} ms, last attempt: ${s} ms ago)`),this.mo=this.js.enqueueAfterDelay(this.timerId,i,()=>(this.yo=Date.now(),t())),this.wo*=this.fo,this.wo<this.lo&&(this.wo=this.lo),this.wo>this._o&&(this.wo=this._o)}Eo(){this.mo!==null&&(this.mo.skipDelay(),this.mo=null)}cancel(){this.mo!==null&&(this.mo.cancel(),this.mo=null)}To(){return(Math.random()-.5)*this.wo}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Md{constructor(t,n,s,i,r,o,l,a){this.js=t,this.Ao=s,this.Ro=i,this.bo=r,this.authCredentialsProvider=o,this.appCheckCredentialsProvider=l,this.listener=a,this.state=0,this.Po=0,this.vo=null,this.Vo=null,this.stream=null,this.So=new ji(t,n)}Do(){return this.state===1||this.state===5||this.Co()}Co(){return this.state===2||this.state===3}start(){this.state!==4?this.auth():this.xo()}async stop(){this.Do()&&await this.close(0)}No(){this.state=0,this.So.reset()}ko(){this.Co()&&this.vo===null&&(this.vo=this.js.enqueueAfterDelay(this.Ao,6e4,()=>this.Oo()))}Mo(t){this.Fo(),this.stream.send(t)}async Oo(){if(this.Co())return this.close(0)}Fo(){this.vo&&(this.vo.cancel(),this.vo=null)}$o(){this.Vo&&(this.Vo.cancel(),this.Vo=null)}async close(t,n){this.Fo(),this.$o(),this.So.cancel(),this.Po++,t!==4?this.So.reset():n&&n.code===k.RESOURCE_EXHAUSTED?(s3(n.toString()),s3("Using maximum backoff delay to prevent overloading the backend."),this.So.po()):n&&n.code===k.UNAUTHENTICATED&&this.state!==3&&(this.authCredentialsProvider.invalidateToken(),this.appCheckCredentialsProvider.invalidateToken()),this.stream!==null&&(this.Bo(),this.stream.close(),this.stream=null),this.state=t,await this.listener.Jr(n)}Bo(){}auth(){this.state=1;const t=this.Lo(this.Po),n=this.Po;Promise.all([this.authCredentialsProvider.getToken(),this.appCheckCredentialsProvider.getToken()]).then(([s,i])=>{this.Po===n&&this.Uo(s,i)},s=>{t(()=>{const i=new j(k.UNKNOWN,"Fetching auth token failed: "+s.message);return this.qo(i)})})}Uo(t,n){const s=this.Lo(this.Po);this.stream=this.Ko(t,n),this.stream.zr(()=>{s(()=>(this.state=2,this.Vo=this.js.enqueueAfterDelay(this.Ro,1e4,()=>(this.Co()&&(this.state=3),Promise.resolve())),this.listener.zr()))}),this.stream.Jr(i=>{s(()=>this.qo(i))}),this.stream.onMessage(i=>{s(()=>this.onMessage(i))})}xo(){this.state=5,this.So.Io(async()=>{this.state=0,this.start()})}qo(t){return F("PersistentStream",`close with error: ${t}`),this.stream=null,this.close(4,t)}Lo(t){return n=>{this.js.enqueueAndForget(()=>this.Po===t?n():(F("PersistentStream","stream callback skipped by getCloseGuardedDispatcher."),Promise.resolve()))}}}class Pd extends Md{constructor(t,n,s,i,r,o){super(t,"listen_stream_connection_backoff","listen_stream_idle","health_check_timeout",n,s,i,o),this.wt=r}Ko(t,n){return this.bo.ho("Listen",t,n)}onMessage(t){this.So.reset();const n=Xf(this.wt,t),s=function(i){if(!("targetChange"in i))return Z.min();const r=i.targetChange;return r.targetIds&&r.targetIds.length?Z.min():r.readTime?se(r.readTime):Z.min()}(t);return this.listener.Go(n,s)}Qo(t){const n={};n.database=p8(this.wt),n.addTarget=function(i,r){let o;const l=r.target;return o=n6(l)?{documents:Yf(i,l)}:{query:Jf(i,l)},o.targetId=r.targetId,r.resumeToken.approximateByteSize()>0?o.resumeToken=Gf(i,r.resumeToken):r.snapshotVersion.compareTo(Z.min())>0&&(o.readTime=qf(i,r.snapshotVersion.toTimestamp())),o}(this.wt,t);const s=td(this.wt,t);s&&(n.labels=s),this.Mo(n)}jo(t){const n={};n.database=p8(this.wt),n.removeTarget=t,this.Mo(n)}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class zd extends class{}{constructor(t,n,s,i){super(),this.authCredentials=t,this.appCheckCredentials=n,this.bo=s,this.wt=i,this.Zo=!1}tu(){if(this.Zo)throw new j(k.FAILED_PRECONDITION,"The client has already been terminated.")}ro(t,n,s){return this.tu(),Promise.all([this.authCredentials.getToken(),this.appCheckCredentials.getToken()]).then(([i,r])=>this.bo.ro(t,n,s,i,r)).catch(i=>{throw i.name==="FirebaseError"?(i.code===k.UNAUTHENTICATED&&(this.authCredentials.invalidateToken(),this.appCheckCredentials.invalidateToken()),i):new j(k.UNKNOWN,i.toString())})}ao(t,n,s,i){return this.tu(),Promise.all([this.authCredentials.getToken(),this.appCheckCredentials.getToken()]).then(([r,o])=>this.bo.ao(t,n,s,r,o,i)).catch(r=>{throw r.name==="FirebaseError"?(r.code===k.UNAUTHENTICATED&&(this.authCredentials.invalidateToken(),this.appCheckCredentials.invalidateToken()),r):new j(k.UNKNOWN,r.toString())})}terminate(){this.Zo=!0}}class Ld{constructor(t,n){this.asyncQueue=t,this.onlineStateHandler=n,this.state="Unknown",this.eu=0,this.nu=null,this.su=!0}iu(){this.eu===0&&(this.ru("Unknown"),this.nu=this.asyncQueue.enqueueAfterDelay("online_state_timeout",1e4,()=>(this.nu=null,this.ou("Backend didn't respond within 10 seconds."),this.ru("Offline"),Promise.resolve())))}uu(t){this.state==="Online"?this.ru("Unknown"):(this.eu++,this.eu>=1&&(this.cu(),this.ou(`Connection failed 1 times. Most recent error: ${t.toString()}`),this.ru("Offline")))}set(t){this.cu(),this.eu=0,t==="Online"&&(this.su=!1),this.ru(t)}ru(t){t!==this.state&&(this.state=t,this.onlineStateHandler(t))}ou(t){const n=`Could not reach Cloud Firestore backend. ${t}
This typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.`;this.su?(s3(n),this.su=!1):F("OnlineStateTracker",n)}cu(){this.nu!==null&&(this.nu.cancel(),this.nu=null)}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Fd{constructor(t,n,s,i,r){this.localStore=t,this.datastore=n,this.asyncQueue=s,this.remoteSyncer={},this.au=[],this.hu=new Map,this.lu=new Set,this.fu=[],this.du=r,this.du.Br(o=>{s.enqueueAndForget(async()=>{ve(this)&&(F("RemoteStore","Restarting streams for network reachability change."),await async function(l){const a=l1(l);a.lu.add(4),await ge(a),a._u.set("Unknown"),a.lu.delete(4),await U4(a)}(this))})}),this._u=new Ld(s,i)}}async function U4(e){if(ve(e))for(const t of e.fu)await t(!0)}async function ge(e){for(const t of e.fu)await t(!1)}function Hi(e,t){const n=l1(e);n.hu.has(t.targetId)||(n.hu.set(t.targetId,t),Cn(n)?xn(n):wt(n).Co()&&Tn(n,t))}function Ki(e,t){const n=l1(e),s=wt(n);n.hu.delete(t),s.Co()&&qi(n,t),n.hu.size===0&&(s.Co()?s.ko():ve(n)&&n._u.set("Unknown"))}function Tn(e,t){e.wu.Nt(t.targetId),wt(e).Qo(t)}function qi(e,t){e.wu.Nt(t),wt(e).jo(t)}function xn(e){e.wu=new Uf({getRemoteKeysForTarget:t=>e.remoteSyncer.getRemoteKeysForTarget(t),te:t=>e.hu.get(t)||null}),wt(e).start(),e._u.iu()}function Cn(e){return ve(e)&&!wt(e).Do()&&e.hu.size>0}function ve(e){return l1(e).lu.size===0}function Gi(e){e.wu=void 0}async function Bd(e){e.hu.forEach((t,n)=>{Tn(e,t)})}async function Vd(e,t){Gi(e),Cn(e)?(e._u.uu(t),xn(e)):e._u.set("Unknown")}async function $d(e,t,n){if(e._u.set("Online"),t instanceof Pi&&t.state===2&&t.cause)try{await async function(s,i){const r=i.cause;for(const o of i.targetIds)s.hu.has(o)&&(await s.remoteSyncer.rejectListen(o,r),s.hu.delete(o),s.wu.removeTarget(o))}(e,t)}catch(s){F("RemoteStore","Failed to remove targets %s: %s ",t.targetIds.join(","),s),await y8(e,s)}else if(t instanceof ze?e.wu.Ut(t):t instanceof Mi?e.wu.zt(t):e.wu.Gt(t),!n.isEqual(Z.min()))try{const s=await $i(e.localStore);n.compareTo(s)>=0&&await function(i,r){const o=i.wu.Yt(r);return o.targetChanges.forEach((l,a)=>{if(l.resumeToken.approximateByteSize()>0){const c=i.hu.get(a);c&&i.hu.set(a,c.withResumeToken(l.resumeToken,r))}}),o.targetMismatches.forEach(l=>{const a=i.hu.get(l);if(!a)return;i.hu.set(l,a.withResumeToken(j1.EMPTY_BYTE_STRING,a.snapshotVersion)),qi(i,l);const c=new _3(a.target,l,1,a.sequenceNumber);Tn(i,c)}),i.remoteSyncer.applyRemoteEvent(o)}(e,n)}catch(s){F("RemoteStore","Failed to raise snapshot:",s),await y8(e,s)}}async function y8(e,t,n){if(!pe(t))throw t;e.lu.add(1),await ge(e),e._u.set("Offline"),n||(n=()=>$i(e.localStore)),e.asyncQueue.enqueueRetryable(async()=>{F("RemoteStore","Retrying IndexedDB access"),await n(),e.lu.delete(1),await U4(e)})}async function w8(e,t){const n=l1(e);n.asyncQueue.verifyOperationInProgress(),F("RemoteStore","RemoteStore received new credentials");const s=ve(n);n.lu.add(3),await ge(n),s&&n._u.set("Unknown"),await n.remoteSyncer.handleCredentialChange(t),n.lu.delete(3),await U4(n)}async function Ud(e,t){const n=l1(e);t?(n.lu.delete(2),await U4(n)):t||(n.lu.add(2),await ge(n),n._u.set("Unknown"))}function wt(e){return e.mu||(e.mu=function(t,n,s){const i=l1(t);return i.tu(),new Pd(n,i.bo,i.authCredentials,i.appCheckCredentials,i.wt,s)}(e.datastore,e.asyncQueue,{zr:Bd.bind(null,e),Jr:Vd.bind(null,e),Go:$d.bind(null,e)}),e.fu.push(async t=>{t?(e.mu.No(),Cn(e)?xn(e):e._u.set("Unknown")):(await e.mu.stop(),Gi(e))})),e.mu}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class In{constructor(t,n,s,i,r){this.asyncQueue=t,this.timerId=n,this.targetTimeMs=s,this.op=i,this.removalCallback=r,this.deferred=new w3,this.then=this.deferred.promise.then.bind(this.deferred.promise),this.deferred.promise.catch(o=>{})}static createAndSchedule(t,n,s,i,r){const o=Date.now()+s,l=new In(t,n,o,i,r);return l.start(s),l}start(t){this.timerHandle=setTimeout(()=>this.handleDelayElapsed(),t)}skipDelay(){return this.handleDelayElapsed()}cancel(t){this.timerHandle!==null&&(this.clearTimeout(),this.deferred.reject(new j(k.CANCELLED,"Operation cancelled"+(t?": "+t:""))))}handleDelayElapsed(){this.asyncQueue.enqueueAndForget(()=>this.timerHandle!==null?(this.clearTimeout(),this.op().then(t=>this.deferred.resolve(t))):Promise.resolve())}clearTimeout(){this.timerHandle!==null&&(this.removalCallback(this),clearTimeout(this.timerHandle),this.timerHandle=null)}}function Wi(e,t){if(s3("AsyncQueue",`${t}: ${e}`),pe(e))return new j(k.UNAVAILABLE,`${t}: ${e}`);throw e}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class J3{constructor(t){this.comparator=t?(n,s)=>t(n,s)||$.comparator(n.key,s.key):(n,s)=>$.comparator(n.key,s.key),this.keyedMap=St(),this.sortedSet=new F1(this.comparator)}static emptySet(t){return new J3(t.comparator)}has(t){return this.keyedMap.get(t)!=null}get(t){return this.keyedMap.get(t)}first(){return this.sortedSet.minKey()}last(){return this.sortedSet.maxKey()}isEmpty(){return this.sortedSet.isEmpty()}indexOf(t){const n=this.keyedMap.get(t);return n?this.sortedSet.indexOf(n):-1}get size(){return this.sortedSet.size}forEach(t){this.sortedSet.inorderTraversal((n,s)=>(t(n),!1))}add(t){const n=this.delete(t.key);return n.copy(n.keyedMap.insert(t.key,t),n.sortedSet.insert(t,null))}delete(t){const n=this.get(t);return n?this.copy(this.keyedMap.remove(t),this.sortedSet.remove(n)):this}isEqual(t){if(!(t instanceof J3)||this.size!==t.size)return!1;const n=this.sortedSet.getIterator(),s=t.sortedSet.getIterator();for(;n.hasNext();){const i=n.getNext().key,r=s.getNext().key;if(!i.isEqual(r))return!1}return!0}toString(){const t=[];return this.forEach(n=>{t.push(n.toString())}),t.length===0?"DocumentSet ()":`DocumentSet (
  `+t.join(`  
`)+`
)`}copy(t,n){const s=new J3;return s.comparator=this.comparator,s.keyedMap=t,s.sortedSet=n,s}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class E8{constructor(){this.yu=new F1($.comparator)}track(t){const n=t.doc.key,s=this.yu.get(n);s?t.type!==0&&s.type===3?this.yu=this.yu.insert(n,t):t.type===3&&s.type!==1?this.yu=this.yu.insert(n,{type:s.type,doc:t.doc}):t.type===2&&s.type===2?this.yu=this.yu.insert(n,{type:2,doc:t.doc}):t.type===2&&s.type===0?this.yu=this.yu.insert(n,{type:0,doc:t.doc}):t.type===1&&s.type===0?this.yu=this.yu.remove(n):t.type===1&&s.type===2?this.yu=this.yu.insert(n,{type:1,doc:s.doc}):t.type===0&&s.type===1?this.yu=this.yu.insert(n,{type:2,doc:t.doc}):t1():this.yu=this.yu.insert(n,t)}pu(){const t=[];return this.yu.inorderTraversal((n,s)=>{t.push(s)}),t}}class at{constructor(t,n,s,i,r,o,l,a){this.query=t,this.docs=n,this.oldDocs=s,this.docChanges=i,this.mutatedKeys=r,this.fromCache=o,this.syncStateChanged=l,this.excludesMetadataChanges=a}static fromInitialDocuments(t,n,s,i){const r=[];return n.forEach(o=>{r.push({type:0,doc:o})}),new at(t,n,J3.emptySet(n),r,s,i,!0,!1)}get hasPendingWrites(){return!this.mutatedKeys.isEmpty()}isEqual(t){if(!(this.fromCache===t.fromCache&&this.syncStateChanged===t.syncStateChanged&&this.mutatedKeys.isEqual(t.mutatedKeys)&&F4(this.query,t.query)&&this.docs.isEqual(t.docs)&&this.oldDocs.isEqual(t.oldDocs)))return!1;const n=this.docChanges,s=t.docChanges;if(n.length!==s.length)return!1;for(let i=0;i<n.length;i++)if(n[i].type!==s[i].type||!n[i].doc.isEqual(s[i].doc))return!1;return!0}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class jd{constructor(){this.Iu=void 0,this.listeners=[]}}class Hd{constructor(){this.queries=new yt(t=>Ti(t),F4),this.onlineState="Unknown",this.Tu=new Set}}async function Kd(e,t){const n=l1(e),s=t.query;let i=!1,r=n.queries.get(s);if(r||(i=!0,r=new jd),i)try{r.Iu=await n.onListen(s)}catch(o){const l=Wi(o,`Initialization of query '${s6(t.query)}' failed`);return void t.onError(l)}n.queries.set(s,r),r.listeners.push(t),t.Eu(n.onlineState),r.Iu&&t.Au(r.Iu)&&Sn(n)}async function qd(e,t){const n=l1(e),s=t.query;let i=!1;const r=n.queries.get(s);if(r){const o=r.listeners.indexOf(t);o>=0&&(r.listeners.splice(o,1),i=r.listeners.length===0)}if(i)return n.queries.delete(s),n.onUnlisten(s)}function Gd(e,t){const n=l1(e);let s=!1;for(const i of t){const r=i.query,o=n.queries.get(r);if(o){for(const l of o.listeners)l.Au(i)&&(s=!0);o.Iu=i}}s&&Sn(n)}function Wd(e,t,n){const s=l1(e),i=s.queries.get(t);if(i)for(const r of i.listeners)r.onError(n);s.queries.delete(t)}function Sn(e){e.Tu.forEach(t=>{t.next()})}class Qd{constructor(t,n,s){this.query=t,this.Ru=n,this.bu=!1,this.Pu=null,this.onlineState="Unknown",this.options=s||{}}Au(t){if(!this.options.includeMetadataChanges){const s=[];for(const i of t.docChanges)i.type!==3&&s.push(i);t=new at(t.query,t.docs,t.oldDocs,s,t.mutatedKeys,t.fromCache,t.syncStateChanged,!0)}let n=!1;return this.bu?this.vu(t)&&(this.Ru.next(t),n=!0):this.Vu(t,this.onlineState)&&(this.Su(t),n=!0),this.Pu=t,n}onError(t){this.Ru.error(t)}Eu(t){this.onlineState=t;let n=!1;return this.Pu&&!this.bu&&this.Vu(this.Pu,t)&&(this.Su(this.Pu),n=!0),n}Vu(t,n){if(!t.fromCache)return!0;const s=n!=="Offline";return(!this.options.Du||!s)&&(!t.docs.isEmpty()||n==="Offline")}vu(t){if(t.docChanges.length>0)return!0;const n=this.Pu&&this.Pu.hasPendingWrites!==t.hasPendingWrites;return!(!t.syncStateChanged&&!n)&&this.options.includeMetadataChanges===!0}Su(t){t=at.fromInitialDocuments(t.query,t.docs,t.mutatedKeys,t.fromCache),this.bu=!0,this.Ru.next(t)}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Qi{constructor(t){this.key=t}}class Xi{constructor(t){this.key=t}}class Xd{constructor(t,n){this.query=t,this.Fu=n,this.$u=null,this.current=!1,this.Bu=o1(),this.mutatedKeys=o1(),this.Lu=xi(t),this.Uu=new J3(this.Lu)}get qu(){return this.Fu}Ku(t,n){const s=n?n.Gu:new E8,i=n?n.Uu:this.Uu;let r=n?n.mutatedKeys:this.mutatedKeys,o=i,l=!1;const a=this.query.limitType==="F"&&i.size===this.query.limit?i.last():null,c=this.query.limitType==="L"&&i.size===this.query.limit?i.first():null;if(t.inorderTraversal((u,h)=>{const f=i.get(u),m=vn(this.query,h)?h:null,v=!!f&&this.mutatedKeys.has(f.key),A=!!m&&(m.hasLocalMutations||this.mutatedKeys.has(m.key)&&m.hasCommittedMutations);let x=!1;f&&m?f.data.isEqual(m.data)?v!==A&&(s.track({type:3,doc:m}),x=!0):this.Qu(f,m)||(s.track({type:2,doc:m}),x=!0,(a&&this.Lu(m,a)>0||c&&this.Lu(m,c)<0)&&(l=!0)):!f&&m?(s.track({type:0,doc:m}),x=!0):f&&!m&&(s.track({type:1,doc:f}),x=!0,(a||c)&&(l=!0)),x&&(m?(o=o.add(m),r=A?r.add(u):r.delete(u)):(o=o.delete(u),r=r.delete(u)))}),this.query.limit!==null)for(;o.size>this.query.limit;){const u=this.query.limitType==="F"?o.last():o.first();o=o.delete(u.key),r=r.delete(u.key),s.track({type:1,doc:u})}return{Uu:o,Gu:s,Oi:l,mutatedKeys:r}}Qu(t,n){return t.hasLocalMutations&&n.hasCommittedMutations&&!n.hasLocalMutations}applyChanges(t,n,s){const i=this.Uu;this.Uu=t.Uu,this.mutatedKeys=t.mutatedKeys;const r=t.Gu.pu();r.sort((c,u)=>function(h,f){const m=v=>{switch(v){case 0:return 1;case 2:case 3:return 2;case 1:return 0;default:return t1()}};return m(h)-m(f)}(c.type,u.type)||this.Lu(c.doc,u.doc)),this.ju(s);const o=n?this.Wu():[],l=this.Bu.size===0&&this.current?1:0,a=l!==this.$u;return this.$u=l,r.length!==0||a?{snapshot:new at(this.query,t.Uu,i,r,t.mutatedKeys,l===0,a,!1),zu:o}:{zu:o}}Eu(t){return this.current&&t==="Offline"?(this.current=!1,this.applyChanges({Uu:this.Uu,Gu:new E8,mutatedKeys:this.mutatedKeys,Oi:!1},!1)):{zu:[]}}Hu(t){return!this.Fu.has(t)&&!!this.Uu.has(t)&&!this.Uu.get(t).hasLocalMutations}ju(t){t&&(t.addedDocuments.forEach(n=>this.Fu=this.Fu.add(n)),t.modifiedDocuments.forEach(n=>{}),t.removedDocuments.forEach(n=>this.Fu=this.Fu.delete(n)),this.current=t.current)}Wu(){if(!this.current)return[];const t=this.Bu;this.Bu=o1(),this.Uu.forEach(s=>{this.Hu(s.key)&&(this.Bu=this.Bu.add(s.key))});const n=[];return t.forEach(s=>{this.Bu.has(s)||n.push(new Xi(s))}),this.Bu.forEach(s=>{t.has(s)||n.push(new Qi(s))}),n}Ju(t){this.Fu=t.ji,this.Bu=o1();const n=this.Ku(t.documents);return this.applyChanges(n,!0)}Yu(){return at.fromInitialDocuments(this.query,this.Uu,this.mutatedKeys,this.$u===0)}}class Yd{constructor(t,n,s){this.query=t,this.targetId=n,this.view=s}}class Jd{constructor(t){this.key=t,this.Xu=!1}}class Zd{constructor(t,n,s,i,r,o){this.localStore=t,this.remoteStore=n,this.eventManager=s,this.sharedClientState=i,this.currentUser=r,this.maxConcurrentLimboResolutions=o,this.Zu={},this.tc=new yt(l=>Ti(l),F4),this.ec=new Map,this.nc=new Set,this.sc=new F1($.comparator),this.ic=new Map,this.rc=new En,this.oc={},this.uc=new Map,this.cc=lt.Rn(),this.onlineState="Unknown",this.ac=void 0}get isPrimaryClient(){return this.ac===!0}}async function tp(e,t){const n=lp(e);let s,i;const r=n.tc.get(t);if(r)s=r.targetId,n.sharedClientState.addLocalQueryTarget(s),i=r.view.Yu();else{const o=await Sd(n.localStore,A3(t));n.isPrimaryClient&&Hi(n.remoteStore,o);const l=n.sharedClientState.addLocalQueryTarget(o.targetId);s=o.targetId,i=await ep(n,t,s,l==="current")}return i}async function ep(e,t,n,s){e.hc=(u,h,f)=>async function(m,v,A,x){let S=v.view.Ku(A);S.Oi&&(S=await m8(m.localStore,v.query,!1).then(({documents:U})=>v.view.Ku(U,S)));const _=x&&x.targetChanges.get(v.targetId),O=v.view.applyChanges(S,m.isPrimaryClient,_);return _8(m,v.targetId,O.zu),O.snapshot}(e,u,h,f);const i=await m8(e.localStore,t,!0),r=new Xd(t,i.ji),o=r.Ku(i.documents),l=me.createSynthesizedTargetChangeForCurrentChange(n,s&&e.onlineState!=="Offline"),a=r.applyChanges(o,e.isPrimaryClient,l);_8(e,n,a.zu);const c=new Yd(t,n,r);return e.tc.set(t,c),e.ec.has(n)?e.ec.get(n).push(t):e.ec.set(n,[t]),a.snapshot}async function np(e,t){const n=l1(e),s=n.tc.get(t),i=n.ec.get(s.targetId);if(i.length>1)return n.ec.set(s.targetId,i.filter(r=>!F4(r,t))),void n.tc.delete(t);n.isPrimaryClient?(n.sharedClientState.removeLocalQueryTarget(s.targetId),n.sharedClientState.isActiveQueryTarget(s.targetId)||await l6(n.localStore,s.targetId,!1).then(()=>{n.sharedClientState.clearQueryState(s.targetId),Ki(n.remoteStore,s.targetId),a6(n,s.targetId)}).catch(hn)):(a6(n,s.targetId),await l6(n.localStore,s.targetId,!0))}async function Yi(e,t){const n=l1(e);try{const s=await Cd(n.localStore,t);t.targetChanges.forEach((i,r)=>{const o=n.ic.get(r);o&&(N1(i.addedDocuments.size+i.modifiedDocuments.size+i.removedDocuments.size<=1),i.addedDocuments.size>0?o.Xu=!0:i.modifiedDocuments.size>0?N1(o.Xu):i.removedDocuments.size>0&&(N1(o.Xu),o.Xu=!1))}),await Zi(n,s,t)}catch(s){await hn(s)}}function b8(e,t,n){const s=l1(e);if(s.isPrimaryClient&&n===0||!s.isPrimaryClient&&n===1){const i=[];s.tc.forEach((r,o)=>{const l=o.view.Eu(t);l.snapshot&&i.push(l.snapshot)}),function(r,o){const l=l1(r);l.onlineState=o;let a=!1;l.queries.forEach((c,u)=>{for(const h of u.listeners)h.Eu(o)&&(a=!0)}),a&&Sn(l)}(s.eventManager,t),i.length&&s.Zu.Go(i),s.onlineState=t,s.isPrimaryClient&&s.sharedClientState.setOnlineState(t)}}async function sp(e,t,n){const s=l1(e);s.sharedClientState.updateQueryState(t,"rejected",n);const i=s.ic.get(t),r=i&&i.key;if(r){let o=new F1($.comparator);o=o.insert(r,V1.newNoDocument(r,Z.min()));const l=o1().add(r),a=new $4(Z.min(),new Map,new R1(h1),o,l);await Yi(s,a),s.sc=s.sc.remove(r),s.ic.delete(t),An(s)}else await l6(s.localStore,t,!1).then(()=>a6(s,t,n)).catch(hn)}function a6(e,t,n=null){e.sharedClientState.removeLocalQueryTarget(t);for(const s of e.ec.get(t))e.tc.delete(s),n&&e.Zu.lc(s,n);e.ec.delete(t),e.isPrimaryClient&&e.rc.us(t).forEach(s=>{e.rc.containsKey(s)||Ji(e,s)})}function Ji(e,t){e.nc.delete(t.path.canonicalString());const n=e.sc.get(t);n!==null&&(Ki(e.remoteStore,n),e.sc=e.sc.remove(t),e.ic.delete(n),An(e))}function _8(e,t,n){for(const s of n)s instanceof Qi?(e.rc.addReference(s.key,t),ip(e,s)):s instanceof Xi?(F("SyncEngine","Document no longer in limbo: "+s.key),e.rc.removeReference(s.key,t),e.rc.containsKey(s.key)||Ji(e,s.key)):t1()}function ip(e,t){const n=t.key,s=n.path.canonicalString();e.sc.get(n)||e.nc.has(s)||(F("SyncEngine","New document in limbo: "+n),e.nc.add(s),An(e))}function An(e){for(;e.nc.size>0&&e.sc.size<e.maxConcurrentLimboResolutions;){const t=e.nc.values().next().value;e.nc.delete(t);const n=new $(C1.fromString(t)),s=e.cc.next();e.ic.set(s,new Jd(n)),e.sc=e.sc.insert(n,s),Hi(e.remoteStore,new _3(A3(gn(n.path)),s,2,fn.ot))}}async function Zi(e,t,n){const s=l1(e),i=[],r=[],o=[];s.tc.isEmpty()||(s.tc.forEach((l,a)=>{o.push(s.hc(a,t,n).then(c=>{if(c){s.isPrimaryClient&&s.sharedClientState.updateQueryState(a.targetId,c.fromCache?"not-current":"current"),i.push(c);const u=_n.Vi(a.targetId,c);r.push(u)}}))}),await Promise.all(o),s.Zu.Go(i),await async function(l,a){const c=l1(l);try{await c.persistence.runTransaction("notifyLocalViewChanges","readwrite",u=>T.forEach(a,h=>T.forEach(h.Pi,f=>c.persistence.referenceDelegate.addReference(u,h.targetId,f)).next(()=>T.forEach(h.vi,f=>c.persistence.referenceDelegate.removeReference(u,h.targetId,f)))))}catch(u){if(!pe(u))throw u;F("LocalStore","Failed to update sequence numbers: "+u)}for(const u of a){const h=u.targetId;if(!u.fromCache){const f=c.$i.get(h),m=f.snapshotVersion,v=f.withLastLimboFreeSnapshotVersion(m);c.$i=c.$i.insert(h,v)}}}(s.localStore,r))}async function rp(e,t){const n=l1(e);if(!n.currentUser.isEqual(t)){F("SyncEngine","User change. New user:",t.toKey());const s=await Vi(n.localStore,t);n.currentUser=t,function(i,r){i.uc.forEach(o=>{o.forEach(l=>{l.reject(new j(k.CANCELLED,r))})}),i.uc.clear()}(n,"'waitForPendingWrites' promise is rejected due to a user change."),n.sharedClientState.handleUserChange(t,s.removedBatchIds,s.addedBatchIds),await Zi(n,s.Ki)}}function op(e,t){const n=l1(e),s=n.ic.get(t);if(s&&s.Xu)return o1().add(s.key);{let i=o1();const r=n.ec.get(t);if(!r)return i;for(const o of r){const l=n.tc.get(o);i=i.unionWith(l.view.qu)}return i}}function lp(e){const t=l1(e);return t.remoteStore.remoteSyncer.applyRemoteEvent=Yi.bind(null,t),t.remoteStore.remoteSyncer.getRemoteKeysForTarget=op.bind(null,t),t.remoteStore.remoteSyncer.rejectListen=sp.bind(null,t),t.Zu.Go=Gd.bind(null,t.eventManager),t.Zu.lc=Wd.bind(null,t.eventManager),t}class ap{constructor(){this.synchronizeTabs=!1}async initialize(t){this.wt=Ui(t.databaseInfo.databaseId),this.sharedClientState=this.dc(t),this.persistence=this._c(t),await this.persistence.start(),this.localStore=this.wc(t),this.gcScheduler=this.mc(t,this.localStore),this.indexBackfillerScheduler=this.gc(t,this.localStore)}mc(t,n){return null}gc(t,n){return null}wc(t){return xd(this.persistence,new _d,t.initialUser,this.wt)}_c(t){return new Ed(bn.Ms,this.wt)}dc(t){return new Nd}async terminate(){this.gcScheduler&&this.gcScheduler.stop(),await this.sharedClientState.shutdown(),await this.persistence.shutdown()}}class cp{async initialize(t,n){this.localStore||(this.localStore=t.localStore,this.sharedClientState=t.sharedClientState,this.datastore=this.createDatastore(n),this.remoteStore=this.createRemoteStore(n),this.eventManager=this.createEventManager(n),this.syncEngine=this.createSyncEngine(n,!t.synchronizeTabs),this.sharedClientState.onlineStateHandler=s=>b8(this.syncEngine,s,1),this.remoteStore.remoteSyncer.handleCredentialChange=rp.bind(null,this.syncEngine),await Ud(this.remoteStore,this.syncEngine.isPrimaryClient))}createEventManager(t){return new Hd}createDatastore(t){const n=Ui(t.databaseInfo.databaseId),s=(i=t.databaseInfo,new Od(i));var i;return function(r,o,l,a){return new zd(r,o,l,a)}(t.authCredentials,t.appCheckCredentials,s,n)}createRemoteStore(t){return n=this.localStore,s=this.datastore,i=t.asyncQueue,r=l=>b8(this.syncEngine,l,0),o=v8.V()?new v8:new Dd,new Fd(n,s,i,r,o);var n,s,i,r,o}createSyncEngine(t,n){return function(s,i,r,o,l,a,c){const u=new Zd(s,i,r,o,l,a);return c&&(u.ac=!0),u}(this.localStore,this.remoteStore,this.eventManager,this.sharedClientState,t.initialUser,t.maxConcurrentLimboResolutions,n)}terminate(){return async function(t){const n=l1(t);F("RemoteStore","RemoteStore shutting down."),n.lu.add(5),await ge(n),n.du.shutdown(),n._u.set("Unknown")}(this.remoteStore)}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class up{constructor(t){this.observer=t,this.muted=!1}next(t){this.observer.next&&this.Ic(this.observer.next,t)}error(t){this.observer.error?this.Ic(this.observer.error,t):console.error("Uncaught Error in snapshot listener:",t)}Tc(){this.muted=!0}Ic(t,n){this.muted||setTimeout(()=>{this.muted||t(n)},0)}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class hp{constructor(t,n,s,i){this.authCredentials=t,this.appCheckCredentials=n,this.asyncQueue=s,this.databaseInfo=i,this.user=t2.UNAUTHENTICATED,this.clientId=wi.I(),this.authCredentialListener=()=>Promise.resolve(),this.appCheckCredentialListener=()=>Promise.resolve(),this.authCredentials.start(s,async r=>{F("FirestoreClient","Received user=",r.uid),await this.authCredentialListener(r),this.user=r}),this.appCheckCredentials.start(s,r=>(F("FirestoreClient","Received new app check token=",r),this.appCheckCredentialListener(r,this.user)))}async getConfiguration(){return{asyncQueue:this.asyncQueue,databaseInfo:this.databaseInfo,clientId:this.clientId,authCredentials:this.authCredentials,appCheckCredentials:this.appCheckCredentials,initialUser:this.user,maxConcurrentLimboResolutions:100}}setCredentialChangeListener(t){this.authCredentialListener=t}setAppCheckTokenChangeListener(t){this.appCheckCredentialListener=t}verifyNotTerminated(){if(this.asyncQueue.isShuttingDown)throw new j(k.FAILED_PRECONDITION,"The client has already been terminated.")}terminate(){this.asyncQueue.enterRestrictedMode();const t=new w3;return this.asyncQueue.enqueueAndForgetEvenWhileRestricted(async()=>{try{this.onlineComponents&&await this.onlineComponents.terminate(),this.offlineComponents&&await this.offlineComponents.terminate(),this.authCredentials.shutdown(),this.appCheckCredentials.shutdown(),t.resolve()}catch(n){const s=Wi(n,"Failed to shutdown persistence");t.reject(s)}}),t.promise}}async function fp(e,t){e.asyncQueue.verifyOperationInProgress(),F("FirestoreClient","Initializing OfflineComponentProvider");const n=await e.getConfiguration();await t.initialize(n);let s=n.initialUser;e.setCredentialChangeListener(async i=>{s.isEqual(i)||(await Vi(t.localStore,i),s=i)}),t.persistence.setDatabaseDeletedListener(()=>e.terminate()),e.offlineComponents=t}async function dp(e,t){e.asyncQueue.verifyOperationInProgress();const n=await pp(e);F("FirestoreClient","Initializing OnlineComponentProvider");const s=await e.getConfiguration();await t.initialize(n,s),e.setCredentialChangeListener(i=>w8(t.remoteStore,i)),e.setAppCheckTokenChangeListener((i,r)=>w8(t.remoteStore,r)),e.onlineComponents=t}async function pp(e){return e.offlineComponents||(F("FirestoreClient","Using default OfflineComponentProvider"),await fp(e,new ap)),e.offlineComponents}async function mp(e){return e.onlineComponents||(F("FirestoreClient","Using default OnlineComponentProvider"),await dp(e,new cp)),e.onlineComponents}async function gp(e){const t=await mp(e),n=t.eventManager;return n.onListen=tp.bind(null,t.syncEngine),n.onUnlisten=np.bind(null,t.syncEngine),n}function vp(e,t,n={}){const s=new w3;return e.asyncQueue.enqueueAndForget(async()=>function(i,r,o,l,a){const c=new up({next:h=>{r.enqueueAndForget(()=>qd(i,u));const f=h.docs.has(o);!f&&h.fromCache?a.reject(new j(k.UNAVAILABLE,"Failed to get document because the client is offline.")):f&&h.fromCache&&l&&l.source==="server"?a.reject(new j(k.UNAVAILABLE,'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to "server" to retrieve the cached document.)')):a.resolve(h)},error:h=>a.reject(h)}),u=new Qd(gn(o.path),c,{includeMetadataChanges:!0,Du:!0});return Kd(i,u)}(await gp(e),e.asyncQueue,t,n,s)),s.promise}const T8=new Map;/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function tr(e,t,n){if(!n)throw new j(k.INVALID_ARGUMENT,`Function ${e}() cannot be called with an empty ${t}.`)}function yp(e,t,n,s){if(t===!0&&s===!0)throw new j(k.INVALID_ARGUMENT,`${e} and ${n} cannot be used together.`)}function x8(e){if(!$.isDocumentKey(e))throw new j(k.INVALID_ARGUMENT,`Invalid document reference. Document references must have an even number of segments, but ${e} has ${e.length}.`)}function C8(e){if($.isDocumentKey(e))throw new j(k.INVALID_ARGUMENT,`Invalid collection reference. Collection references must have an odd number of segments, but ${e} has ${e.length}.`)}function wp(e){if(e===void 0)return"undefined";if(e===null)return"null";if(typeof e=="string")return e.length>20&&(e=`${e.substring(0,20)}...`),JSON.stringify(e);if(typeof e=="number"||typeof e=="boolean")return""+e;if(typeof e=="object"){if(e instanceof Array)return"an array";{const t=function(n){return n.constructor?n.constructor.name:null}(e);return t?`a custom ${t} object`:"an object"}}return typeof e=="function"?"a function":t1()}function I8(e,t){if("_delegate"in e&&(e=e._delegate),!(e instanceof t)){if(t.name===e.constructor.name)throw new j(k.INVALID_ARGUMENT,"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?");{const n=wp(e);throw new j(k.INVALID_ARGUMENT,`Expected type '${t.name}', but it was: ${n}`)}}return e}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class S8{constructor(t){var n;if(t.host===void 0){if(t.ssl!==void 0)throw new j(k.INVALID_ARGUMENT,"Can't provide ssl option if host option is not set");this.host="firestore.googleapis.com",this.ssl=!0}else this.host=t.host,this.ssl=(n=t.ssl)===null||n===void 0||n;if(this.credentials=t.credentials,this.ignoreUndefinedProperties=!!t.ignoreUndefinedProperties,t.cacheSizeBytes===void 0)this.cacheSizeBytes=41943040;else{if(t.cacheSizeBytes!==-1&&t.cacheSizeBytes<1048576)throw new j(k.INVALID_ARGUMENT,"cacheSizeBytes must be at least 1048576");this.cacheSizeBytes=t.cacheSizeBytes}this.experimentalForceLongPolling=!!t.experimentalForceLongPolling,this.experimentalAutoDetectLongPolling=!!t.experimentalAutoDetectLongPolling,this.useFetchStreams=!!t.useFetchStreams,yp("experimentalForceLongPolling",t.experimentalForceLongPolling,"experimentalAutoDetectLongPolling",t.experimentalAutoDetectLongPolling)}isEqual(t){return this.host===t.host&&this.ssl===t.ssl&&this.credentials===t.credentials&&this.cacheSizeBytes===t.cacheSizeBytes&&this.experimentalForceLongPolling===t.experimentalForceLongPolling&&this.experimentalAutoDetectLongPolling===t.experimentalAutoDetectLongPolling&&this.ignoreUndefinedProperties===t.ignoreUndefinedProperties&&this.useFetchStreams===t.useFetchStreams}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Nn{constructor(t,n,s){this._authCredentials=n,this._appCheckCredentials=s,this.type="firestore-lite",this._persistenceKey="(lite)",this._settings=new S8({}),this._settingsFrozen=!1,t instanceof rt?this._databaseId=t:(this._app=t,this._databaseId=function(i){if(!Object.prototype.hasOwnProperty.apply(i.options,["projectId"]))throw new j(k.INVALID_ARGUMENT,'"projectId" not provided in firebase.initializeApp.');return new rt(i.options.projectId)}(t))}get app(){if(!this._app)throw new j(k.FAILED_PRECONDITION,"Firestore was not initialized using the Firebase SDK. 'app' is not available");return this._app}get _initialized(){return this._settingsFrozen}get _terminated(){return this._terminateTask!==void 0}_setSettings(t){if(this._settingsFrozen)throw new j(k.FAILED_PRECONDITION,"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.");this._settings=new S8(t),t.credentials!==void 0&&(this._authCredentials=function(n){if(!n)return new Gh;switch(n.type){case"gapi":const s=n.client;return N1(!(typeof s!="object"||s===null||!s.auth||!s.auth.getAuthHeaderValueForFirstParty)),new Xh(s,n.sessionIndex||"0",n.iamToken||null);case"provider":return n.client;default:throw new j(k.INVALID_ARGUMENT,"makeAuthCredentialsProvider failed due to invalid credential type")}}(t.credentials))}_getSettings(){return this._settings}_freezeSettings(){return this._settingsFrozen=!0,this._settings}_delete(){return this._terminateTask||(this._terminateTask=this._terminate()),this._terminateTask}toJSON(){return{app:this._app,databaseId:this._databaseId,settings:this._settings}}_terminate(){return function(t){const n=T8.get(t);n&&(F("ComponentProvider","Removing Datastore"),T8.delete(t),n.terminate())}(this),Promise.resolve()}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class R2{constructor(t,n,s){this.converter=n,this._key=s,this.type="document",this.firestore=t}get _path(){return this._key.path}get id(){return this._key.path.lastSegment()}get path(){return this._key.path.canonicalString()}get parent(){return new Z2(this.firestore,this.converter,this._key.path.popLast())}withConverter(t){return new R2(this.firestore,t,this._key)}}class Dn{constructor(t,n,s){this.converter=n,this._query=s,this.type="query",this.firestore=t}withConverter(t){return new Dn(this.firestore,t,this._query)}}class Z2 extends Dn{constructor(t,n,s){super(t,n,gn(s)),this._path=s,this.type="collection"}get id(){return this._query.path.lastSegment()}get path(){return this._query.path.canonicalString()}get parent(){const t=this._path.popLast();return t.isEmpty()?null:new R2(this.firestore,null,new $(t))}withConverter(t){return new Z2(this.firestore,t,this._path)}}function Ep(e,t,...n){if(e=f9(e),tr("collection","path",t),e instanceof Nn){const s=C1.fromString(t,...n);return C8(s),new Z2(e,null,s)}{if(!(e instanceof R2||e instanceof Z2))throw new j(k.INVALID_ARGUMENT,"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore");const s=e._path.child(C1.fromString(t,...n));return C8(s),new Z2(e.firestore,null,s)}}function Gp(e,t,...n){if(e=f9(e),arguments.length===1&&(t=wi.I()),tr("doc","path",t),e instanceof Nn){const s=C1.fromString(t,...n);return x8(s),new R2(e,null,new $(s))}{if(!(e instanceof R2||e instanceof Z2))throw new j(k.INVALID_ARGUMENT,"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore");const s=e._path.child(C1.fromString(t,...n));return x8(s),new R2(e.firestore,e instanceof Z2?e.converter:null,new $(s))}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class bp{constructor(){this.Oc=Promise.resolve(),this.Mc=[],this.Fc=!1,this.$c=[],this.Bc=null,this.Lc=!1,this.Uc=!1,this.qc=[],this.So=new ji(this,"async_queue_retry"),this.Kc=()=>{const n=d5();n&&F("AsyncQueue","Visibility state changed to "+n.visibilityState),this.So.Eo()};const t=d5();t&&typeof t.addEventListener=="function"&&t.addEventListener("visibilitychange",this.Kc)}get isShuttingDown(){return this.Fc}enqueueAndForget(t){this.enqueue(t)}enqueueAndForgetEvenWhileRestricted(t){this.Gc(),this.Qc(t)}enterRestrictedMode(t){if(!this.Fc){this.Fc=!0,this.Uc=t||!1;const n=d5();n&&typeof n.removeEventListener=="function"&&n.removeEventListener("visibilitychange",this.Kc)}}enqueue(t){if(this.Gc(),this.Fc)return new Promise(()=>{});const n=new w3;return this.Qc(()=>this.Fc&&this.Uc?Promise.resolve():(t().then(n.resolve,n.reject),n.promise)).then(()=>n.promise)}enqueueRetryable(t){this.enqueueAndForget(()=>(this.Mc.push(t),this.jc()))}async jc(){if(this.Mc.length!==0){try{await this.Mc[0](),this.Mc.shift(),this.So.reset()}catch(t){if(!pe(t))throw t;F("AsyncQueue","Operation failed with retryable error: "+t)}this.Mc.length>0&&this.So.Io(()=>this.jc())}}Qc(t){const n=this.Oc.then(()=>(this.Lc=!0,t().catch(s=>{this.Bc=s,this.Lc=!1;const i=function(r){let o=r.message||"";return r.stack&&(o=r.stack.includes(r.message)?r.stack:r.message+`
`+r.stack),o}(s);throw s3("INTERNAL UNHANDLED ERROR: ",i),s}).then(s=>(this.Lc=!1,s))));return this.Oc=n,n}enqueueAfterDelay(t,n,s){this.Gc(),this.qc.indexOf(t)>-1&&(n=0);const i=In.createAndSchedule(this,t,n,s,r=>this.Wc(r));return this.$c.push(i),i}Gc(){this.Bc&&t1()}verifyOperationInProgress(){}async zc(){let t;do t=this.Oc,await t;while(t!==this.Oc)}Hc(t){for(const n of this.$c)if(n.timerId===t)return!0;return!1}Jc(t){return this.zc().then(()=>{this.$c.sort((n,s)=>n.targetTimeMs-s.targetTimeMs);for(const n of this.$c)if(n.skipDelay(),t!=="all"&&n.timerId===t)break;return this.zc()})}Yc(t){this.qc.push(t)}Wc(t){const n=this.$c.indexOf(t);this.$c.splice(n,1)}}class er extends Nn{constructor(t,n,s){super(t,n,s),this.type="firestore",this._queue=new bp,this._persistenceKey="name"in t?t.name:"[DEFAULT]"}_terminate(){return this._firestoreClient||nr(this),this._firestoreClient.terminate()}}function _p(e=Du()){return Cu(e,"firestore").getImmediate()}function Tp(e){return e._firestoreClient||nr(e),e._firestoreClient.verifyNotTerminated(),e._firestoreClient}function nr(e){var t;const n=e._freezeSettings(),s=function(i,r,o,l){return new cf(i,r,o,l.host,l.ssl,l.experimentalForceLongPolling,l.experimentalAutoDetectLongPolling,l.useFetchStreams)}(e._databaseId,((t=e._app)===null||t===void 0?void 0:t.options.appId)||"",e._persistenceKey,n);e._firestoreClient=new hp(e._authCredentials,e._appCheckCredentials,e._queue,s)}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class sr{constructor(...t){for(let n=0;n<t.length;++n)if(t[n].length===0)throw new j(k.INVALID_ARGUMENT,"Invalid field name at argument $(i + 1). Field names must not be empty.");this._internalPath=new e2(t)}isEqual(t){return this._internalPath.isEqual(t._internalPath)}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class r4{constructor(t){this._byteString=t}static fromBase64String(t){try{return new r4(j1.fromBase64String(t))}catch(n){throw new j(k.INVALID_ARGUMENT,"Failed to construct data from Base64 string: "+n)}}static fromUint8Array(t){return new r4(j1.fromUint8Array(t))}toBase64(){return this._byteString.toBase64()}toUint8Array(){return this._byteString.toUint8Array()}toString(){return"Bytes(base64: "+this.toBase64()+")"}isEqual(t){return this._byteString.isEqual(t._byteString)}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class xp{constructor(t,n){if(!isFinite(t)||t<-90||t>90)throw new j(k.INVALID_ARGUMENT,"Latitude must be a number between -90 and 90, but was: "+t);if(!isFinite(n)||n<-180||n>180)throw new j(k.INVALID_ARGUMENT,"Longitude must be a number between -180 and 180, but was: "+n);this._lat=t,this._long=n}get latitude(){return this._lat}get longitude(){return this._long}isEqual(t){return this._lat===t._lat&&this._long===t._long}toJSON(){return{latitude:this._lat,longitude:this._long}}_compareTo(t){return h1(this._lat,t._lat)||h1(this._long,t._long)}}const Cp=new RegExp("[~\\*/\\[\\]]");function Ip(e,t,n){if(t.search(Cp)>=0)throw A8(`Invalid field path (${t}). Paths must not contain '~', '*', '/', '[', or ']'`,e,!1,void 0,n);try{return new sr(...t.split("."))._internalPath}catch{throw A8(`Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`,e,!1,void 0,n)}}function A8(e,t,n,s,i){const r=s&&!s.isEmpty(),o=i!==void 0;let l=`Function ${t}() called with invalid data`;n&&(l+=" (via `toFirestore()`)"),l+=". ";let a="";return(r||o)&&(a+=" (found",r&&(a+=` in field ${s}`),o&&(a+=` in document ${i}`),a+=")"),new j(k.INVALID_ARGUMENT,l+e+a)}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class ir{constructor(t,n,s,i,r){this._firestore=t,this._userDataWriter=n,this._key=s,this._document=i,this._converter=r}get id(){return this._key.path.lastSegment()}get ref(){return new R2(this._firestore,this._converter,this._key)}exists(){return this._document!==null}data(){if(this._document){if(this._converter){const t=new Sp(this._firestore,this._userDataWriter,this._key,this._document,null);return this._converter.fromFirestore(t)}return this._userDataWriter.convertValue(this._document.data.value)}}get(t){if(this._document){const n=this._document.data.field(rr("DocumentSnapshot.get",t));if(n!==null)return this._userDataWriter.convertValue(n)}}}class Sp extends ir{data(){return super.data()}}function rr(e,t){return typeof t=="string"?Ip(e,t):t instanceof sr?t._internalPath:t._delegate._internalPath}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Ap{constructor(t,n){this.hasPendingWrites=t,this.fromCache=n}isEqual(t){return this.hasPendingWrites===t.hasPendingWrites&&this.fromCache===t.fromCache}}class or extends ir{constructor(t,n,s,i,r,o){super(t,n,s,i,o),this._firestore=t,this._firestoreImpl=t,this.metadata=r}exists(){return super.exists()}data(t={}){if(this._document){if(this._converter){const n=new Np(this._firestore,this._userDataWriter,this._key,this._document,this.metadata,null);return this._converter.fromFirestore(n,t)}return this._userDataWriter.convertValue(this._document.data.value,t.serverTimestamps)}}get(t,n={}){if(this._document){const s=this._document.data.field(rr("DocumentSnapshot.get",t));if(s!==null)return this._userDataWriter.convertValue(s,n.serverTimestamps)}}}class Np extends or{data(t={}){return super.data(t)}}function Dp(e,...t){for(const n of t)e=n._apply(e);return e}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class kp{convertValue(t,n="none"){switch(S3(t)){case 0:return null;case 1:return t.booleanValue;case 2:return A1(t.integerValue||t.doubleValue);case 3:return this.convertTimestamp(t.timestampValue);case 4:return this.convertServerTimestamp(t,n);case 5:return t.stringValue;case 6:return this.convertBytes(it(t.bytesValue));case 7:return this.convertReference(t.referenceValue);case 8:return this.convertGeoPoint(t.geoPointValue);case 9:return this.convertArray(t.arrayValue,n);case 10:return this.convertObject(t.mapValue,n);default:throw t1()}}convertObject(t,n){const s={};return P4(t.fields,(i,r)=>{s[i]=this.convertValue(r,n)}),s}convertGeoPoint(t){return new xp(A1(t.latitude),A1(t.longitude))}convertArray(t,n){return(t.values||[]).map(s=>this.convertValue(s,n))}convertServerTimestamp(t,n){switch(n){case"previous":const s=bi(t);return s==null?null:this.convertValue(s,n);case"estimate":return this.convertTimestamp(te(t));default:return null}}convertTimestamp(t){const n=r3(t);return new s2(n.seconds,n.nanos)}convertDocumentKey(t,n){const s=C1.fromString(t);N1(Bi(s));const i=new rt(s.get(1),s.get(3)),r=new $(s.popFirst(5));return i.isEqual(n)||s3(`Document ${r} contains a document reference within a different database (${i.projectId}/${i.database}) which is not supported. It will be treated as a reference in the current database (${n.projectId}/${n.database}) instead.`),r}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function Wp(e){e=I8(e,R2);const t=I8(e.firestore,er);return vp(Tp(t),e._key).then(n=>Op(t,e,n))}class Rp extends kp{constructor(t){super(),this.firestore=t}convertBytes(t){return new r4(t)}convertReference(t){const n=this.convertDocumentKey(t,this.firestore._databaseId);return new R2(this.firestore,null,n)}}function Op(e,t,n){const s=n.docs.get(t._key),i=new Rp(e);return new or(e,i,t._key,s,new Ap(n.hasPendingWrites,n.fromCache),t.converter)}(function(e,t=!0){(function(n){vt=n})(Au),qe(new qt("firestore",(n,{options:s})=>{const i=n.getProvider("app").getImmediate(),r=new er(i,new Wh(n.getProvider("auth-internal")),new Jh(n.getProvider("app-check-internal")));return s=Object.assign({useFetchStreams:t},s),r._setSettings(s),r},"PUBLIC")),X3(X7,"3.4.13",e),X3(X7,"3.4.13","esm2017")})();var Mp="firebase",Pp="9.9.1";/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */X3(Mp,Pp,"app");const zp={apiKey:"AIzaSyDQrRALczyj-WYwP5W092UIdBDTU-IDd04",authDomain:"immalkhawarizmigithubio.firebaseapp.com",databaseURL:"https://immalkhawarizmigithubio-default-rtdb.asia-southeast1.firebasedatabase.app",projectId:"immalkhawarizmigithubio",storageBucket:"immalkhawarizmigithubio.appspot.com",messagingSenderId:"703974537634",appId:"1:703974537634:web:124397319ff9dba9d05afb"},Lp=Nu(zp),Fp=_p(Lp);Dp(Ep(Fp,"users"));const Bp=[{path:"/:catchAll(.*)*",redirect:{name:"home"}},{path:"/",children:[{name:"home",path:"/",component:mc},{name:"signature",path:"/signature/:pattern",component:()=>Te(()=>import("./signature.f50074ee.js"),["file/signature.f50074ee.js","file/signature.31ae83d9.css"])}]},{name:"authentication",path:"/authentication",redirect:{name:"login"},children:[{name:"login",path:"/login",component:()=>Te(()=>import("./Login.aa9aafa4.js"),["file/Login.aa9aafa4.js","file/Login.08e00f24.css"])},{name:"register",path:"/recruitment",component:()=>Te(()=>import("./Register.5a6b360b.js"),["file/Register.5a6b360b.js","file/Register.be3e74b6.css"])}]},{name:"panel",path:"/panel",redirect:{name:"login"},children:[{name:"panel-index",path:"/welcome",component:()=>Te(()=>import("./Index.67e39b9e.js"),["file/Index.67e39b9e.js","file/Index.746dbfd6.css"])}]}],Vp=f0({routes:Bp,history:Sa()}),$p={__name:"App",setup(e){return(t,n)=>{const s=ws("RouterView");return P2(),ks(ho,null,{default:C6(()=>[_1(s)]),_:1})}}},kn=Rl($p);kn.use(oa);kn.use(Vp);kn.mount("#app");export{Gp as D,w2 as F,l9 as _,J as a,jp as b,N3 as c,Hp as d,as as e,Fp as f,_1 as g,g2 as h,l3 as i,o9 as j,Wp as l,P2 as o,ls as p,ft as r,Up as t,qp as u,Kp as w};
